<?xml version="1.0" encoding="utf-8"?>
<container xmlns="http://symfony.com/schema/dic/services" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://symfony.com/schema/dic/services http://symfony.com/schema/dic/services/services-1.0.xsd">
  <parameters>
    <parameter key="kernel.root_dir">D:\wamp64\www\SiteSymfony\SonataBackOffice\app</parameter>
    <parameter key="kernel.project_dir">D:\wamp64\www\SiteSymfony\SonataBackOffice</parameter>
    <parameter key="kernel.environment">dev</parameter>
    <parameter key="kernel.debug">true</parameter>
    <parameter key="kernel.name">app</parameter>
    <parameter key="kernel.cache_dir">D:\wamp64\www\SiteSymfony\SonataBackOffice\var\cache\dev</parameter>
    <parameter key="kernel.logs_dir">D:\wamp64\www\SiteSymfony\SonataBackOffice\var\logs</parameter>
    <parameter key="kernel.bundles" type="collection">
      <parameter key="FrameworkBundle">Symfony\Bundle\FrameworkBundle\FrameworkBundle</parameter>
      <parameter key="SecurityBundle">Symfony\Bundle\SecurityBundle\SecurityBundle</parameter>
      <parameter key="TwigBundle">Symfony\Bundle\TwigBundle\TwigBundle</parameter>
      <parameter key="MonologBundle">Symfony\Bundle\MonologBundle\MonologBundle</parameter>
      <parameter key="SwiftmailerBundle">Symfony\Bundle\SwiftmailerBundle\SwiftmailerBundle</parameter>
      <parameter key="DoctrineBundle">Doctrine\Bundle\DoctrineBundle\DoctrineBundle</parameter>
      <parameter key="SensioFrameworkExtraBundle">Sensio\Bundle\FrameworkExtraBundle\SensioFrameworkExtraBundle</parameter>
      <parameter key="AppBundle">AppBundle\AppBundle</parameter>
      <parameter key="FOSUserBundle">FOS\UserBundle\FOSUserBundle</parameter>
      <parameter key="SonataCoreBundle">Sonata\CoreBundle\SonataCoreBundle</parameter>
      <parameter key="SonataBlockBundle">Sonata\BlockBundle\SonataBlockBundle</parameter>
      <parameter key="KnpMenuBundle">Knp\Bundle\MenuBundle\KnpMenuBundle</parameter>
      <parameter key="SonataDoctrineORMAdminBundle">Sonata\DoctrineORMAdminBundle\SonataDoctrineORMAdminBundle</parameter>
      <parameter key="SonataAdminBundle">Sonata\AdminBundle\SonataAdminBundle</parameter>
      <parameter key="EasyAdminBundle">JavierEguiluz\Bundle\EasyAdminBundle\EasyAdminBundle</parameter>
      <parameter key="SonataEasyExtendsBundle">Sonata\EasyExtendsBundle\SonataEasyExtendsBundle</parameter>
      <parameter key="DebugBundle">Symfony\Bundle\DebugBundle\DebugBundle</parameter>
      <parameter key="WebProfilerBundle">Symfony\Bundle\WebProfilerBundle\WebProfilerBundle</parameter>
      <parameter key="SensioDistributionBundle">Sensio\Bundle\DistributionBundle\SensioDistributionBundle</parameter>
      <parameter key="SensioGeneratorBundle">Sensio\Bundle\GeneratorBundle\SensioGeneratorBundle</parameter>
      <parameter key="WebServerBundle">Symfony\Bundle\WebServerBundle\WebServerBundle</parameter>
    </parameter>
    <parameter key="kernel.bundles_metadata" type="collection">
      <parameter key="FrameworkBundle" type="collection">
        <parameter key="parent">null</parameter>
        <parameter key="path">D:\wamp64\www\SiteSymfony\SonataBackOffice\vendor\symfony\symfony\src\Symfony\Bundle\FrameworkBundle</parameter>
        <parameter key="namespace">Symfony\Bundle\FrameworkBundle</parameter>
      </parameter>
      <parameter key="SecurityBundle" type="collection">
        <parameter key="parent">null</parameter>
        <parameter key="path">D:\wamp64\www\SiteSymfony\SonataBackOffice\vendor\symfony\symfony\src\Symfony\Bundle\SecurityBundle</parameter>
        <parameter key="namespace">Symfony\Bundle\SecurityBundle</parameter>
      </parameter>
      <parameter key="TwigBundle" type="collection">
        <parameter key="parent">null</parameter>
        <parameter key="path">D:\wamp64\www\SiteSymfony\SonataBackOffice\vendor\symfony\symfony\src\Symfony\Bundle\TwigBundle</parameter>
        <parameter key="namespace">Symfony\Bundle\TwigBundle</parameter>
      </parameter>
      <parameter key="MonologBundle" type="collection">
        <parameter key="parent">null</parameter>
        <parameter key="path">D:\wamp64\www\SiteSymfony\SonataBackOffice\vendor\symfony\monolog-bundle</parameter>
        <parameter key="namespace">Symfony\Bundle\MonologBundle</parameter>
      </parameter>
      <parameter key="SwiftmailerBundle" type="collection">
        <parameter key="parent">null</parameter>
        <parameter key="path">D:\wamp64\www\SiteSymfony\SonataBackOffice\vendor\symfony\swiftmailer-bundle</parameter>
        <parameter key="namespace">Symfony\Bundle\SwiftmailerBundle</parameter>
      </parameter>
      <parameter key="DoctrineBundle" type="collection">
        <parameter key="parent">null</parameter>
        <parameter key="path">D:\wamp64\www\SiteSymfony\SonataBackOffice\vendor\doctrine\doctrine-bundle</parameter>
        <parameter key="namespace">Doctrine\Bundle\DoctrineBundle</parameter>
      </parameter>
      <parameter key="SensioFrameworkExtraBundle" type="collection">
        <parameter key="parent">null</parameter>
        <parameter key="path">D:\wamp64\www\SiteSymfony\SonataBackOffice\vendor\sensio\framework-extra-bundle</parameter>
        <parameter key="namespace">Sensio\Bundle\FrameworkExtraBundle</parameter>
      </parameter>
      <parameter key="AppBundle" type="collection">
        <parameter key="parent">FOSUserBundle</parameter>
        <parameter key="path">D:\wamp64\www\SiteSymfony\SonataBackOffice\src\AppBundle</parameter>
        <parameter key="namespace">AppBundle</parameter>
      </parameter>
      <parameter key="FOSUserBundle" type="collection">
        <parameter key="parent">null</parameter>
        <parameter key="path">D:\wamp64\www\SiteSymfony\SonataBackOffice\vendor\friendsofsymfony\user-bundle</parameter>
        <parameter key="namespace">FOS\UserBundle</parameter>
      </parameter>
      <parameter key="SonataCoreBundle" type="collection">
        <parameter key="parent">null</parameter>
        <parameter key="path">D:\wamp64\www\SiteSymfony\SonataBackOffice\vendor\sonata-project\core-bundle</parameter>
        <parameter key="namespace">Sonata\CoreBundle</parameter>
      </parameter>
      <parameter key="SonataBlockBundle" type="collection">
        <parameter key="parent">null</parameter>
        <parameter key="path">D:\wamp64\www\SiteSymfony\SonataBackOffice\vendor\sonata-project\block-bundle</parameter>
        <parameter key="namespace">Sonata\BlockBundle</parameter>
      </parameter>
      <parameter key="KnpMenuBundle" type="collection">
        <parameter key="parent">null</parameter>
        <parameter key="path">D:\wamp64\www\SiteSymfony\SonataBackOffice\vendor\knplabs\knp-menu-bundle</parameter>
        <parameter key="namespace">Knp\Bundle\MenuBundle</parameter>
      </parameter>
      <parameter key="SonataDoctrineORMAdminBundle" type="collection">
        <parameter key="parent">null</parameter>
        <parameter key="path">D:\wamp64\www\SiteSymfony\SonataBackOffice\vendor\sonata-project\doctrine-orm-admin-bundle</parameter>
        <parameter key="namespace">Sonata\DoctrineORMAdminBundle</parameter>
      </parameter>
      <parameter key="SonataAdminBundle" type="collection">
        <parameter key="parent">null</parameter>
        <parameter key="path">D:\wamp64\www\SiteSymfony\SonataBackOffice\vendor\sonata-project\admin-bundle</parameter>
        <parameter key="namespace">Sonata\AdminBundle</parameter>
      </parameter>
      <parameter key="EasyAdminBundle" type="collection">
        <parameter key="parent">null</parameter>
        <parameter key="path">D:\wamp64\www\SiteSymfony\SonataBackOffice\vendor\javiereguiluz\easyadmin-bundle</parameter>
        <parameter key="namespace">JavierEguiluz\Bundle\EasyAdminBundle</parameter>
      </parameter>
      <parameter key="SonataEasyExtendsBundle" type="collection">
        <parameter key="parent">null</parameter>
        <parameter key="path">D:\wamp64\www\SiteSymfony\SonataBackOffice\vendor\sonata-project\easy-extends-bundle</parameter>
        <parameter key="namespace">Sonata\EasyExtendsBundle</parameter>
      </parameter>
      <parameter key="DebugBundle" type="collection">
        <parameter key="parent">null</parameter>
        <parameter key="path">D:\wamp64\www\SiteSymfony\SonataBackOffice\vendor\symfony\symfony\src\Symfony\Bundle\DebugBundle</parameter>
        <parameter key="namespace">Symfony\Bundle\DebugBundle</parameter>
      </parameter>
      <parameter key="WebProfilerBundle" type="collection">
        <parameter key="parent">null</parameter>
        <parameter key="path">D:\wamp64\www\SiteSymfony\SonataBackOffice\vendor\symfony\symfony\src\Symfony\Bundle\WebProfilerBundle</parameter>
        <parameter key="namespace">Symfony\Bundle\WebProfilerBundle</parameter>
      </parameter>
      <parameter key="SensioDistributionBundle" type="collection">
        <parameter key="parent">null</parameter>
        <parameter key="path">D:\wamp64\www\SiteSymfony\SonataBackOffice\vendor\sensio\distribution-bundle</parameter>
        <parameter key="namespace">Sensio\Bundle\DistributionBundle</parameter>
      </parameter>
      <parameter key="SensioGeneratorBundle" type="collection">
        <parameter key="parent">null</parameter>
        <parameter key="path">D:\wamp64\www\SiteSymfony\SonataBackOffice\vendor\sensio\generator-bundle</parameter>
        <parameter key="namespace">Sensio\Bundle\GeneratorBundle</parameter>
      </parameter>
      <parameter key="WebServerBundle" type="collection">
        <parameter key="parent">null</parameter>
        <parameter key="path">D:\wamp64\www\SiteSymfony\SonataBackOffice\vendor\symfony\symfony\src\Symfony\Bundle\WebServerBundle</parameter>
        <parameter key="namespace">Symfony\Bundle\WebServerBundle</parameter>
      </parameter>
    </parameter>
    <parameter key="kernel.charset">UTF-8</parameter>
    <parameter key="kernel.container_class">appDevDebugProjectContainer</parameter>
    <parameter key="database_host">127.0.0.1</parameter>
    <parameter key="database_port">null</parameter>
    <parameter key="database_name">fosuser</parameter>
    <parameter key="database_user">root</parameter>
    <parameter key="database_password">null</parameter>
    <parameter key="mailer_transport">gmail</parameter>
    <parameter key="mailer_host">smtp.gmail.com</parameter>
    <parameter key="mailer_user">assou.mohcine@gmail.com</parameter>
    <parameter key="mailer_password">fslt ypzg qscx hzfy</parameter>
    <parameter key="secret">ThisTokenIsNotSoSecretChangeIt</parameter>
    <parameter key="locale">fr</parameter>
    <parameter key="fragment.renderer.hinclude.global_template">null</parameter>
    <parameter key="fragment.path">/_fragment</parameter>
    <parameter key="kernel.secret">ThisTokenIsNotSoSecretChangeIt</parameter>
    <parameter key="kernel.http_method_override">true</parameter>
    <parameter key="kernel.trusted_hosts" type="collection"/>
    <parameter key="kernel.default_locale">fr</parameter>
    <parameter key="templating.helper.code.file_link_format">null</parameter>
    <parameter key="debug.file_link_format">null</parameter>
    <parameter key="session.metadata.storage_key">_sf2_meta</parameter>
    <parameter key="session.storage.options" type="collection">
      <parameter key="cookie_httponly">true</parameter>
      <parameter key="gc_probability">1</parameter>
    </parameter>
    <parameter key="session.save_path">D:\wamp64\www\SiteSymfony\SonataBackOffice/var/sessions/dev</parameter>
    <parameter key="session.metadata.update_threshold">0</parameter>
    <parameter key="form.type_extension.csrf.enabled">true</parameter>
    <parameter key="form.type_extension.csrf.field_name">_token</parameter>
    <parameter key="templating.loader.cache.path">null</parameter>
    <parameter key="templating.engines" type="collection">
      <parameter>twig</parameter>
    </parameter>
    <parameter key="validator.mapping.cache.prefix"></parameter>
    <parameter key="validator.mapping.cache.file">D:\wamp64\www\SiteSymfony\SonataBackOffice\var\cache\dev/validation.php</parameter>
    <parameter key="validator.translation_domain">validators</parameter>
    <parameter key="translator.logging">true</parameter>
    <parameter key="profiler_listener.only_exceptions">false</parameter>
    <parameter key="profiler_listener.only_master_requests">false</parameter>
    <parameter key="profiler.storage.dsn">file:D:\wamp64\www\SiteSymfony\SonataBackOffice\var\cache\dev/profiler</parameter>
    <parameter key="debug.error_handler.throw_at">-1</parameter>
    <parameter key="debug.container.dump">D:\wamp64\www\SiteSymfony\SonataBackOffice\var\cache\dev/appDevDebugProjectContainer.xml</parameter>
    <parameter key="router.options.generator_class">Symfony\Component\Routing\Generator\UrlGenerator</parameter>
    <parameter key="router.options.generator_base_class">Symfony\Component\Routing\Generator\UrlGenerator</parameter>
    <parameter key="router.options.generator_dumper_class">Symfony\Component\Routing\Generator\Dumper\PhpGeneratorDumper</parameter>
    <parameter key="router.options.matcher_class">Symfony\Bundle\FrameworkBundle\Routing\RedirectableUrlMatcher</parameter>
    <parameter key="router.options.matcher_base_class">Symfony\Bundle\FrameworkBundle\Routing\RedirectableUrlMatcher</parameter>
    <parameter key="router.options.matcher_dumper_class">Symfony\Component\Routing\Matcher\Dumper\PhpMatcherDumper</parameter>
    <parameter key="router.options.matcher.cache_class">appDevDebugProjectContainerUrlMatcher</parameter>
    <parameter key="router.options.generator.cache_class">appDevDebugProjectContainerUrlGenerator</parameter>
    <parameter key="router.request_context.host">localhost</parameter>
    <parameter key="router.request_context.scheme">http</parameter>
    <parameter key="router.request_context.base_url"></parameter>
    <parameter key="router.resource">D:\wamp64\www\SiteSymfony\SonataBackOffice/app/config/routing_dev.yml</parameter>
    <parameter key="router.cache_class_prefix">appDevDebugProjectContainer</parameter>
    <parameter key="request_listener.http_port">80</parameter>
    <parameter key="request_listener.https_port">443</parameter>
    <parameter key="security.authentication.trust_resolver.anonymous_class">Symfony\Component\Security\Core\Authentication\Token\AnonymousToken</parameter>
    <parameter key="security.authentication.trust_resolver.rememberme_class">Symfony\Component\Security\Core\Authentication\Token\RememberMeToken</parameter>
    <parameter key="security.role_hierarchy.roles" type="collection">
      <parameter key="ROLE_CLIENT" type="collection">
        <parameter>ROLE_USER</parameter>
      </parameter>
      <parameter key="ROLE_USER" type="collection">
        <parameter>ROLE_USER</parameter>
      </parameter>
      <parameter key="ROLE_ADMIN" type="collection">
        <parameter>ROLE_USER</parameter>
        <parameter>ROLE_SONATA_ADMIN</parameter>
      </parameter>
      <parameter key="ROLE_SUPER_ADMIN" type="collection">
        <parameter>ROLE_ADMIN</parameter>
        <parameter>ROLE_ALLOWED_TO_SWITCH</parameter>
      </parameter>
    </parameter>
    <parameter key="security.access.denied_url">null</parameter>
    <parameter key="security.authentication.manager.erase_credentials">true</parameter>
    <parameter key="security.authentication.session_strategy.strategy">migrate</parameter>
    <parameter key="security.access.always_authenticate_before_granting">false</parameter>
    <parameter key="security.authentication.hide_user_not_found">true</parameter>
    <parameter key="twig.exception_listener.controller">twig.controller.exception:showAction</parameter>
    <parameter key="twig.form.resources" type="collection">
      <parameter>form_div_layout.html.twig</parameter>
    </parameter>
    <parameter key="monolog.use_microseconds">true</parameter>
    <parameter key="monolog.swift_mailer.handlers" type="collection"/>
    <parameter key="monolog.handlers_to_channels" type="collection">
      <parameter key="monolog.handler.server_log">null</parameter>
      <parameter key="monolog.handler.console" type="collection">
        <parameter key="type">exclusive</parameter>
        <parameter key="elements" type="collection">
          <parameter>event</parameter>
          <parameter>doctrine</parameter>
          <parameter>console</parameter>
        </parameter>
      </parameter>
      <parameter key="monolog.handler.main" type="collection">
        <parameter key="type">exclusive</parameter>
        <parameter key="elements" type="collection">
          <parameter>event</parameter>
        </parameter>
      </parameter>
    </parameter>
    <parameter key="swiftmailer.class">Swift_Mailer</parameter>
    <parameter key="swiftmailer.transport.sendmail.class">Swift_Transport_SendmailTransport</parameter>
    <parameter key="swiftmailer.transport.mail.class">Swift_Transport_MailTransport</parameter>
    <parameter key="swiftmailer.transport.failover.class">Swift_Transport_FailoverTransport</parameter>
    <parameter key="swiftmailer.plugin.redirecting.class">Swift_Plugins_RedirectingPlugin</parameter>
    <parameter key="swiftmailer.plugin.impersonate.class">Swift_Plugins_ImpersonatePlugin</parameter>
    <parameter key="swiftmailer.plugin.messagelogger.class">Swift_Plugins_MessageLogger</parameter>
    <parameter key="swiftmailer.plugin.antiflood.class">Swift_Plugins_AntiFloodPlugin</parameter>
    <parameter key="swiftmailer.transport.smtp.class">Swift_Transport_EsmtpTransport</parameter>
    <parameter key="swiftmailer.plugin.blackhole.class">Swift_Plugins_BlackholePlugin</parameter>
    <parameter key="swiftmailer.spool.file.class">Swift_FileSpool</parameter>
    <parameter key="swiftmailer.spool.memory.class">Swift_MemorySpool</parameter>
    <parameter key="swiftmailer.email_sender.listener.class">Symfony\Bundle\SwiftmailerBundle\EventListener\EmailSenderListener</parameter>
    <parameter key="swiftmailer.data_collector.class">Symfony\Bundle\SwiftmailerBundle\DataCollector\MessageDataCollector</parameter>
    <parameter key="swiftmailer.mailer.default.transport.name">smtp</parameter>
    <parameter key="swiftmailer.mailer.default.transport.smtp.encryption">ssl</parameter>
    <parameter key="swiftmailer.mailer.default.transport.smtp.port">465</parameter>
    <parameter key="swiftmailer.mailer.default.transport.smtp.host">smtp.gmail.com</parameter>
    <parameter key="swiftmailer.mailer.default.transport.smtp.username">assou.mohcine@gmail.com</parameter>
    <parameter key="swiftmailer.mailer.default.transport.smtp.password">fslt ypzg qscx hzfy</parameter>
    <parameter key="swiftmailer.mailer.default.transport.smtp.auth_mode">login</parameter>
    <parameter key="swiftmailer.mailer.default.transport.smtp.timeout">30</parameter>
    <parameter key="swiftmailer.mailer.default.transport.smtp.source_ip">null</parameter>
    <parameter key="swiftmailer.mailer.default.transport.smtp.local_domain">null</parameter>
    <parameter key="swiftmailer.spool.default.memory.path">D:\wamp64\www\SiteSymfony\SonataBackOffice\var\cache\dev/swiftmailer/spool/default</parameter>
    <parameter key="swiftmailer.mailer.default.spool.enabled">true</parameter>
    <parameter key="swiftmailer.mailer.default.plugin.impersonate">null</parameter>
    <parameter key="swiftmailer.mailer.default.single_address">null</parameter>
    <parameter key="swiftmailer.mailer.default.delivery.enabled">true</parameter>
    <parameter key="swiftmailer.spool.enabled">true</parameter>
    <parameter key="swiftmailer.delivery.enabled">true</parameter>
    <parameter key="swiftmailer.single_address">null</parameter>
    <parameter key="swiftmailer.mailers" type="collection">
      <parameter key="default">swiftmailer.mailer.default</parameter>
    </parameter>
    <parameter key="swiftmailer.default_mailer">default</parameter>
    <parameter key="doctrine_cache.apc.class">Doctrine\Common\Cache\ApcCache</parameter>
    <parameter key="doctrine_cache.apcu.class">Doctrine\Common\Cache\ApcuCache</parameter>
    <parameter key="doctrine_cache.array.class">Doctrine\Common\Cache\ArrayCache</parameter>
    <parameter key="doctrine_cache.chain.class">Doctrine\Common\Cache\ChainCache</parameter>
    <parameter key="doctrine_cache.couchbase.class">Doctrine\Common\Cache\CouchbaseCache</parameter>
    <parameter key="doctrine_cache.couchbase.connection.class">Couchbase</parameter>
    <parameter key="doctrine_cache.couchbase.hostnames">localhost:8091</parameter>
    <parameter key="doctrine_cache.file_system.class">Doctrine\Common\Cache\FilesystemCache</parameter>
    <parameter key="doctrine_cache.php_file.class">Doctrine\Common\Cache\PhpFileCache</parameter>
    <parameter key="doctrine_cache.memcache.class">Doctrine\Common\Cache\MemcacheCache</parameter>
    <parameter key="doctrine_cache.memcache.connection.class">Memcache</parameter>
    <parameter key="doctrine_cache.memcache.host">localhost</parameter>
    <parameter key="doctrine_cache.memcache.port">11211</parameter>
    <parameter key="doctrine_cache.memcached.class">Doctrine\Common\Cache\MemcachedCache</parameter>
    <parameter key="doctrine_cache.memcached.connection.class">Memcached</parameter>
    <parameter key="doctrine_cache.memcached.host">localhost</parameter>
    <parameter key="doctrine_cache.memcached.port">11211</parameter>
    <parameter key="doctrine_cache.mongodb.class">Doctrine\Common\Cache\MongoDBCache</parameter>
    <parameter key="doctrine_cache.mongodb.collection.class">MongoCollection</parameter>
    <parameter key="doctrine_cache.mongodb.connection.class">MongoClient</parameter>
    <parameter key="doctrine_cache.mongodb.server">localhost:27017</parameter>
    <parameter key="doctrine_cache.predis.client.class">Predis\Client</parameter>
    <parameter key="doctrine_cache.predis.scheme">tcp</parameter>
    <parameter key="doctrine_cache.predis.host">localhost</parameter>
    <parameter key="doctrine_cache.predis.port">6379</parameter>
    <parameter key="doctrine_cache.redis.class">Doctrine\Common\Cache\RedisCache</parameter>
    <parameter key="doctrine_cache.redis.connection.class">Redis</parameter>
    <parameter key="doctrine_cache.redis.host">localhost</parameter>
    <parameter key="doctrine_cache.redis.port">6379</parameter>
    <parameter key="doctrine_cache.riak.class">Doctrine\Common\Cache\RiakCache</parameter>
    <parameter key="doctrine_cache.riak.bucket.class">Riak\Bucket</parameter>
    <parameter key="doctrine_cache.riak.connection.class">Riak\Connection</parameter>
    <parameter key="doctrine_cache.riak.bucket_property_list.class">Riak\BucketPropertyList</parameter>
    <parameter key="doctrine_cache.riak.host">localhost</parameter>
    <parameter key="doctrine_cache.riak.port">8087</parameter>
    <parameter key="doctrine_cache.sqlite3.class">Doctrine\Common\Cache\SQLite3Cache</parameter>
    <parameter key="doctrine_cache.sqlite3.connection.class">SQLite3</parameter>
    <parameter key="doctrine_cache.void.class">Doctrine\Common\Cache\VoidCache</parameter>
    <parameter key="doctrine_cache.wincache.class">Doctrine\Common\Cache\WinCacheCache</parameter>
    <parameter key="doctrine_cache.xcache.class">Doctrine\Common\Cache\XcacheCache</parameter>
    <parameter key="doctrine_cache.zenddata.class">Doctrine\Common\Cache\ZendDataCache</parameter>
    <parameter key="doctrine_cache.security.acl.cache.class">Doctrine\Bundle\DoctrineCacheBundle\Acl\Model\AclCache</parameter>
    <parameter key="doctrine.dbal.logger.chain.class">Doctrine\DBAL\Logging\LoggerChain</parameter>
    <parameter key="doctrine.dbal.logger.profiling.class">Doctrine\DBAL\Logging\DebugStack</parameter>
    <parameter key="doctrine.dbal.logger.class">Symfony\Bridge\Doctrine\Logger\DbalLogger</parameter>
    <parameter key="doctrine.dbal.configuration.class">Doctrine\DBAL\Configuration</parameter>
    <parameter key="doctrine.data_collector.class">Doctrine\Bundle\DoctrineBundle\DataCollector\DoctrineDataCollector</parameter>
    <parameter key="doctrine.dbal.connection.event_manager.class">Symfony\Bridge\Doctrine\ContainerAwareEventManager</parameter>
    <parameter key="doctrine.dbal.connection_factory.class">Doctrine\Bundle\DoctrineBundle\ConnectionFactory</parameter>
    <parameter key="doctrine.dbal.events.mysql_session_init.class">Doctrine\DBAL\Event\Listeners\MysqlSessionInit</parameter>
    <parameter key="doctrine.dbal.events.oracle_session_init.class">Doctrine\DBAL\Event\Listeners\OracleSessionInit</parameter>
    <parameter key="doctrine.class">Doctrine\Bundle\DoctrineBundle\Registry</parameter>
    <parameter key="doctrine.entity_managers" type="collection">
      <parameter key="default">doctrine.orm.default_entity_manager</parameter>
    </parameter>
    <parameter key="doctrine.default_entity_manager">default</parameter>
    <parameter key="doctrine.dbal.connection_factory.types" type="collection"/>
    <parameter key="doctrine.connections" type="collection">
      <parameter key="default">doctrine.dbal.default_connection</parameter>
    </parameter>
    <parameter key="doctrine.default_connection">default</parameter>
    <parameter key="doctrine.orm.configuration.class">Doctrine\ORM\Configuration</parameter>
    <parameter key="doctrine.orm.entity_manager.class">Doctrine\ORM\EntityManager</parameter>
    <parameter key="doctrine.orm.manager_configurator.class">Doctrine\Bundle\DoctrineBundle\ManagerConfigurator</parameter>
    <parameter key="doctrine.orm.cache.array.class">Doctrine\Common\Cache\ArrayCache</parameter>
    <parameter key="doctrine.orm.cache.apc.class">Doctrine\Common\Cache\ApcCache</parameter>
    <parameter key="doctrine.orm.cache.memcache.class">Doctrine\Common\Cache\MemcacheCache</parameter>
    <parameter key="doctrine.orm.cache.memcache_host">localhost</parameter>
    <parameter key="doctrine.orm.cache.memcache_port">11211</parameter>
    <parameter key="doctrine.orm.cache.memcache_instance.class">Memcache</parameter>
    <parameter key="doctrine.orm.cache.memcached.class">Doctrine\Common\Cache\MemcachedCache</parameter>
    <parameter key="doctrine.orm.cache.memcached_host">localhost</parameter>
    <parameter key="doctrine.orm.cache.memcached_port">11211</parameter>
    <parameter key="doctrine.orm.cache.memcached_instance.class">Memcached</parameter>
    <parameter key="doctrine.orm.cache.redis.class">Doctrine\Common\Cache\RedisCache</parameter>
    <parameter key="doctrine.orm.cache.redis_host">localhost</parameter>
    <parameter key="doctrine.orm.cache.redis_port">6379</parameter>
    <parameter key="doctrine.orm.cache.redis_instance.class">Redis</parameter>
    <parameter key="doctrine.orm.cache.xcache.class">Doctrine\Common\Cache\XcacheCache</parameter>
    <parameter key="doctrine.orm.cache.wincache.class">Doctrine\Common\Cache\WinCacheCache</parameter>
    <parameter key="doctrine.orm.cache.zenddata.class">Doctrine\Common\Cache\ZendDataCache</parameter>
    <parameter key="doctrine.orm.metadata.driver_chain.class">Doctrine\Common\Persistence\Mapping\Driver\MappingDriverChain</parameter>
    <parameter key="doctrine.orm.metadata.annotation.class">Doctrine\ORM\Mapping\Driver\AnnotationDriver</parameter>
    <parameter key="doctrine.orm.metadata.xml.class">Doctrine\ORM\Mapping\Driver\SimplifiedXmlDriver</parameter>
    <parameter key="doctrine.orm.metadata.yml.class">Doctrine\ORM\Mapping\Driver\SimplifiedYamlDriver</parameter>
    <parameter key="doctrine.orm.metadata.php.class">Doctrine\ORM\Mapping\Driver\PHPDriver</parameter>
    <parameter key="doctrine.orm.metadata.staticphp.class">Doctrine\ORM\Mapping\Driver\StaticPHPDriver</parameter>
    <parameter key="doctrine.orm.proxy_cache_warmer.class">Symfony\Bridge\Doctrine\CacheWarmer\ProxyCacheWarmer</parameter>
    <parameter key="form.type_guesser.doctrine.class">Symfony\Bridge\Doctrine\Form\DoctrineOrmTypeGuesser</parameter>
    <parameter key="doctrine.orm.validator.unique.class">Symfony\Bridge\Doctrine\Validator\Constraints\UniqueEntityValidator</parameter>
    <parameter key="doctrine.orm.validator_initializer.class">Symfony\Bridge\Doctrine\Validator\DoctrineInitializer</parameter>
    <parameter key="doctrine.orm.security.user.provider.class">Symfony\Bridge\Doctrine\Security\User\EntityUserProvider</parameter>
    <parameter key="doctrine.orm.listeners.resolve_target_entity.class">Doctrine\ORM\Tools\ResolveTargetEntityListener</parameter>
    <parameter key="doctrine.orm.listeners.attach_entity_listeners.class">Doctrine\ORM\Tools\AttachEntityListenersListener</parameter>
    <parameter key="doctrine.orm.naming_strategy.default.class">Doctrine\ORM\Mapping\DefaultNamingStrategy</parameter>
    <parameter key="doctrine.orm.naming_strategy.underscore.class">Doctrine\ORM\Mapping\UnderscoreNamingStrategy</parameter>
    <parameter key="doctrine.orm.quote_strategy.default.class">Doctrine\ORM\Mapping\DefaultQuoteStrategy</parameter>
    <parameter key="doctrine.orm.quote_strategy.ansi.class">Doctrine\ORM\Mapping\AnsiQuoteStrategy</parameter>
    <parameter key="doctrine.orm.entity_listener_resolver.class">Doctrine\Bundle\DoctrineBundle\Mapping\ContainerAwareEntityListenerResolver</parameter>
    <parameter key="doctrine.orm.second_level_cache.default_cache_factory.class">Doctrine\ORM\Cache\DefaultCacheFactory</parameter>
    <parameter key="doctrine.orm.second_level_cache.default_region.class">Doctrine\ORM\Cache\Region\DefaultRegion</parameter>
    <parameter key="doctrine.orm.second_level_cache.filelock_region.class">Doctrine\ORM\Cache\Region\FileLockRegion</parameter>
    <parameter key="doctrine.orm.second_level_cache.logger_chain.class">Doctrine\ORM\Cache\Logging\CacheLoggerChain</parameter>
    <parameter key="doctrine.orm.second_level_cache.logger_statistics.class">Doctrine\ORM\Cache\Logging\StatisticsCacheLogger</parameter>
    <parameter key="doctrine.orm.second_level_cache.cache_configuration.class">Doctrine\ORM\Cache\CacheConfiguration</parameter>
    <parameter key="doctrine.orm.second_level_cache.regions_configuration.class">Doctrine\ORM\Cache\RegionsConfiguration</parameter>
    <parameter key="doctrine.orm.auto_generate_proxy_classes">true</parameter>
    <parameter key="doctrine.orm.proxy_dir">D:\wamp64\www\SiteSymfony\SonataBackOffice\var\cache\dev/doctrine/orm/Proxies</parameter>
    <parameter key="doctrine.orm.proxy_namespace">Proxies</parameter>
    <parameter key="sensio_framework_extra.view.guesser.class">Sensio\Bundle\FrameworkExtraBundle\Templating\TemplateGuesser</parameter>
    <parameter key="sensio_framework_extra.controller.listener.class">Sensio\Bundle\FrameworkExtraBundle\EventListener\ControllerListener</parameter>
    <parameter key="sensio_framework_extra.routing.loader.annot_dir.class">Symfony\Component\Routing\Loader\AnnotationDirectoryLoader</parameter>
    <parameter key="sensio_framework_extra.routing.loader.annot_file.class">Symfony\Component\Routing\Loader\AnnotationFileLoader</parameter>
    <parameter key="sensio_framework_extra.routing.loader.annot_class.class">Sensio\Bundle\FrameworkExtraBundle\Routing\AnnotatedRouteControllerLoader</parameter>
    <parameter key="sensio_framework_extra.converter.listener.class">Sensio\Bundle\FrameworkExtraBundle\EventListener\ParamConverterListener</parameter>
    <parameter key="sensio_framework_extra.converter.manager.class">Sensio\Bundle\FrameworkExtraBundle\Request\ParamConverter\ParamConverterManager</parameter>
    <parameter key="sensio_framework_extra.converter.doctrine.class">Sensio\Bundle\FrameworkExtraBundle\Request\ParamConverter\DoctrineParamConverter</parameter>
    <parameter key="sensio_framework_extra.converter.datetime.class">Sensio\Bundle\FrameworkExtraBundle\Request\ParamConverter\DateTimeParamConverter</parameter>
    <parameter key="sensio_framework_extra.view.listener.class">Sensio\Bundle\FrameworkExtraBundle\EventListener\TemplateListener</parameter>
    <parameter key="fos_user.backend_type_orm">true</parameter>
    <parameter key="fos_user.security.interactive_login_listener.class">FOS\UserBundle\EventListener\LastLoginListener</parameter>
    <parameter key="fos_user.security.login_manager.class">FOS\UserBundle\Security\LoginManager</parameter>
    <parameter key="fos_user.resetting.email.template">@FOSUser/Resetting/email.txt.twig</parameter>
    <parameter key="fos_user.registration.confirmation.template">FOSUserBundle:Registration:email.txt.twig</parameter>
    <parameter key="fos_user.storage">orm</parameter>
    <parameter key="fos_user.firewall_name">main</parameter>
    <parameter key="fos_user.model_manager_name">null</parameter>
    <parameter key="fos_user.model.user.class">AppBundle\Entity\User</parameter>
    <parameter key="fos_user.profile.form.type">FOS\UserBundle\Form\Type\ProfileFormType</parameter>
    <parameter key="fos_user.profile.form.name">fos_user_profile_form</parameter>
    <parameter key="fos_user.profile.form.validation_groups" type="collection">
      <parameter>Profile</parameter>
      <parameter>Default</parameter>
    </parameter>
    <parameter key="fos_user.registration.confirmation.from_email" type="collection">
      <parameter key="assou.mohcine@gmail.com">assou.mohcine@gmail.com</parameter>
    </parameter>
    <parameter key="fos_user.registration.confirmation.enabled">true</parameter>
    <parameter key="fos_user.registration.form.type">app_user_registration</parameter>
    <parameter key="fos_user.registration.form.name">fos_user_registration_form</parameter>
    <parameter key="fos_user.registration.form.validation_groups" type="collection">
      <parameter>Registration</parameter>
      <parameter>Default</parameter>
    </parameter>
    <parameter key="fos_user.change_password.form.type">fos_user_change_password</parameter>
    <parameter key="fos_user.change_password.form.name">fos_user_change_password_form</parameter>
    <parameter key="fos_user.change_password.form.validation_groups" type="collection">
      <parameter>ChangePassword</parameter>
      <parameter>Default</parameter>
    </parameter>
    <parameter key="fos_user.resetting.email.from_email" type="collection">
      <parameter key="assou.mohcine@gmail.com">assou.mohcine@gmail.com</parameter>
    </parameter>
    <parameter key="fos_user.resetting.retry_ttl">7200</parameter>
    <parameter key="fos_user.resetting.token_ttl">86400</parameter>
    <parameter key="fos_user.resetting.form.type">FOS\UserBundle\Form\Type\ResettingFormType</parameter>
    <parameter key="fos_user.resetting.form.name">fos_user_resetting_form</parameter>
    <parameter key="fos_user.resetting.form.validation_groups" type="collection">
      <parameter>ResetPassword</parameter>
      <parameter>Default</parameter>
    </parameter>
    <parameter key="fos_user.group_manager.class">FOS\UserBundle\Doctrine\GroupManager</parameter>
    <parameter key="fos_user.model.group.class">AppBundle\Entity\Group</parameter>
    <parameter key="fos_user.group.form.type">app_group_registration</parameter>
    <parameter key="fos_user.group.form.name">fos_user_group_form</parameter>
    <parameter key="fos_user.group.form.validation_groups" type="collection">
      <parameter>Registration</parameter>
      <parameter>Default</parameter>
    </parameter>
    <parameter key="sonata.core.flashmessage.manager.class">Sonata\CoreBundle\FlashMessage\FlashManager</parameter>
    <parameter key="sonata.core.twig.extension.flashmessage.class">Sonata\CoreBundle\Twig\Extension\FlashMessageExtension</parameter>
    <parameter key="sonata.core.form_type">standard</parameter>
    <parameter key="sonata.core.form.mapping.type" type="collection"/>
    <parameter key="sonata.core.form.mapping.extension" type="collection"/>
    <parameter key="sonata.block.service.container.class">Sonata\BlockBundle\Block\Service\ContainerBlockService</parameter>
    <parameter key="sonata.block.service.empty.class">Sonata\BlockBundle\Block\Service\EmptyBlockService</parameter>
    <parameter key="sonata.block.service.text.class">Sonata\BlockBundle\Block\Service\TextBlockService</parameter>
    <parameter key="sonata.block.service.rss.class">Sonata\BlockBundle\Block\Service\RssBlockService</parameter>
    <parameter key="sonata.block.service.menu.class">Sonata\BlockBundle\Block\Service\MenuBlockService</parameter>
    <parameter key="sonata.block.service.template.class">Sonata\BlockBundle\Block\Service\TemplateBlockService</parameter>
    <parameter key="sonata.block.exception.strategy.manager.class">Sonata\BlockBundle\Exception\Strategy\StrategyManager</parameter>
    <parameter key="sonata.block.container.types" type="collection">
      <parameter>sonata.block.service.container</parameter>
      <parameter>sonata.page.block.container</parameter>
      <parameter>sonata.dashboard.block.container</parameter>
      <parameter>cmf.block.container</parameter>
      <parameter>cmf.block.slideshow</parameter>
    </parameter>
    <parameter key="sonata_block.blocks" type="collection">
      <parameter key="sonata.admin.block.admin_list" type="collection">
        <parameter key="contexts" type="collection">
          <parameter>cms</parameter>
        </parameter>
        <parameter key="templates" type="collection"/>
        <parameter key="cache">sonata.cache.noop</parameter>
        <parameter key="settings" type="collection"/>
      </parameter>
      <parameter key="sonata.admin.block.stats" type="collection">
        <parameter key="contexts" type="collection">
          <parameter>admin</parameter>
        </parameter>
        <parameter key="templates" type="collection"/>
        <parameter key="cache">sonata.cache.noop</parameter>
        <parameter key="settings" type="collection"/>
      </parameter>
      <parameter key="sonata.admin.block.search_result" type="collection">
        <parameter key="contexts" type="collection">
          <parameter>admin</parameter>
        </parameter>
        <parameter key="templates" type="collection"/>
        <parameter key="cache">sonata.cache.noop</parameter>
        <parameter key="settings" type="collection"/>
      </parameter>
      <parameter key="sonata.block.service.text" type="collection">
        <parameter key="contexts" type="collection">
          <parameter>cms</parameter>
        </parameter>
        <parameter key="templates" type="collection"/>
        <parameter key="cache">sonata.cache.noop</parameter>
        <parameter key="settings" type="collection"/>
      </parameter>
      <parameter key="sonata.block.service.action" type="collection">
        <parameter key="contexts" type="collection">
          <parameter>cms</parameter>
        </parameter>
        <parameter key="templates" type="collection"/>
        <parameter key="cache">sonata.cache.noop</parameter>
        <parameter key="settings" type="collection"/>
      </parameter>
      <parameter key="sonata.block.service.rss" type="collection">
        <parameter key="contexts" type="collection">
          <parameter>cms</parameter>
        </parameter>
        <parameter key="templates" type="collection"/>
        <parameter key="cache">sonata.cache.noop</parameter>
        <parameter key="settings" type="collection"/>
      </parameter>
    </parameter>
    <parameter key="sonata_block.blocks_by_class" type="collection"/>
    <parameter key="sonata_block.cache_blocks" type="collection">
      <parameter key="by_type" type="collection">
        <parameter key="sonata.admin.block.admin_list">sonata.cache.noop</parameter>
        <parameter key="sonata.admin.block.stats">sonata.cache.noop</parameter>
        <parameter key="sonata.admin.block.search_result">sonata.cache.noop</parameter>
        <parameter key="sonata.block.service.text">sonata.cache.noop</parameter>
        <parameter key="sonata.block.service.action">sonata.cache.noop</parameter>
        <parameter key="sonata.block.service.rss">sonata.cache.noop</parameter>
      </parameter>
    </parameter>
    <parameter key="knp_menu.factory.class">Knp\Menu\MenuFactory</parameter>
    <parameter key="knp_menu.factory_extension.routing.class">Knp\Menu\Integration\Symfony\RoutingExtension</parameter>
    <parameter key="knp_menu.helper.class">Knp\Menu\Twig\Helper</parameter>
    <parameter key="knp_menu.matcher.class">Knp\Menu\Matcher\Matcher</parameter>
    <parameter key="knp_menu.menu_provider.chain.class">Knp\Menu\Provider\ChainProvider</parameter>
    <parameter key="knp_menu.menu_provider.container_aware.class">Knp\Bundle\MenuBundle\Provider\ContainerAwareProvider</parameter>
    <parameter key="knp_menu.menu_provider.builder_alias.class">Knp\Bundle\MenuBundle\Provider\BuilderAliasProvider</parameter>
    <parameter key="knp_menu.renderer_provider.class">Knp\Bundle\MenuBundle\Renderer\ContainerAwareProvider</parameter>
    <parameter key="knp_menu.renderer.list.class">Knp\Menu\Renderer\ListRenderer</parameter>
    <parameter key="knp_menu.renderer.list.options" type="collection"/>
    <parameter key="knp_menu.listener.voters.class">Knp\Bundle\MenuBundle\EventListener\VoterInitializerListener</parameter>
    <parameter key="knp_menu.voter.router.class">Knp\Menu\Matcher\Voter\RouteVoter</parameter>
    <parameter key="knp_menu.twig.extension.class">Knp\Menu\Twig\MenuExtension</parameter>
    <parameter key="knp_menu.renderer.twig.class">Knp\Menu\Renderer\TwigRenderer</parameter>
    <parameter key="knp_menu.renderer.twig.options" type="collection"/>
    <parameter key="knp_menu.renderer.twig.template">KnpMenuBundle::menu.html.twig</parameter>
    <parameter key="knp_menu.default_renderer">twig</parameter>
    <parameter key="sonata.admin.manipulator.acl.object.orm.class">Sonata\DoctrineORMAdminBundle\Util\ObjectAclManipulator</parameter>
    <parameter key="sonata_doctrine_orm_admin.entity_manager">null</parameter>
    <parameter key="sonata_doctrine_orm_admin.templates" type="collection">
      <parameter key="types" type="collection">
        <parameter key="list" type="collection">
          <parameter key="array">SonataAdminBundle:CRUD:list_array.html.twig</parameter>
          <parameter key="boolean">SonataAdminBundle:CRUD:list_boolean.html.twig</parameter>
          <parameter key="date">SonataAdminBundle:CRUD:list_date.html.twig</parameter>
          <parameter key="time">SonataAdminBundle:CRUD:list_time.html.twig</parameter>
          <parameter key="datetime">SonataAdminBundle:CRUD:list_datetime.html.twig</parameter>
          <parameter key="text">SonataAdminBundle:CRUD:list_string.html.twig</parameter>
          <parameter key="textarea">SonataAdminBundle:CRUD:list_string.html.twig</parameter>
          <parameter key="email">SonataAdminBundle:CRUD:list_email.html.twig</parameter>
          <parameter key="trans">SonataAdminBundle:CRUD:list_trans.html.twig</parameter>
          <parameter key="string">SonataAdminBundle:CRUD:list_string.html.twig</parameter>
          <parameter key="smallint">SonataAdminBundle:CRUD:list_string.html.twig</parameter>
          <parameter key="bigint">SonataAdminBundle:CRUD:list_string.html.twig</parameter>
          <parameter key="integer">SonataAdminBundle:CRUD:list_string.html.twig</parameter>
          <parameter key="decimal">SonataAdminBundle:CRUD:list_string.html.twig</parameter>
          <parameter key="identifier">SonataAdminBundle:CRUD:list_string.html.twig</parameter>
          <parameter key="currency">SonataAdminBundle:CRUD:list_currency.html.twig</parameter>
          <parameter key="percent">SonataAdminBundle:CRUD:list_percent.html.twig</parameter>
          <parameter key="choice">SonataAdminBundle:CRUD:list_choice.html.twig</parameter>
          <parameter key="url">SonataAdminBundle:CRUD:list_url.html.twig</parameter>
          <parameter key="html">SonataAdminBundle:CRUD:list_html.html.twig</parameter>
        </parameter>
        <parameter key="show" type="collection">
          <parameter key="array">SonataAdminBundle:CRUD:show_array.html.twig</parameter>
          <parameter key="boolean">SonataAdminBundle:CRUD:show_boolean.html.twig</parameter>
          <parameter key="date">SonataAdminBundle:CRUD:show_date.html.twig</parameter>
          <parameter key="time">SonataAdminBundle:CRUD:show_time.html.twig</parameter>
          <parameter key="datetime">SonataAdminBundle:CRUD:show_datetime.html.twig</parameter>
          <parameter key="text">SonataAdminBundle:CRUD:base_show_field.html.twig</parameter>
          <parameter key="email">SonataAdminBundle:CRUD:show_email.html.twig</parameter>
          <parameter key="trans">SonataAdminBundle:CRUD:show_trans.html.twig</parameter>
          <parameter key="string">SonataAdminBundle:CRUD:base_show_field.html.twig</parameter>
          <parameter key="smallint">SonataAdminBundle:CRUD:base_show_field.html.twig</parameter>
          <parameter key="bigint">SonataAdminBundle:CRUD:base_show_field.html.twig</parameter>
          <parameter key="integer">SonataAdminBundle:CRUD:base_show_field.html.twig</parameter>
          <parameter key="decimal">SonataAdminBundle:CRUD:base_show_field.html.twig</parameter>
          <parameter key="currency">SonataAdminBundle:CRUD:show_currency.html.twig</parameter>
          <parameter key="percent">SonataAdminBundle:CRUD:show_percent.html.twig</parameter>
          <parameter key="choice">SonataAdminBundle:CRUD:show_choice.html.twig</parameter>
          <parameter key="url">SonataAdminBundle:CRUD:show_url.html.twig</parameter>
          <parameter key="html">SonataAdminBundle:CRUD:show_html.html.twig</parameter>
        </parameter>
      </parameter>
      <parameter key="form" type="collection">
        <parameter>SonataDoctrineORMAdminBundle:Form:form_admin_fields.html.twig</parameter>
      </parameter>
      <parameter key="filter" type="collection">
        <parameter>SonataDoctrineORMAdminBundle:Form:filter_admin_fields.html.twig</parameter>
      </parameter>
    </parameter>
    <parameter key="sonata.admin.twig.extension.x_editable_type_mapping" type="collection">
      <parameter key="choice">select</parameter>
      <parameter key="boolean">select</parameter>
      <parameter key="text">text</parameter>
      <parameter key="textarea">textarea</parameter>
      <parameter key="html">textarea</parameter>
      <parameter key="email">email</parameter>
      <parameter key="string">text</parameter>
      <parameter key="smallint">text</parameter>
      <parameter key="bigint">text</parameter>
      <parameter key="integer">number</parameter>
      <parameter key="decimal">number</parameter>
      <parameter key="currency">number</parameter>
      <parameter key="percent">number</parameter>
      <parameter key="url">url</parameter>
      <parameter key="date">date</parameter>
    </parameter>
    <parameter key="sonata.admin.configuration.global_search.empty_boxes">show</parameter>
    <parameter key="sonata.admin.configuration.templates" type="collection">
      <parameter key="search">SonataAdminBundle:Core:search.html.twig</parameter>
      <parameter key="search_result_block">SonataAdminBundle:Block:block_search_result.html.twig</parameter>
      <parameter key="user_block">SonataAdminBundle:Core:user_block.html.twig</parameter>
      <parameter key="add_block">SonataAdminBundle:Core:add_block.html.twig</parameter>
      <parameter key="layout">SonataAdminBundle::standard_layout.html.twig</parameter>
      <parameter key="ajax">SonataAdminBundle::ajax_layout.html.twig</parameter>
      <parameter key="dashboard">SonataAdminBundle:Core:dashboard.html.twig</parameter>
      <parameter key="list">SonataAdminBundle:CRUD:list.html.twig</parameter>
      <parameter key="filter">SonataAdminBundle:Form:filter_admin_fields.html.twig</parameter>
      <parameter key="show">SonataAdminBundle:CRUD:show.html.twig</parameter>
      <parameter key="show_compare">SonataAdminBundle:CRUD:show_compare.html.twig</parameter>
      <parameter key="edit">SonataAdminBundle:CRUD:edit.html.twig</parameter>
      <parameter key="preview">SonataAdminBundle:CRUD:preview.html.twig</parameter>
      <parameter key="history">SonataAdminBundle:CRUD:history.html.twig</parameter>
      <parameter key="acl">SonataAdminBundle:CRUD:acl.html.twig</parameter>
      <parameter key="history_revision_timestamp">SonataAdminBundle:CRUD:history_revision_timestamp.html.twig</parameter>
      <parameter key="action">SonataAdminBundle:CRUD:action.html.twig</parameter>
      <parameter key="select">SonataAdminBundle:CRUD:list__select.html.twig</parameter>
      <parameter key="list_block">SonataAdminBundle:Block:block_admin_list.html.twig</parameter>
      <parameter key="short_object_description">SonataAdminBundle:Helper:short-object-description.html.twig</parameter>
      <parameter key="delete">SonataAdminBundle:CRUD:delete.html.twig</parameter>
      <parameter key="batch">SonataAdminBundle:CRUD:list__batch.html.twig</parameter>
      <parameter key="batch_confirmation">SonataAdminBundle:CRUD:batch_confirmation.html.twig</parameter>
      <parameter key="inner_list_row">SonataAdminBundle:CRUD:list_inner_row.html.twig</parameter>
      <parameter key="outer_list_rows_mosaic">SonataAdminBundle:CRUD:list_outer_rows_mosaic.html.twig</parameter>
      <parameter key="outer_list_rows_list">SonataAdminBundle:CRUD:list_outer_rows_list.html.twig</parameter>
      <parameter key="outer_list_rows_tree">SonataAdminBundle:CRUD:list_outer_rows_tree.html.twig</parameter>
      <parameter key="base_list_field">SonataAdminBundle:CRUD:base_list_field.html.twig</parameter>
      <parameter key="pager_links">SonataAdminBundle:Pager:links.html.twig</parameter>
      <parameter key="pager_results">SonataAdminBundle:Pager:results.html.twig</parameter>
      <parameter key="tab_menu_template">SonataAdminBundle:Core:tab_menu_template.html.twig</parameter>
      <parameter key="knp_menu_template">SonataAdminBundle:Menu:sonata_menu.html.twig</parameter>
      <parameter key="action_create">SonataAdminBundle:CRUD:dashboard__action_create.html.twig</parameter>
      <parameter key="button_acl">SonataAdminBundle:Button:acl_button.html.twig</parameter>
      <parameter key="button_create">SonataAdminBundle:Button:create_button.html.twig</parameter>
      <parameter key="button_edit">SonataAdminBundle:Button:edit_button.html.twig</parameter>
      <parameter key="button_history">SonataAdminBundle:Button:history_button.html.twig</parameter>
      <parameter key="button_list">SonataAdminBundle:Button:list_button.html.twig</parameter>
      <parameter key="button_show">SonataAdminBundle:Button:show_button.html.twig</parameter>
    </parameter>
    <parameter key="sonata.admin.configuration.admin_services" type="collection"/>
    <parameter key="sonata.admin.configuration.dashboard_groups" type="collection"/>
    <parameter key="sonata.admin.configuration.dashboard_blocks" type="collection">
      <parameter type="collection">
        <parameter key="position">right</parameter>
        <parameter key="type">sonata.block.service.text</parameter>
        <parameter key="settings" type="collection">
          <parameter key="content">&lt;h3&gt;Welcome to the Sonata Admin&lt;/h3&gt; &lt;p&gt;This is a &lt;code&gt;sonata.block.service.text&lt;/code&gt; from the Block Bundle, you can create and add new block in these area by configuring the &lt;code&gt;sonata_admin&lt;/code&gt; section.&lt;/p&gt; &lt;br /&gt; For instance, here a RSS feed parser (&lt;code&gt;sonata.block.service.rss&lt;/code&gt;):</parameter>
        </parameter>
        <parameter key="roles" type="collection"/>
        <parameter key="class">col-md-4</parameter>
      </parameter>
      <parameter type="collection">
        <parameter key="position">right</parameter>
        <parameter key="type">sonata.block.service.rss</parameter>
        <parameter key="settings" type="collection">
          <parameter key="title">Sonata Project's Feeds</parameter>
        </parameter>
        <parameter key="roles" type="collection"/>
        <parameter key="class">col-md-4</parameter>
      </parameter>
      <parameter type="collection">
        <parameter key="class">col-md-4 col-xs-6</parameter>
        <parameter key="position">left</parameter>
        <parameter key="type">sonata.admin.block.stats</parameter>
        <parameter key="settings" type="collection">
          <parameter key="code">app.admin.category</parameter>
          <parameter key="icon">fa-tasks</parameter>
          <parameter key="text">Catégories</parameter>
          <parameter key="color">bg-yellow</parameter>
          <parameter key="filters" type="collection">
            <parameter key="edited" type="collection">
              <parameter key="value">1</parameter>
            </parameter>
          </parameter>
        </parameter>
        <parameter key="roles" type="collection"/>
      </parameter>
      <parameter type="collection">
        <parameter key="class">col-md-4 col-xs-6</parameter>
        <parameter key="position">left</parameter>
        <parameter key="type">sonata.admin.block.stats</parameter>
        <parameter key="settings" type="collection">
          <parameter key="code">app.admin.user</parameter>
          <parameter key="icon">fa-users</parameter>
          <parameter key="text">Utilisateurs</parameter>
          <parameter key="color">bg-green</parameter>
          <parameter key="filters" type="collection">
            <parameter key="edited" type="collection">
              <parameter key="value">1</parameter>
            </parameter>
          </parameter>
        </parameter>
        <parameter key="roles" type="collection"/>
      </parameter>
      <parameter type="collection">
        <parameter key="class">col-md-4 col-xs-6</parameter>
        <parameter key="position">left</parameter>
        <parameter key="type">sonata.admin.block.stats</parameter>
        <parameter key="settings" type="collection">
          <parameter key="code">app.admin.blogpost</parameter>
          <parameter key="icon">fa-book</parameter>
          <parameter key="text">Blog Post</parameter>
          <parameter key="color">bg-aqua</parameter>
          <parameter key="filters" type="collection">
            <parameter key="edited" type="collection">
              <parameter key="value">1</parameter>
            </parameter>
          </parameter>
        </parameter>
        <parameter key="roles" type="collection"/>
      </parameter>
      <parameter type="collection">
        <parameter key="class">col-md-4 col-xs-6</parameter>
        <parameter key="position">left</parameter>
        <parameter key="type">sonata.admin.block.stats</parameter>
        <parameter key="settings" type="collection">
          <parameter key="code">app.admin.groups</parameter>
          <parameter key="icon">fa-cogs</parameter>
          <parameter key="text">Groupes</parameter>
          <parameter key="color">bg-red</parameter>
        </parameter>
        <parameter key="roles" type="collection"/>
      </parameter>
    </parameter>
    <parameter key="sonata.admin.configuration.sort_admins">false</parameter>
    <parameter key="sonata.admin.configuration.breadcrumbs" type="collection">
      <parameter key="child_admin_route">edit</parameter>
    </parameter>
    <parameter key="sonata.admin.security.acl_user_manager">fos_user.user_manager</parameter>
    <parameter key="sonata.admin.configuration.security.information" type="collection"/>
    <parameter key="sonata.admin.configuration.security.admin_permissions" type="collection">
      <parameter>CREATE</parameter>
      <parameter>LIST</parameter>
      <parameter>DELETE</parameter>
      <parameter>UNDELETE</parameter>
      <parameter>EXPORT</parameter>
      <parameter>OPERATOR</parameter>
      <parameter>MASTER</parameter>
    </parameter>
    <parameter key="sonata.admin.configuration.security.object_permissions" type="collection">
      <parameter>VIEW</parameter>
      <parameter>EDIT</parameter>
      <parameter>DELETE</parameter>
      <parameter>UNDELETE</parameter>
      <parameter>OPERATOR</parameter>
      <parameter>MASTER</parameter>
      <parameter>OWNER</parameter>
    </parameter>
    <parameter key="sonata.admin.security.handler.noop.class">Sonata\AdminBundle\Security\Handler\NoopSecurityHandler</parameter>
    <parameter key="sonata.admin.security.handler.role.class">Sonata\AdminBundle\Security\Handler\RoleSecurityHandler</parameter>
    <parameter key="sonata.admin.security.handler.acl.class">Sonata\AdminBundle\Security\Handler\AclSecurityHandler</parameter>
    <parameter key="sonata.admin.security.mask.builder.class">Sonata\AdminBundle\Security\Acl\Permission\MaskBuilder</parameter>
    <parameter key="sonata.admin.manipulator.acl.admin.class">Sonata\AdminBundle\Util\AdminAclManipulator</parameter>
    <parameter key="sonata.admin.object.manipulator.acl.admin.class">Sonata\AdminBundle\Util\AdminObjectAclManipulator</parameter>
    <parameter key="sonata.admin.extension.map" type="collection">
      <parameter key="admins" type="collection"/>
      <parameter key="excludes" type="collection"/>
      <parameter key="implements" type="collection"/>
      <parameter key="extends" type="collection"/>
      <parameter key="instanceof" type="collection"/>
      <parameter key="uses" type="collection"/>
    </parameter>
    <parameter key="sonata.admin.configuration.filters.persist">false</parameter>
    <parameter key="sonata.admin.configuration.show.mosaic.button">true</parameter>
    <parameter key="sonata.admin.configuration.translate_group_label">false</parameter>
    <parameter key="easyadmin.config" type="collection">
      <parameter key="design" type="collection">
        <parameter key="assets" type="collection">
          <parameter key="css" type="collection"/>
          <parameter key="js" type="collection"/>
          <parameter key="favicon" type="collection">
            <parameter key="path">favicon.ico</parameter>
            <parameter key="mime_type">image/x-icon</parameter>
          </parameter>
        </parameter>
        <parameter key="theme">default</parameter>
        <parameter key="color_scheme">dark</parameter>
        <parameter key="brand_color">#205081</parameter>
        <parameter key="form_theme" type="collection">
          <parameter>@EasyAdmin/form/bootstrap_3_horizontal_layout.html.twig</parameter>
        </parameter>
        <parameter key="menu" type="collection"/>
      </parameter>
      <parameter key="site_name">EasyAdmin</parameter>
      <parameter key="formats" type="collection">
        <parameter key="date">Y-m-d</parameter>
        <parameter key="time">H:i:s</parameter>
        <parameter key="datetime">F j, Y H:i</parameter>
      </parameter>
      <parameter key="disabled_actions" type="collection"/>
      <parameter key="translation_domain">messages</parameter>
      <parameter key="list" type="collection">
        <parameter key="actions" type="collection"/>
        <parameter key="max_results">15</parameter>
      </parameter>
      <parameter key="edit" type="collection">
        <parameter key="actions" type="collection"/>
      </parameter>
      <parameter key="new" type="collection">
        <parameter key="actions" type="collection"/>
      </parameter>
      <parameter key="show" type="collection">
        <parameter key="actions" type="collection"/>
        <parameter key="max_results">10</parameter>
      </parameter>
      <parameter key="entities" type="collection"/>
    </parameter>
    <parameter key="easyadmin.cache.dir">D:\wamp64\www\SiteSymfony\SonataBackOffice\var\cache\dev/easy_admin</parameter>
    <parameter key="web_profiler.debug_toolbar.position">bottom</parameter>
    <parameter key="web_profiler.debug_toolbar.intercept_redirects">false</parameter>
    <parameter key="web_profiler.debug_toolbar.mode">2</parameter>
    <parameter key="data_collector.templates" type="collection">
      <parameter key="data_collector.request" type="collection">
        <parameter>request</parameter>
        <parameter>@WebProfiler/Collector/request.html.twig</parameter>
      </parameter>
      <parameter key="data_collector.time" type="collection">
        <parameter>time</parameter>
        <parameter>@WebProfiler/Collector/time.html.twig</parameter>
      </parameter>
      <parameter key="data_collector.memory" type="collection">
        <parameter>memory</parameter>
        <parameter>@WebProfiler/Collector/memory.html.twig</parameter>
      </parameter>
      <parameter key="data_collector.ajax" type="collection">
        <parameter>ajax</parameter>
        <parameter>@WebProfiler/Collector/ajax.html.twig</parameter>
      </parameter>
      <parameter key="data_collector.form" type="collection">
        <parameter>form</parameter>
        <parameter>@WebProfiler/Collector/form.html.twig</parameter>
      </parameter>
      <parameter key="data_collector.exception" type="collection">
        <parameter>exception</parameter>
        <parameter>@WebProfiler/Collector/exception.html.twig</parameter>
      </parameter>
      <parameter key="data_collector.logger" type="collection">
        <parameter>logger</parameter>
        <parameter>@WebProfiler/Collector/logger.html.twig</parameter>
      </parameter>
      <parameter key="data_collector.events" type="collection">
        <parameter>events</parameter>
        <parameter>@WebProfiler/Collector/events.html.twig</parameter>
      </parameter>
      <parameter key="data_collector.router" type="collection">
        <parameter>router</parameter>
        <parameter>@WebProfiler/Collector/router.html.twig</parameter>
      </parameter>
      <parameter key="data_collector.cache" type="collection">
        <parameter>cache</parameter>
        <parameter>@WebProfiler/Collector/cache.html.twig</parameter>
      </parameter>
      <parameter key="data_collector.translation" type="collection">
        <parameter>translation</parameter>
        <parameter>@WebProfiler/Collector/translation.html.twig</parameter>
      </parameter>
      <parameter key="data_collector.security" type="collection">
        <parameter>security</parameter>
        <parameter>@Security/Collector/security.html.twig</parameter>
      </parameter>
      <parameter key="data_collector.twig" type="collection">
        <parameter>twig</parameter>
        <parameter>@WebProfiler/Collector/twig.html.twig</parameter>
      </parameter>
      <parameter key="data_collector.doctrine" type="collection">
        <parameter>db</parameter>
        <parameter>@Doctrine/Collector/db.html.twig</parameter>
      </parameter>
      <parameter key="swiftmailer.data_collector" type="collection">
        <parameter>swiftmailer</parameter>
        <parameter>@Swiftmailer/Collector/swiftmailer.html.twig</parameter>
      </parameter>
      <parameter key="data_collector.dump" type="collection">
        <parameter>dump</parameter>
        <parameter>@Debug/Profiler/dump.html.twig</parameter>
      </parameter>
      <parameter key="sonata.block.data_collector" type="collection">
        <parameter>block</parameter>
        <parameter>SonataBlockBundle:Profiler:block.html.twig</parameter>
      </parameter>
      <parameter key="easyadmin.data_collector" type="collection">
        <parameter>easyadmin</parameter>
        <parameter>@EasyAdmin/data_collector/easyadmin.html.twig</parameter>
      </parameter>
      <parameter key="data_collector.config" type="collection">
        <parameter>config</parameter>
        <parameter>@WebProfiler/Collector/config.html.twig</parameter>
      </parameter>
    </parameter>
    <parameter key="console.command.ids" type="collection">
      <parameter key="console.command.symfony_bundle_securitybundle_command_userpasswordencodercommand">console.command.symfony_bundle_securitybundle_command_userpasswordencodercommand</parameter>
      <parameter key="console.command.sensiolabs_security_command_securitycheckercommand">sensio_distribution.security_checker.command</parameter>
      <parameter key="console.command.symfony_bundle_webserverbundle_command_serverruncommand">console.command.symfony_bundle_webserverbundle_command_serverruncommand</parameter>
      <parameter key="console.command.symfony_bundle_webserverbundle_command_serverstartcommand">console.command.symfony_bundle_webserverbundle_command_serverstartcommand</parameter>
      <parameter key="console.command.symfony_bundle_webserverbundle_command_serverstopcommand">console.command.symfony_bundle_webserverbundle_command_serverstopcommand</parameter>
      <parameter key="console.command.symfony_bundle_webserverbundle_command_serverstatuscommand">console.command.symfony_bundle_webserverbundle_command_serverstatuscommand</parameter>
    </parameter>
    <parameter key="sonata.core.form.types" type="collection">
      <parameter>app.form.registration</parameter>
      <parameter>app_group_registration</parameter>
      <parameter>app.form.change_password</parameter>
      <parameter>form.type.form</parameter>
      <parameter>form.type.choice</parameter>
      <parameter>form.type.entity</parameter>
      <parameter>fos_user.username_form_type</parameter>
      <parameter>fos_user.profile.form.type</parameter>
      <parameter>fos_user.registration.form.type</parameter>
      <parameter>fos_user.change_password.form.type</parameter>
      <parameter>fos_user.resetting.form.type</parameter>
      <parameter>fos_user.group.form.type</parameter>
      <parameter>sonata.core.form.type.array</parameter>
      <parameter>sonata.core.form.type.boolean</parameter>
      <parameter>sonata.core.form.type.collection</parameter>
      <parameter>sonata.core.form.type.translatable_choice</parameter>
      <parameter>sonata.core.form.type.date_range</parameter>
      <parameter>sonata.core.form.type.datetime_range</parameter>
      <parameter>sonata.core.form.type.date_picker</parameter>
      <parameter>sonata.core.form.type.datetime_picker</parameter>
      <parameter>sonata.core.form.type.date_range_picker</parameter>
      <parameter>sonata.core.form.type.datetime_range_picker</parameter>
      <parameter>sonata.core.form.type.equal</parameter>
      <parameter>sonata.core.form.type.color_selector</parameter>
      <parameter>sonata.block.form.type.block</parameter>
      <parameter>sonata.block.form.type.container_template</parameter>
      <parameter>sonata.admin.form.type.admin</parameter>
      <parameter>sonata.admin.form.type.model_choice</parameter>
      <parameter>sonata.admin.form.type.model_list</parameter>
      <parameter>sonata.admin.form.type.model_reference</parameter>
      <parameter>sonata.admin.form.type.model_hidden</parameter>
      <parameter>sonata.admin.form.type.model_autocomplete</parameter>
      <parameter>sonata.admin.form.type.collection</parameter>
      <parameter>sonata.admin.doctrine_orm.form.type.choice_field_mask</parameter>
      <parameter>sonata.admin.form.filter.type.number</parameter>
      <parameter>sonata.admin.form.filter.type.choice</parameter>
      <parameter>sonata.admin.form.filter.type.default</parameter>
      <parameter>sonata.admin.form.filter.type.date</parameter>
      <parameter>sonata.admin.form.filter.type.daterange</parameter>
      <parameter>sonata.admin.form.filter.type.datetime</parameter>
      <parameter>sonata.admin.form.filter.type.datetime_range</parameter>
      <parameter>easyadmin.form.type</parameter>
      <parameter>easyadmin.form.type.autocomplete</parameter>
      <parameter>easyadmin.form.type.divider</parameter>
      <parameter>easyadmin.form.type.section</parameter>
      <parameter>easyadmin.form.type.group</parameter>
    </parameter>
    <parameter key="sonata.core.form.type_extensions" type="collection">
      <parameter>form.type_extension.form.http_foundation</parameter>
      <parameter>form.type_extension.form.validator</parameter>
      <parameter>form.type_extension.repeated.validator</parameter>
      <parameter>form.type_extension.submit.validator</parameter>
      <parameter>form.type_extension.upload.validator</parameter>
      <parameter>form.type_extension.csrf</parameter>
      <parameter>form.type_extension.form.data_collector</parameter>
      <parameter>sonata.admin.form.extension.field</parameter>
      <parameter>sonata.admin.form.extension.field.mopa</parameter>
      <parameter>sonata.admin.form.extension.choice</parameter>
      <parameter>easyadmin.form.type.extension</parameter>
    </parameter>
  </parameters>
  <services>
    <service id="service_container" class="Symfony\Component\DependencyInjection\ContainerInterface" synthetic="true"/>
    <service id="app.form.registration" class="AppBundle\Form\RegistrationType">
      <tag name="form.type" alias="app_user_registration"/>
    </service>
    <service id="app_group_registration" class="AppBundle\Form\GroupType">
      <tag name="form.type" alias="app_group_registration"/>
    </service>
    <service id="app.form.change_password" class="FOS\UserBundle\Form\Type\ChangePasswordFormType">
      <tag name="form.type" alias="fos_user_change_password"/>
    </service>
    <service id="app.admin.category" class="AppBundle\Admin\CategoryAdmin" shared="false">
      <tag name="sonata.admin" manager_type="orm" label="Catégorie" group="Gestion des catégories" label_catalogue="AppBundle" show_mosaic_button="1" icon="&lt;i class=&quot;fa fa-tasks&quot; &gt;&lt;/i&gt;"/>
      <argument>app.admin.category</argument>
      <argument>AppBundle\Entity\Category</argument>
      <argument>SonataAdminBundle:CRUD</argument>
      <call method="addChild">
        <argument type="service" id="app.admin.blogpost"/>
      </call>
      <call method="setFormTheme">
        <argument type="collection">
          <argument>SonataDoctrineORMAdminBundle:Form:form_admin_fields.html.twig</argument>
        </argument>
      </call>
      <call method="setFilterTheme">
        <argument type="collection">
          <argument>SonataDoctrineORMAdminBundle:Form:filter_admin_fields.html.twig</argument>
        </argument>
      </call>
      <call method="setManagerType">
        <argument>orm</argument>
      </call>
      <call method="setModelManager">
        <argument type="service" id="sonata.admin.manager.orm"/>
      </call>
      <call method="setFormContractor">
        <argument type="service" id="sonata.admin.builder.orm_form"/>
      </call>
      <call method="setShowBuilder">
        <argument type="service" id="sonata.admin.builder.orm_show"/>
      </call>
      <call method="setListBuilder">
        <argument type="service" id="sonata.admin.builder.orm_list"/>
      </call>
      <call method="setDatagridBuilder">
        <argument type="service" id="sonata.admin.builder.orm_datagrid"/>
      </call>
      <call method="setTranslator">
        <argument type="service" id="translator.data_collector"/>
        <argument>false</argument>
      </call>
      <call method="setConfigurationPool">
        <argument type="service" id="sonata.admin.pool"/>
      </call>
      <call method="setRouteGenerator">
        <argument type="service" id="sonata.admin.route.default_generator"/>
      </call>
      <call method="setValidator">
        <argument type="service" id="validator"/>
      </call>
      <call method="setSecurityHandler">
        <argument type="service" id="sonata.admin.security.handler.noop"/>
      </call>
      <call method="setMenuFactory">
        <argument type="service" id="knp_menu.factory"/>
      </call>
      <call method="setRouteBuilder">
        <argument type="service" id="sonata.admin.route.path_info"/>
      </call>
      <call method="setLabelTranslatorStrategy">
        <argument type="service" id="sonata.admin.label.strategy.native"/>
      </call>
      <call method="setPagerType">
        <argument>default</argument>
      </call>
      <call method="setLabel">
        <argument>Catégorie</argument>
      </call>
      <call method="setPersistFilters">
        <argument>false</argument>
      </call>
      <call method="showMosaicButton">
        <argument>true</argument>
      </call>
      <call method="setTemplates">
        <argument type="collection">
          <argument key="user_block">SonataAdminBundle:Core:user_block.html.twig</argument>
          <argument key="add_block">SonataAdminBundle:Core:add_block.html.twig</argument>
          <argument key="layout">SonataAdminBundle::standard_layout.html.twig</argument>
          <argument key="ajax">SonataAdminBundle::ajax_layout.html.twig</argument>
          <argument key="dashboard">SonataAdminBundle:Core:dashboard.html.twig</argument>
          <argument key="list">SonataAdminBundle:CRUD:list.html.twig</argument>
          <argument key="filter">SonataAdminBundle:Form:filter_admin_fields.html.twig</argument>
          <argument key="show">SonataAdminBundle:CRUD:show.html.twig</argument>
          <argument key="show_compare">SonataAdminBundle:CRUD:show_compare.html.twig</argument>
          <argument key="edit">SonataAdminBundle:CRUD:edit.html.twig</argument>
          <argument key="history">SonataAdminBundle:CRUD:history.html.twig</argument>
          <argument key="history_revision_timestamp">SonataAdminBundle:CRUD:history_revision_timestamp.html.twig</argument>
          <argument key="acl">SonataAdminBundle:CRUD:acl.html.twig</argument>
          <argument key="action">SonataAdminBundle:CRUD:action.html.twig</argument>
          <argument key="short_object_description">SonataAdminBundle:Helper:short-object-description.html.twig</argument>
          <argument key="preview">SonataAdminBundle:CRUD:preview.html.twig</argument>
          <argument key="list_block">SonataAdminBundle:Block:block_admin_list.html.twig</argument>
          <argument key="delete">SonataAdminBundle:CRUD:delete.html.twig</argument>
          <argument key="batch">SonataAdminBundle:CRUD:list__batch.html.twig</argument>
          <argument key="select">SonataAdminBundle:CRUD:list__select.html.twig</argument>
          <argument key="batch_confirmation">SonataAdminBundle:CRUD:batch_confirmation.html.twig</argument>
          <argument key="inner_list_row">SonataAdminBundle:CRUD:list_inner_row.html.twig</argument>
          <argument key="base_list_field">SonataAdminBundle:CRUD:base_list_field.html.twig</argument>
          <argument key="pager_links">SonataAdminBundle:Pager:links.html.twig</argument>
          <argument key="pager_results">SonataAdminBundle:Pager:results.html.twig</argument>
          <argument key="tab_menu_template">SonataAdminBundle:Core:tab_menu_template.html.twig</argument>
          <argument key="knp_menu_template">SonataAdminBundle:Menu:sonata_menu.html.twig</argument>
          <argument key="outer_list_rows_mosaic">SonataAdminBundle:CRUD:list_outer_rows_mosaic.html.twig</argument>
          <argument key="outer_list_rows_list">SonataAdminBundle:CRUD:list_outer_rows_list.html.twig</argument>
          <argument key="outer_list_rows_tree">SonataAdminBundle:CRUD:list_outer_rows_tree.html.twig</argument>
          <argument key="search">SonataAdminBundle:Core:search.html.twig</argument>
          <argument key="search_result_block">SonataAdminBundle:Block:block_search_result.html.twig</argument>
          <argument key="action_create">SonataAdminBundle:CRUD:dashboard__action_create.html.twig</argument>
          <argument key="button_acl">SonataAdminBundle:Button:acl_button.html.twig</argument>
          <argument key="button_create">SonataAdminBundle:Button:create_button.html.twig</argument>
          <argument key="button_edit">SonataAdminBundle:Button:edit_button.html.twig</argument>
          <argument key="button_history">SonataAdminBundle:Button:history_button.html.twig</argument>
          <argument key="button_list">SonataAdminBundle:Button:list_button.html.twig</argument>
          <argument key="button_show">SonataAdminBundle:Button:show_button.html.twig</argument>
        </argument>
      </call>
      <call method="setSecurityInformation">
        <argument type="collection"/>
      </call>
      <call method="initialize"/>
      <call method="addExtension">
        <argument type="service" id="sonata.admin.event.extension"/>
      </call>
    </service>
    <service id="app.admin.blogpost" class="AppBundle\Admin\BlogPostAdmin" shared="false">
      <tag name="sonata.admin" manager_type="orm" label="Blog" group="Gestion des blogs" label_catalogue="AppBundle" icon="&lt;i class=&quot;fa fa-book&quot; &gt;&lt;/i&gt;"/>
      <argument>app.admin.blogpost</argument>
      <argument>AppBundle\Entity\BlogPost</argument>
      <argument>SonataAdminBundle:CRUD</argument>
      <call method="setFormTheme">
        <argument type="collection">
          <argument>SonataDoctrineORMAdminBundle:Form:form_admin_fields.html.twig</argument>
        </argument>
      </call>
      <call method="setFilterTheme">
        <argument type="collection">
          <argument>SonataDoctrineORMAdminBundle:Form:filter_admin_fields.html.twig</argument>
        </argument>
      </call>
      <call method="setManagerType">
        <argument>orm</argument>
      </call>
      <call method="setModelManager">
        <argument type="service" id="sonata.admin.manager.orm"/>
      </call>
      <call method="setFormContractor">
        <argument type="service" id="sonata.admin.builder.orm_form"/>
      </call>
      <call method="setShowBuilder">
        <argument type="service" id="sonata.admin.builder.orm_show"/>
      </call>
      <call method="setListBuilder">
        <argument type="service" id="sonata.admin.builder.orm_list"/>
      </call>
      <call method="setDatagridBuilder">
        <argument type="service" id="sonata.admin.builder.orm_datagrid"/>
      </call>
      <call method="setTranslator">
        <argument type="service" id="translator.data_collector"/>
        <argument>false</argument>
      </call>
      <call method="setConfigurationPool">
        <argument type="service" id="sonata.admin.pool"/>
      </call>
      <call method="setRouteGenerator">
        <argument type="service" id="sonata.admin.route.default_generator"/>
      </call>
      <call method="setValidator">
        <argument type="service" id="validator"/>
      </call>
      <call method="setSecurityHandler">
        <argument type="service" id="sonata.admin.security.handler.noop"/>
      </call>
      <call method="setMenuFactory">
        <argument type="service" id="knp_menu.factory"/>
      </call>
      <call method="setRouteBuilder">
        <argument type="service" id="sonata.admin.route.path_info"/>
      </call>
      <call method="setLabelTranslatorStrategy">
        <argument type="service" id="sonata.admin.label.strategy.native"/>
      </call>
      <call method="setPagerType">
        <argument>default</argument>
      </call>
      <call method="setLabel">
        <argument>Blog</argument>
      </call>
      <call method="setPersistFilters">
        <argument>false</argument>
      </call>
      <call method="showMosaicButton">
        <argument>true</argument>
      </call>
      <call method="setTemplates">
        <argument type="collection">
          <argument key="user_block">SonataAdminBundle:Core:user_block.html.twig</argument>
          <argument key="add_block">SonataAdminBundle:Core:add_block.html.twig</argument>
          <argument key="layout">SonataAdminBundle::standard_layout.html.twig</argument>
          <argument key="ajax">SonataAdminBundle::ajax_layout.html.twig</argument>
          <argument key="dashboard">SonataAdminBundle:Core:dashboard.html.twig</argument>
          <argument key="list">SonataAdminBundle:CRUD:list.html.twig</argument>
          <argument key="filter">SonataAdminBundle:Form:filter_admin_fields.html.twig</argument>
          <argument key="show">SonataAdminBundle:CRUD:show.html.twig</argument>
          <argument key="show_compare">SonataAdminBundle:CRUD:show_compare.html.twig</argument>
          <argument key="edit">SonataAdminBundle:CRUD:edit.html.twig</argument>
          <argument key="history">SonataAdminBundle:CRUD:history.html.twig</argument>
          <argument key="history_revision_timestamp">SonataAdminBundle:CRUD:history_revision_timestamp.html.twig</argument>
          <argument key="acl">SonataAdminBundle:CRUD:acl.html.twig</argument>
          <argument key="action">SonataAdminBundle:CRUD:action.html.twig</argument>
          <argument key="short_object_description">SonataAdminBundle:Helper:short-object-description.html.twig</argument>
          <argument key="preview">SonataAdminBundle:CRUD:preview.html.twig</argument>
          <argument key="list_block">SonataAdminBundle:Block:block_admin_list.html.twig</argument>
          <argument key="delete">SonataAdminBundle:CRUD:delete.html.twig</argument>
          <argument key="batch">SonataAdminBundle:CRUD:list__batch.html.twig</argument>
          <argument key="select">SonataAdminBundle:CRUD:list__select.html.twig</argument>
          <argument key="batch_confirmation">SonataAdminBundle:CRUD:batch_confirmation.html.twig</argument>
          <argument key="inner_list_row">SonataAdminBundle:CRUD:list_inner_row.html.twig</argument>
          <argument key="base_list_field">SonataAdminBundle:CRUD:base_list_field.html.twig</argument>
          <argument key="pager_links">SonataAdminBundle:Pager:links.html.twig</argument>
          <argument key="pager_results">SonataAdminBundle:Pager:results.html.twig</argument>
          <argument key="tab_menu_template">SonataAdminBundle:Core:tab_menu_template.html.twig</argument>
          <argument key="knp_menu_template">SonataAdminBundle:Menu:sonata_menu.html.twig</argument>
          <argument key="outer_list_rows_mosaic">SonataAdminBundle:CRUD:list_outer_rows_mosaic.html.twig</argument>
          <argument key="outer_list_rows_list">SonataAdminBundle:CRUD:list_outer_rows_list.html.twig</argument>
          <argument key="outer_list_rows_tree">SonataAdminBundle:CRUD:list_outer_rows_tree.html.twig</argument>
          <argument key="search">SonataAdminBundle:Core:search.html.twig</argument>
          <argument key="search_result_block">SonataAdminBundle:Block:block_search_result.html.twig</argument>
          <argument key="action_create">SonataAdminBundle:CRUD:dashboard__action_create.html.twig</argument>
          <argument key="button_acl">SonataAdminBundle:Button:acl_button.html.twig</argument>
          <argument key="button_create">SonataAdminBundle:Button:create_button.html.twig</argument>
          <argument key="button_edit">SonataAdminBundle:Button:edit_button.html.twig</argument>
          <argument key="button_history">SonataAdminBundle:Button:history_button.html.twig</argument>
          <argument key="button_list">SonataAdminBundle:Button:list_button.html.twig</argument>
          <argument key="button_show">SonataAdminBundle:Button:show_button.html.twig</argument>
        </argument>
      </call>
      <call method="setSecurityInformation">
        <argument type="collection"/>
      </call>
      <call method="initialize"/>
      <call method="addExtension">
        <argument type="service" id="sonata.admin.event.extension"/>
      </call>
    </service>
    <service id="app.admin.user" class="AppBundle\Admin\UserAdmin" shared="false">
      <tag name="sonata.admin" manager_type="orm" label="Utilisateur" group="Gestion des utilisateurs" label_catalogue="AppBundle" icon="&lt;i class=&quot;fa fa-users&quot; &gt;&lt;/i&gt;"/>
      <argument>app.admin.user</argument>
      <argument>AppBundle\Entity\User</argument>
      <argument>SonataAdminBundle:CRUD</argument>
      <call method="setUserManager">
        <argument type="service" id="fos_user.user_manager.default"/>
      </call>
      <call method="addChild">
        <argument type="service" id="app.admin.groups"/>
      </call>
      <call method="setFormTheme">
        <argument type="collection">
          <argument>SonataDoctrineORMAdminBundle:Form:form_admin_fields.html.twig</argument>
        </argument>
      </call>
      <call method="setFilterTheme">
        <argument type="collection">
          <argument>SonataDoctrineORMAdminBundle:Form:filter_admin_fields.html.twig</argument>
        </argument>
      </call>
      <call method="setManagerType">
        <argument>orm</argument>
      </call>
      <call method="setModelManager">
        <argument type="service" id="sonata.admin.manager.orm"/>
      </call>
      <call method="setFormContractor">
        <argument type="service" id="sonata.admin.builder.orm_form"/>
      </call>
      <call method="setShowBuilder">
        <argument type="service" id="sonata.admin.builder.orm_show"/>
      </call>
      <call method="setListBuilder">
        <argument type="service" id="sonata.admin.builder.orm_list"/>
      </call>
      <call method="setDatagridBuilder">
        <argument type="service" id="sonata.admin.builder.orm_datagrid"/>
      </call>
      <call method="setTranslator">
        <argument type="service" id="translator.data_collector"/>
        <argument>false</argument>
      </call>
      <call method="setConfigurationPool">
        <argument type="service" id="sonata.admin.pool"/>
      </call>
      <call method="setRouteGenerator">
        <argument type="service" id="sonata.admin.route.default_generator"/>
      </call>
      <call method="setValidator">
        <argument type="service" id="validator"/>
      </call>
      <call method="setSecurityHandler">
        <argument type="service" id="sonata.admin.security.handler.noop"/>
      </call>
      <call method="setMenuFactory">
        <argument type="service" id="knp_menu.factory"/>
      </call>
      <call method="setRouteBuilder">
        <argument type="service" id="sonata.admin.route.path_info"/>
      </call>
      <call method="setLabelTranslatorStrategy">
        <argument type="service" id="sonata.admin.label.strategy.native"/>
      </call>
      <call method="setPagerType">
        <argument>default</argument>
      </call>
      <call method="setLabel">
        <argument>Utilisateur</argument>
      </call>
      <call method="setPersistFilters">
        <argument>false</argument>
      </call>
      <call method="showMosaicButton">
        <argument>true</argument>
      </call>
      <call method="setTemplates">
        <argument type="collection">
          <argument key="user_block">SonataAdminBundle:Core:user_block.html.twig</argument>
          <argument key="add_block">SonataAdminBundle:Core:add_block.html.twig</argument>
          <argument key="layout">SonataAdminBundle::standard_layout.html.twig</argument>
          <argument key="ajax">SonataAdminBundle::ajax_layout.html.twig</argument>
          <argument key="dashboard">SonataAdminBundle:Core:dashboard.html.twig</argument>
          <argument key="list">SonataAdminBundle:CRUD:list.html.twig</argument>
          <argument key="filter">SonataAdminBundle:Form:filter_admin_fields.html.twig</argument>
          <argument key="show">SonataAdminBundle:CRUD:show.html.twig</argument>
          <argument key="show_compare">SonataAdminBundle:CRUD:show_compare.html.twig</argument>
          <argument key="edit">SonataAdminBundle:CRUD:edit.html.twig</argument>
          <argument key="history">SonataAdminBundle:CRUD:history.html.twig</argument>
          <argument key="history_revision_timestamp">SonataAdminBundle:CRUD:history_revision_timestamp.html.twig</argument>
          <argument key="acl">SonataAdminBundle:CRUD:acl.html.twig</argument>
          <argument key="action">SonataAdminBundle:CRUD:action.html.twig</argument>
          <argument key="short_object_description">SonataAdminBundle:Helper:short-object-description.html.twig</argument>
          <argument key="preview">SonataAdminBundle:CRUD:preview.html.twig</argument>
          <argument key="list_block">SonataAdminBundle:Block:block_admin_list.html.twig</argument>
          <argument key="delete">SonataAdminBundle:CRUD:delete.html.twig</argument>
          <argument key="batch">SonataAdminBundle:CRUD:list__batch.html.twig</argument>
          <argument key="select">SonataAdminBundle:CRUD:list__select.html.twig</argument>
          <argument key="batch_confirmation">SonataAdminBundle:CRUD:batch_confirmation.html.twig</argument>
          <argument key="inner_list_row">SonataAdminBundle:CRUD:list_inner_row.html.twig</argument>
          <argument key="base_list_field">SonataAdminBundle:CRUD:base_list_field.html.twig</argument>
          <argument key="pager_links">SonataAdminBundle:Pager:links.html.twig</argument>
          <argument key="pager_results">SonataAdminBundle:Pager:results.html.twig</argument>
          <argument key="tab_menu_template">SonataAdminBundle:Core:tab_menu_template.html.twig</argument>
          <argument key="knp_menu_template">SonataAdminBundle:Menu:sonata_menu.html.twig</argument>
          <argument key="outer_list_rows_mosaic">SonataAdminBundle:CRUD:list_outer_rows_mosaic.html.twig</argument>
          <argument key="outer_list_rows_list">SonataAdminBundle:CRUD:list_outer_rows_list.html.twig</argument>
          <argument key="outer_list_rows_tree">SonataAdminBundle:CRUD:list_outer_rows_tree.html.twig</argument>
          <argument key="search">SonataAdminBundle:Core:search.html.twig</argument>
          <argument key="search_result_block">SonataAdminBundle:Block:block_search_result.html.twig</argument>
          <argument key="action_create">SonataAdminBundle:CRUD:dashboard__action_create.html.twig</argument>
          <argument key="button_acl">SonataAdminBundle:Button:acl_button.html.twig</argument>
          <argument key="button_create">SonataAdminBundle:Button:create_button.html.twig</argument>
          <argument key="button_edit">SonataAdminBundle:Button:edit_button.html.twig</argument>
          <argument key="button_history">SonataAdminBundle:Button:history_button.html.twig</argument>
          <argument key="button_list">SonataAdminBundle:Button:list_button.html.twig</argument>
          <argument key="button_show">SonataAdminBundle:Button:show_button.html.twig</argument>
        </argument>
      </call>
      <call method="setSecurityInformation">
        <argument type="collection"/>
      </call>
      <call method="initialize"/>
      <call method="addExtension">
        <argument type="service" id="sonata.admin.event.extension"/>
      </call>
    </service>
    <service id="app.admin.groups" class="AppBundle\Admin\GroupAdmin" shared="false">
      <tag name="sonata.admin" manager_type="orm" label="Groupe" group="Gestion des Groupes" label_catalogue="AppBundle" icon="&lt;i class=&quot;fa fa-cogs&quot; &gt;&lt;/i&gt;"/>
      <argument>app.admin.groups</argument>
      <argument>AppBundle\Entity\Group</argument>
      <argument>SonataAdminBundle:CRUD</argument>
      <call method="setFormTheme">
        <argument type="collection">
          <argument>SonataDoctrineORMAdminBundle:Form:form_admin_fields.html.twig</argument>
        </argument>
      </call>
      <call method="setFilterTheme">
        <argument type="collection">
          <argument>SonataDoctrineORMAdminBundle:Form:filter_admin_fields.html.twig</argument>
        </argument>
      </call>
      <call method="setManagerType">
        <argument>orm</argument>
      </call>
      <call method="setModelManager">
        <argument type="service" id="sonata.admin.manager.orm"/>
      </call>
      <call method="setFormContractor">
        <argument type="service" id="sonata.admin.builder.orm_form"/>
      </call>
      <call method="setShowBuilder">
        <argument type="service" id="sonata.admin.builder.orm_show"/>
      </call>
      <call method="setListBuilder">
        <argument type="service" id="sonata.admin.builder.orm_list"/>
      </call>
      <call method="setDatagridBuilder">
        <argument type="service" id="sonata.admin.builder.orm_datagrid"/>
      </call>
      <call method="setTranslator">
        <argument type="service" id="translator.data_collector"/>
        <argument>false</argument>
      </call>
      <call method="setConfigurationPool">
        <argument type="service" id="sonata.admin.pool"/>
      </call>
      <call method="setRouteGenerator">
        <argument type="service" id="sonata.admin.route.default_generator"/>
      </call>
      <call method="setValidator">
        <argument type="service" id="validator"/>
      </call>
      <call method="setSecurityHandler">
        <argument type="service" id="sonata.admin.security.handler.noop"/>
      </call>
      <call method="setMenuFactory">
        <argument type="service" id="knp_menu.factory"/>
      </call>
      <call method="setRouteBuilder">
        <argument type="service" id="sonata.admin.route.path_info"/>
      </call>
      <call method="setLabelTranslatorStrategy">
        <argument type="service" id="sonata.admin.label.strategy.native"/>
      </call>
      <call method="setPagerType">
        <argument>default</argument>
      </call>
      <call method="setLabel">
        <argument>Groupe</argument>
      </call>
      <call method="setPersistFilters">
        <argument>false</argument>
      </call>
      <call method="showMosaicButton">
        <argument>true</argument>
      </call>
      <call method="setTemplates">
        <argument type="collection">
          <argument key="user_block">SonataAdminBundle:Core:user_block.html.twig</argument>
          <argument key="add_block">SonataAdminBundle:Core:add_block.html.twig</argument>
          <argument key="layout">SonataAdminBundle::standard_layout.html.twig</argument>
          <argument key="ajax">SonataAdminBundle::ajax_layout.html.twig</argument>
          <argument key="dashboard">SonataAdminBundle:Core:dashboard.html.twig</argument>
          <argument key="list">SonataAdminBundle:CRUD:list.html.twig</argument>
          <argument key="filter">SonataAdminBundle:Form:filter_admin_fields.html.twig</argument>
          <argument key="show">SonataAdminBundle:CRUD:show.html.twig</argument>
          <argument key="show_compare">SonataAdminBundle:CRUD:show_compare.html.twig</argument>
          <argument key="edit">SonataAdminBundle:CRUD:edit.html.twig</argument>
          <argument key="history">SonataAdminBundle:CRUD:history.html.twig</argument>
          <argument key="history_revision_timestamp">SonataAdminBundle:CRUD:history_revision_timestamp.html.twig</argument>
          <argument key="acl">SonataAdminBundle:CRUD:acl.html.twig</argument>
          <argument key="action">SonataAdminBundle:CRUD:action.html.twig</argument>
          <argument key="short_object_description">SonataAdminBundle:Helper:short-object-description.html.twig</argument>
          <argument key="preview">SonataAdminBundle:CRUD:preview.html.twig</argument>
          <argument key="list_block">SonataAdminBundle:Block:block_admin_list.html.twig</argument>
          <argument key="delete">SonataAdminBundle:CRUD:delete.html.twig</argument>
          <argument key="batch">SonataAdminBundle:CRUD:list__batch.html.twig</argument>
          <argument key="select">SonataAdminBundle:CRUD:list__select.html.twig</argument>
          <argument key="batch_confirmation">SonataAdminBundle:CRUD:batch_confirmation.html.twig</argument>
          <argument key="inner_list_row">SonataAdminBundle:CRUD:list_inner_row.html.twig</argument>
          <argument key="base_list_field">SonataAdminBundle:CRUD:base_list_field.html.twig</argument>
          <argument key="pager_links">SonataAdminBundle:Pager:links.html.twig</argument>
          <argument key="pager_results">SonataAdminBundle:Pager:results.html.twig</argument>
          <argument key="tab_menu_template">SonataAdminBundle:Core:tab_menu_template.html.twig</argument>
          <argument key="knp_menu_template">SonataAdminBundle:Menu:sonata_menu.html.twig</argument>
          <argument key="outer_list_rows_mosaic">SonataAdminBundle:CRUD:list_outer_rows_mosaic.html.twig</argument>
          <argument key="outer_list_rows_list">SonataAdminBundle:CRUD:list_outer_rows_list.html.twig</argument>
          <argument key="outer_list_rows_tree">SonataAdminBundle:CRUD:list_outer_rows_tree.html.twig</argument>
          <argument key="search">SonataAdminBundle:Core:search.html.twig</argument>
          <argument key="search_result_block">SonataAdminBundle:Block:block_search_result.html.twig</argument>
          <argument key="action_create">SonataAdminBundle:CRUD:dashboard__action_create.html.twig</argument>
          <argument key="button_acl">SonataAdminBundle:Button:acl_button.html.twig</argument>
          <argument key="button_create">SonataAdminBundle:Button:create_button.html.twig</argument>
          <argument key="button_edit">SonataAdminBundle:Button:edit_button.html.twig</argument>
          <argument key="button_history">SonataAdminBundle:Button:history_button.html.twig</argument>
          <argument key="button_list">SonataAdminBundle:Button:list_button.html.twig</argument>
          <argument key="button_show">SonataAdminBundle:Button:show_button.html.twig</argument>
        </argument>
      </call>
      <call method="setSecurityInformation">
        <argument type="collection"/>
      </call>
      <call method="initialize"/>
      <call method="addExtension">
        <argument type="service" id="sonata.admin.event.extension"/>
      </call>
    </service>
    <service id="controller_name_converter" class="Symfony\Bundle\FrameworkBundle\Controller\ControllerNameParser" public="false">
      <tag name="monolog.logger" channel="request"/>
      <argument type="service" id="kernel"/>
    </service>
    <service id="argument_metadata_factory" class="Symfony\Component\HttpKernel\ControllerMetadata\ArgumentMetadataFactory" public="false"/>
    <service id="argument_resolver.request_attribute" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\RequestAttributeValueResolver" public="false">
      <tag name="controller.argument_value_resolver" priority="100"/>
    </service>
    <service id="argument_resolver.request" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\RequestValueResolver" public="false">
      <tag name="controller.argument_value_resolver" priority="50"/>
    </service>
    <service id="argument_resolver.session" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\SessionValueResolver" public="false">
      <tag name="controller.argument_value_resolver" priority="50"/>
    </service>
    <service id="argument_resolver.service" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\ServiceValueResolver" public="false">
      <tag name="controller.argument_value_resolver" priority="-50"/>
      <argument type="service" id="service_locator.6f24348b77840ec12a20c22a3f985cf7"/>
    </service>
    <service id="argument_resolver.default" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\DefaultValueResolver" public="false">
      <tag name="controller.argument_value_resolver" priority="-100"/>
    </service>
    <service id="argument_resolver.variadic" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\VariadicValueResolver" public="false">
      <tag name="controller.argument_value_resolver" priority="-150"/>
    </service>
    <service id="response_listener" class="Symfony\Component\HttpKernel\EventListener\ResponseListener">
      <tag name="kernel.event_subscriber"/>
      <argument>UTF-8</argument>
    </service>
    <service id="streamed_response_listener" class="Symfony\Component\HttpKernel\EventListener\StreamedResponseListener">
      <tag name="kernel.event_subscriber"/>
    </service>
    <service id="locale_listener" class="Symfony\Component\HttpKernel\EventListener\LocaleListener">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="request_stack"/>
      <argument>fr</argument>
      <argument type="service" id="router.default" on-invalid="ignore"/>
    </service>
    <service id="validate_request_listener" class="Symfony\Component\HttpKernel\EventListener\ValidateRequestListener">
      <tag name="kernel.event_subscriber"/>
    </service>
    <service id="resolve_controller_name_subscriber" class="Symfony\Bundle\FrameworkBundle\EventListener\ResolveControllerNameSubscriber" public="false">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="controller_name_converter"/>
    </service>
    <service id="2_d504270a2b4cd5132382eeca920245dfa96a5b138111678a412f22983c05c881" class="Symfony\Component\Config\Resource\SelfCheckingResourceChecker" public="false">
      <tag name="config_cache.resource_checker" priority="-990"/>
    </service>
    <service id="1_d504270a2b4cd5132382eeca920245dfa96a5b138111678a412f22983c05c881" class="Symfony\Component\DependencyInjection\Config\ContainerParametersResourceChecker" public="false">
      <tag name="config_cache.resource_checker" priority="-980"/>
      <argument type="service" id="service_container"/>
    </service>
    <service id="http_kernel" class="Symfony\Component\HttpKernel\HttpKernel">
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="debug.controller_resolver"/>
      <argument type="service" id="request_stack"/>
      <argument type="service" id="debug.argument_resolver"/>
    </service>
    <service id="request_stack" class="Symfony\Component\HttpFoundation\RequestStack"/>
    <service id="cache_warmer" class="Symfony\Component\HttpKernel\CacheWarmer\CacheWarmerAggregate">
      <argument type="collection">
        <argument type="service" id="templating.cache_warmer.template_paths"/>
        <argument type="service" id="kernel.class_cache.cache_warmer"/>
        <argument type="service" id="validator.mapping.cache_warmer"/>
        <argument type="service" id="translation.warmer"/>
        <argument type="service" id="router.cache_warmer"/>
        <argument type="service" id="annotations.cache_warmer"/>
        <argument type="service" id="twig.cache_warmer"/>
        <argument type="service" id="twig.template_cache_warmer"/>
        <argument type="service" id="doctrine.orm.proxy_cache_warmer"/>
        <argument type="service" id="sonata.admin.route.cache_warmup"/>
        <argument type="service" id="easyadmin.cache.config_warmer"/>
      </argument>
    </service>
    <service id="kernel.class_cache.cache_warmer" class="Symfony\Bundle\FrameworkBundle\CacheWarmer\ClassCacheCacheWarmer">
      <tag name="kernel.cache_warmer"/>
      <argument type="collection">
        <argument>Symfony\Component\HttpFoundation\ParameterBag</argument>
        <argument>Symfony\Component\HttpFoundation\HeaderBag</argument>
        <argument>Symfony\Component\HttpFoundation\FileBag</argument>
        <argument>Symfony\Component\HttpFoundation\ServerBag</argument>
        <argument>Symfony\Component\HttpFoundation\Request</argument>
        <argument>Symfony\Component\HttpKernel\Kernel</argument>
      </argument>
    </service>
    <service id="cache_clearer" class="Symfony\Component\HttpKernel\CacheClearer\ChainCacheClearer">
      <argument type="collection">
        <argument type="service" id="cache.default_clearer"/>
      </argument>
    </service>
    <service id="kernel" synthetic="true"/>
    <service id="filesystem" class="Symfony\Component\Filesystem\Filesystem"/>
    <service id="file_locator" class="Symfony\Component\HttpKernel\Config\FileLocator">
      <argument type="service" id="kernel"/>
      <argument>D:\wamp64\www\SiteSymfony\SonataBackOffice\app/Resources</argument>
      <argument type="collection">
        <argument>D:\wamp64\www\SiteSymfony\SonataBackOffice\app</argument>
      </argument>
    </service>
    <service id="uri_signer" class="Symfony\Component\HttpKernel\UriSigner">
      <argument>ThisTokenIsNotSoSecretChangeIt</argument>
    </service>
    <service id="config_cache_factory" class="Symfony\Component\Config\ResourceCheckerConfigCacheFactory">
      <argument type="iterator">
        <argument type="service" id="1_d504270a2b4cd5132382eeca920245dfa96a5b138111678a412f22983c05c881"/>
        <argument type="service" id="2_d504270a2b4cd5132382eeca920245dfa96a5b138111678a412f22983c05c881"/>
      </argument>
    </service>
    <service id="fragment.handler" class="Symfony\Component\HttpKernel\DependencyInjection\LazyLoadingFragmentHandler">
      <argument></argument>
      <argument type="service" id="request_stack"/>
      <argument>true</argument>
    </service>
    <service id="fragment.renderer.inline" class="Symfony\Component\HttpKernel\Fragment\InlineFragmentRenderer">
      <tag name="kernel.fragment_renderer" alias="inline"/>
      <argument type="service" id="http_kernel"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <call method="setFragmentPath">
        <argument>/_fragment</argument>
      </call>
    </service>
    <service id="fragment.renderer.hinclude" class="Symfony\Component\HttpKernel\Fragment\HIncludeFragmentRenderer">
      <tag name="kernel.fragment_renderer" alias="hinclude"/>
      <tag name="kernel.fragment_renderer" alias="hinclude"/>
      <argument type="service" id="twig"/>
      <argument type="service" id="uri_signer"/>
      <argument>null</argument>
      <call method="setFragmentPath">
        <argument>/_fragment</argument>
      </call>
    </service>
    <service id="fragment.renderer.esi" class="Symfony\Component\HttpKernel\Fragment\EsiFragmentRenderer">
      <tag name="kernel.fragment_renderer" alias="esi"/>
      <argument>null</argument>
      <argument type="service" id="fragment.renderer.inline"/>
      <argument type="service" id="uri_signer"/>
      <call method="setFragmentPath">
        <argument>/_fragment</argument>
      </call>
    </service>
    <service id="fragment.renderer.ssi" class="Symfony\Component\HttpKernel\Fragment\SsiFragmentRenderer">
      <tag name="kernel.fragment_renderer" alias="ssi"/>
      <argument>null</argument>
      <argument type="service" id="fragment.renderer.inline"/>
      <argument type="service" id="uri_signer"/>
      <call method="setFragmentPath">
        <argument>/_fragment</argument>
      </call>
    </service>
    <service id="console.error_listener" class="Symfony\Component\Console\EventListener\ErrorListener" public="false">
      <tag name="kernel.event_subscriber"/>
      <tag name="monolog.logger" channel="console"/>
      <argument type="service" id="monolog.logger.console" on-invalid="null"/>
    </service>
    <service id="property_accessor" class="Symfony\Component\PropertyAccess\PropertyAccessor">
      <argument>false</argument>
      <argument>false</argument>
      <argument type="service" id="cache.property_access" on-invalid="ignore"/>
    </service>
    <service id="cache.app" class="Symfony\Component\Cache\Adapter\TraceableAdapter">
      <tag name="cache.pool"/>
      <tag name="cache.pool" clearer="cache.default_clearer" unlazy="1"/>
      <argument type="service" id="cache.app.recorder_inner"/>
    </service>
    <service id="cache.system" class="Symfony\Component\Cache\Adapter\TraceableAdapter">
      <tag name="cache.pool"/>
      <tag name="cache.pool" clearer="cache.default_clearer" unlazy="1"/>
      <argument type="service" id="cache.system.recorder_inner"/>
    </service>
    <service id="cache.validator" class="Symfony\Component\Cache\Adapter\TraceableAdapter" public="false">
      <tag name="cache.pool"/>
      <tag name="cache.pool" clearer="cache.default_clearer"/>
      <argument type="service" id="cache.validator.recorder_inner"/>
    </service>
    <service id="cache.serializer" class="Symfony\Component\Cache\Adapter\TraceableAdapter" public="false">
      <tag name="cache.pool"/>
      <tag name="cache.pool" clearer="cache.default_clearer"/>
      <argument type="service" id="cache.serializer.recorder_inner"/>
    </service>
    <service id="cache.annotations" class="Symfony\Component\Cache\Adapter\TraceableAdapter" public="false">
      <tag name="cache.pool"/>
      <tag name="cache.pool" clearer="cache.default_clearer"/>
      <argument type="service" id="cache.annotations.recorder_inner"/>
    </service>
    <service id="cache.adapter.system" class="Symfony\Component\Cache\Adapter\AdapterInterface" abstract="true">
      <tag name="cache.pool" clearer="cache.default_clearer"/>
      <tag name="monolog.logger" channel="cache"/>
      <argument></argument>
      <argument>0</argument>
      <argument>6USe48pgWIpbcLk5obWOSl</argument>
      <argument>D:\wamp64\www\SiteSymfony\SonataBackOffice\var\cache\dev/pools</argument>
      <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
      <factory class="Symfony\Component\Cache\Adapter\AbstractAdapter" method="createSystemCache"/>
    </service>
    <service id="cache.adapter.apcu" class="Symfony\Component\Cache\Adapter\ApcuAdapter" abstract="true">
      <tag name="cache.pool" clearer="cache.default_clearer"/>
      <tag name="monolog.logger" channel="cache"/>
      <argument></argument>
      <argument>0</argument>
      <argument>6USe48pgWIpbcLk5obWOSl</argument>
      <call method="setLogger">
        <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
      </call>
    </service>
    <service id="cache.adapter.doctrine" class="Symfony\Component\Cache\Adapter\DoctrineAdapter" abstract="true">
      <tag name="cache.pool" provider="cache.default_doctrine_provider" clearer="cache.default_clearer"/>
      <tag name="monolog.logger" channel="cache"/>
      <argument></argument>
      <argument></argument>
      <argument>0</argument>
      <call method="setLogger">
        <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
      </call>
    </service>
    <service id="cache.adapter.filesystem" class="Symfony\Component\Cache\Adapter\FilesystemAdapter" abstract="true">
      <tag name="cache.pool" clearer="cache.default_clearer"/>
      <tag name="monolog.logger" channel="cache"/>
      <argument></argument>
      <argument>0</argument>
      <argument>D:\wamp64\www\SiteSymfony\SonataBackOffice\var\cache\dev/pools</argument>
      <call method="setLogger">
        <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
      </call>
    </service>
    <service id="cache.adapter.psr6" class="Symfony\Component\Cache\Adapter\ProxyAdapter" abstract="true">
      <tag name="cache.pool" provider="cache.default_psr6_provider" clearer="cache.default_clearer"/>
      <argument></argument>
      <argument></argument>
      <argument>0</argument>
    </service>
    <service id="cache.adapter.redis" class="Symfony\Component\Cache\Adapter\RedisAdapter" abstract="true">
      <tag name="cache.pool" provider="cache.default_redis_provider" clearer="cache.default_clearer"/>
      <tag name="monolog.logger" channel="cache"/>
      <argument></argument>
      <argument></argument>
      <argument>0</argument>
      <call method="setLogger">
        <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
      </call>
    </service>
    <service id="cache.adapter.memcached" class="Symfony\Component\Cache\Adapter\MemcachedAdapter" abstract="true">
      <tag name="cache.pool" provider="cache.default_memcached_provider" clearer="cache.default_clearer"/>
      <tag name="monolog.logger" channel="cache"/>
      <argument></argument>
      <argument></argument>
      <argument>0</argument>
      <call method="setLogger">
        <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
      </call>
    </service>
    <service id="cache.default_clearer" class="Symfony\Component\HttpKernel\CacheClearer\Psr6CacheClearer">
      <tag name="kernel.cache_clearer"/>
    </service>
    <service id="cache.global_clearer" class="Symfony\Component\HttpKernel\CacheClearer\Psr6CacheClearer"/>
    <service id="translator.selector" class="Symfony\Component\Translation\MessageSelector" public="false"/>
    <service id="1_51ac5049b75afe4da2e7c80d146b4c40dde19228017e87312ae4254790686ffe" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="session" type="service" id="session" on-invalid="ignore"/>
      </argument>
    </service>
    <service id="session" class="Symfony\Component\HttpFoundation\Session\Session">
      <argument type="service" id="session.storage.native"/>
      <argument type="service" id="session.attribute_bag"/>
      <argument type="service" id="session.flash_bag"/>
    </service>
    <service id="session.storage.metadata_bag" class="Symfony\Component\HttpFoundation\Session\Storage\MetadataBag" public="false">
      <argument>_sf2_meta</argument>
      <argument>0</argument>
    </service>
    <service id="session.storage.native" class="Symfony\Component\HttpFoundation\Session\Storage\NativeSessionStorage">
      <argument type="collection">
        <argument key="cookie_httponly">true</argument>
        <argument key="gc_probability">1</argument>
      </argument>
      <argument type="service" id="session.handler.native_file"/>
      <argument type="service" id="session.storage.metadata_bag"/>
    </service>
    <service id="session.storage.php_bridge" class="Symfony\Component\HttpFoundation\Session\Storage\PhpBridgeSessionStorage">
      <argument type="service" id="session.handler.native_file"/>
      <argument type="service" id="session.storage.metadata_bag"/>
    </service>
    <service id="session.flash_bag" class="Symfony\Component\HttpFoundation\Session\Flash\FlashBag" public="false"/>
    <service id="session.attribute_bag" class="Symfony\Component\HttpFoundation\Session\Attribute\AttributeBag" public="false"/>
    <service id="session.storage.mock_file" class="Symfony\Component\HttpFoundation\Session\Storage\MockFileSessionStorage" public="false">
      <argument>D:\wamp64\www\SiteSymfony\SonataBackOffice\var\cache\dev/sessions</argument>
      <argument>MOCKSESSID</argument>
      <argument type="service" id="session.storage.metadata_bag"/>
    </service>
    <service id="session.handler.native_file" class="Symfony\Component\HttpFoundation\Session\Storage\Handler\NativeFileSessionHandler" public="false">
      <argument>D:\wamp64\www\SiteSymfony\SonataBackOffice/var/sessions/dev</argument>
    </service>
    <service id="session.handler.write_check" class="Symfony\Component\HttpFoundation\Session\Storage\Handler\WriteCheckSessionHandler" public="false"/>
    <service id="session_listener" class="Symfony\Component\HttpKernel\EventListener\SessionListener">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="1_51ac5049b75afe4da2e7c80d146b4c40dde19228017e87312ae4254790686ffe"/>
    </service>
    <service id="session.save_listener" class="Symfony\Component\HttpKernel\EventListener\SaveSessionListener">
      <tag name="kernel.event_subscriber"/>
    </service>
    <service id="form.resolved_type_factory" class="Symfony\Component\Form\Extension\DataCollector\Proxy\ResolvedTypeFactoryDataCollectorProxy">
      <argument type="service" id="1_84ce4e4d6639fb59ca04e8ab25eae9e8de90101e51680e46479bc7dc3e8ffe58"/>
      <argument type="service" id="data_collector.form"/>
    </service>
    <service id="form.registry" class="Symfony\Component\Form\FormRegistry">
      <argument type="collection">
        <argument type="service" id="form.extension"/>
      </argument>
      <argument type="service" id="form.resolved_type_factory"/>
    </service>
    <service id="form.factory" class="Symfony\Component\Form\FormFactory">
      <argument type="service" id="form.registry"/>
      <argument type="service" id="form.resolved_type_factory"/>
    </service>
    <service id="form.type_guesser.validator" class="Symfony\Component\Form\Extension\Validator\ValidatorTypeGuesser">
      <tag name="form.type_guesser"/>
      <argument type="service" id="validator"/>
    </service>
    <service id="form.choice_list_factory.default" class="Symfony\Component\Form\ChoiceList\Factory\DefaultChoiceListFactory" public="false"/>
    <service id="form.choice_list_factory.property_access" class="Symfony\Component\Form\ChoiceList\Factory\PropertyAccessDecorator" public="false">
      <argument type="service" id="form.choice_list_factory.default"/>
      <argument type="service" id="property_accessor"/>
    </service>
    <service id="form.choice_list_factory.cached" class="Symfony\Component\Form\ChoiceList\Factory\CachingFactoryDecorator" public="false">
      <argument type="service" id="form.choice_list_factory.property_access"/>
    </service>
    <service id="form.type.form" class="Symfony\Component\Form\Extension\Core\Type\FormType">
      <tag name="form.type"/>
      <argument type="service" id="property_accessor"/>
    </service>
    <service id="form.type.birthday" class="Symfony\Component\Form\Extension\Core\Type\BirthdayType">
      <deprecated>The "%service_id%" service is deprecated since Symfony 3.1 and will be removed in 4.0.</deprecated>
    </service>
    <service id="form.type.checkbox" class="Symfony\Component\Form\Extension\Core\Type\CheckboxType">
      <deprecated>The "%service_id%" service is deprecated since Symfony 3.1 and will be removed in 4.0.</deprecated>
    </service>
    <service id="form.type.choice" class="Symfony\Component\Form\Extension\Core\Type\ChoiceType">
      <tag name="form.type"/>
      <argument type="service" id="form.choice_list_factory.cached"/>
    </service>
    <service id="form.type.collection" class="Symfony\Component\Form\Extension\Core\Type\CollectionType">
      <deprecated>The "%service_id%" service is deprecated since Symfony 3.1 and will be removed in 4.0.</deprecated>
    </service>
    <service id="form.type.country" class="Symfony\Component\Form\Extension\Core\Type\CountryType">
      <deprecated>The "%service_id%" service is deprecated since Symfony 3.1 and will be removed in 4.0.</deprecated>
    </service>
    <service id="form.type.date" class="Symfony\Component\Form\Extension\Core\Type\DateType">
      <deprecated>The "%service_id%" service is deprecated since Symfony 3.1 and will be removed in 4.0.</deprecated>
    </service>
    <service id="form.type.datetime" class="Symfony\Component\Form\Extension\Core\Type\DateTimeType">
      <deprecated>The "%service_id%" service is deprecated since Symfony 3.1 and will be removed in 4.0.</deprecated>
    </service>
    <service id="form.type.email" class="Symfony\Component\Form\Extension\Core\Type\EmailType">
      <deprecated>The "%service_id%" service is deprecated since Symfony 3.1 and will be removed in 4.0.</deprecated>
    </service>
    <service id="form.type.file" class="Symfony\Component\Form\Extension\Core\Type\FileType">
      <deprecated>The "%service_id%" service is deprecated since Symfony 3.1 and will be removed in 4.0.</deprecated>
    </service>
    <service id="form.type.hidden" class="Symfony\Component\Form\Extension\Core\Type\HiddenType">
      <deprecated>The "%service_id%" service is deprecated since Symfony 3.1 and will be removed in 4.0.</deprecated>
    </service>
    <service id="form.type.integer" class="Symfony\Component\Form\Extension\Core\Type\IntegerType">
      <deprecated>The "%service_id%" service is deprecated since Symfony 3.1 and will be removed in 4.0.</deprecated>
    </service>
    <service id="form.type.language" class="Symfony\Component\Form\Extension\Core\Type\LanguageType">
      <deprecated>The "%service_id%" service is deprecated since Symfony 3.1 and will be removed in 4.0.</deprecated>
    </service>
    <service id="form.type.locale" class="Symfony\Component\Form\Extension\Core\Type\LocaleType">
      <deprecated>The "%service_id%" service is deprecated since Symfony 3.1 and will be removed in 4.0.</deprecated>
    </service>
    <service id="form.type.money" class="Symfony\Component\Form\Extension\Core\Type\MoneyType">
      <deprecated>The "%service_id%" service is deprecated since Symfony 3.1 and will be removed in 4.0.</deprecated>
    </service>
    <service id="form.type.number" class="Symfony\Component\Form\Extension\Core\Type\NumberType">
      <deprecated>The "%service_id%" service is deprecated since Symfony 3.1 and will be removed in 4.0.</deprecated>
    </service>
    <service id="form.type.password" class="Symfony\Component\Form\Extension\Core\Type\PasswordType">
      <deprecated>The "%service_id%" service is deprecated since Symfony 3.1 and will be removed in 4.0.</deprecated>
    </service>
    <service id="form.type.percent" class="Symfony\Component\Form\Extension\Core\Type\PercentType">
      <deprecated>The "%service_id%" service is deprecated since Symfony 3.1 and will be removed in 4.0.</deprecated>
    </service>
    <service id="form.type.radio" class="Symfony\Component\Form\Extension\Core\Type\RadioType">
      <deprecated>The "%service_id%" service is deprecated since Symfony 3.1 and will be removed in 4.0.</deprecated>
    </service>
    <service id="form.type.range" class="Symfony\Component\Form\Extension\Core\Type\RangeType">
      <deprecated>The "%service_id%" service is deprecated since Symfony 3.1 and will be removed in 4.0.</deprecated>
    </service>
    <service id="form.type.repeated" class="Symfony\Component\Form\Extension\Core\Type\RepeatedType">
      <deprecated>The "%service_id%" service is deprecated since Symfony 3.1 and will be removed in 4.0.</deprecated>
    </service>
    <service id="form.type.search" class="Symfony\Component\Form\Extension\Core\Type\SearchType">
      <deprecated>The "%service_id%" service is deprecated since Symfony 3.1 and will be removed in 4.0.</deprecated>
    </service>
    <service id="form.type.textarea" class="Symfony\Component\Form\Extension\Core\Type\TextareaType">
      <deprecated>The "%service_id%" service is deprecated since Symfony 3.1 and will be removed in 4.0.</deprecated>
    </service>
    <service id="form.type.text" class="Symfony\Component\Form\Extension\Core\Type\TextType">
      <deprecated>The "%service_id%" service is deprecated since Symfony 3.1 and will be removed in 4.0.</deprecated>
    </service>
    <service id="form.type.time" class="Symfony\Component\Form\Extension\Core\Type\TimeType">
      <deprecated>The "%service_id%" service is deprecated since Symfony 3.1 and will be removed in 4.0.</deprecated>
    </service>
    <service id="form.type.timezone" class="Symfony\Component\Form\Extension\Core\Type\TimezoneType">
      <deprecated>The "%service_id%" service is deprecated since Symfony 3.1 and will be removed in 4.0.</deprecated>
    </service>
    <service id="form.type.url" class="Symfony\Component\Form\Extension\Core\Type\UrlType">
      <deprecated>The "%service_id%" service is deprecated since Symfony 3.1 and will be removed in 4.0.</deprecated>
    </service>
    <service id="form.type.button" class="Symfony\Component\Form\Extension\Core\Type\ButtonType">
      <deprecated>The "%service_id%" service is deprecated since Symfony 3.1 and will be removed in 4.0.</deprecated>
    </service>
    <service id="form.type.submit" class="Symfony\Component\Form\Extension\Core\Type\SubmitType">
      <deprecated>The "%service_id%" service is deprecated since Symfony 3.1 and will be removed in 4.0.</deprecated>
    </service>
    <service id="form.type.reset" class="Symfony\Component\Form\Extension\Core\Type\ResetType">
      <deprecated>The "%service_id%" service is deprecated since Symfony 3.1 and will be removed in 4.0.</deprecated>
    </service>
    <service id="form.type.currency" class="Symfony\Component\Form\Extension\Core\Type\CurrencyType">
      <deprecated>The "%service_id%" service is deprecated since Symfony 3.1 and will be removed in 4.0.</deprecated>
    </service>
    <service id="form.type_extension.form.http_foundation" class="Symfony\Component\Form\Extension\HttpFoundation\Type\FormTypeHttpFoundationExtension">
      <tag name="form.type_extension" extended_type="Symfony\Component\Form\Extension\Core\Type\FormType" extended-type="Symfony\Component\Form\Extension\Core\Type\FormType"/>
      <argument type="service" id="form.type_extension.form.request_handler"/>
    </service>
    <service id="form.type_extension.form.request_handler" class="Symfony\Component\Form\Extension\HttpFoundation\HttpFoundationRequestHandler" public="false">
      <argument type="service" id="form.server_params"/>
    </service>
    <service id="form.server_params" class="Symfony\Component\Form\Util\ServerParams" public="false">
      <argument type="service" id="request_stack"/>
    </service>
    <service id="form.type_extension.form.validator" class="Symfony\Component\Form\Extension\Validator\Type\FormTypeValidatorExtension">
      <tag name="form.type_extension" extended_type="Symfony\Component\Form\Extension\Core\Type\FormType" extended-type="Symfony\Component\Form\Extension\Core\Type\FormType"/>
      <argument type="service" id="validator"/>
    </service>
    <service id="form.type_extension.repeated.validator" class="Symfony\Component\Form\Extension\Validator\Type\RepeatedTypeValidatorExtension">
      <tag name="form.type_extension" extended_type="Symfony\Component\Form\Extension\Core\Type\RepeatedType" extended-type="Symfony\Component\Form\Extension\Core\Type\RepeatedType"/>
    </service>
    <service id="form.type_extension.submit.validator" class="Symfony\Component\Form\Extension\Validator\Type\SubmitTypeValidatorExtension">
      <tag name="form.type_extension" extended_type="Symfony\Component\Form\Extension\Core\Type\SubmitType" extended-type="Symfony\Component\Form\Extension\Core\Type\SubmitType"/>
    </service>
    <service id="form.type_extension.upload.validator" class="Symfony\Component\Form\Extension\Validator\Type\UploadValidatorExtension">
      <tag name="form.type_extension" extended_type="Symfony\Component\Form\Extension\Core\Type\FormType" extended-type="Symfony\Component\Form\Extension\Core\Type\FormType"/>
      <argument type="service" id="translator.data_collector"/>
      <argument>validators</argument>
    </service>
    <service id="deprecated.form.registry" class="stdClass">
      <property name="registry" type="collection">
        <property type="service" id="form.type_guesser.validator"/>
        <property type="service" id="form.type.choice"/>
        <property type="service" id="form.type.form"/>
        <property type="service" id="form.type_extension.form.http_foundation"/>
        <property type="service" id="form.type_extension.form.validator"/>
        <property type="service" id="form.type_extension.repeated.validator"/>
        <property type="service" id="form.type_extension.submit.validator"/>
        <property type="service" id="form.type_extension.upload.validator"/>
      </property>
      <deprecated>The service "%service_id%" is internal and deprecated since Symfony 3.3 and will be removed in Symfony 4.0</deprecated>
    </service>
    <service id="form.type_extension.csrf" class="Symfony\Component\Form\Extension\Csrf\Type\FormTypeCsrfExtension">
      <tag name="form.type_extension" extended_type="Symfony\Component\Form\Extension\Core\Type\FormType" extended-type="Symfony\Component\Form\Extension\Core\Type\FormType"/>
      <argument type="service" id="security.csrf.token_manager"/>
      <argument>true</argument>
      <argument>_token</argument>
      <argument type="service" id="translator.data_collector"/>
      <argument>validators</argument>
      <argument type="service" id="form.server_params"/>
    </service>
    <service id="deprecated.form.registry.csrf" class="stdClass">
      <property name="registry" type="collection">
        <property type="service" id="form.type_extension.csrf"/>
      </property>
      <deprecated>The service "%service_id%" is internal and deprecated since Symfony 3.3 and will be removed in Symfony 4.0</deprecated>
    </service>
    <service id="security.csrf.token_generator" class="Symfony\Component\Security\Csrf\TokenGenerator\UriSafeTokenGenerator" public="false"/>
    <service id="security.csrf.token_storage" class="Symfony\Component\Security\Csrf\TokenStorage\SessionTokenStorage" public="false">
      <argument type="service" id="session"/>
    </service>
    <service id="security.csrf.token_manager" class="Symfony\Component\Security\Csrf\CsrfTokenManager">
      <argument type="service" id="security.csrf.token_generator"/>
      <argument type="service" id="security.csrf.token_storage"/>
    </service>
    <service id="assets.packages" class="Symfony\Component\Asset\Packages">
      <argument type="service" id="assets._default_package"/>
      <argument type="collection"/>
    </service>
    <service id="assets.empty_package" class="Symfony\Component\Asset\Package" public="false">
      <argument type="service" id="assets.empty_version_strategy"/>
    </service>
    <service id="assets.context" class="Symfony\Component\Asset\Context\RequestStackContext">
      <argument type="service" id="request_stack"/>
    </service>
    <service id="assets.path_package" class="Symfony\Component\Asset\PathPackage" abstract="true">
      <argument></argument>
      <argument></argument>
      <argument type="service" id="assets.context"/>
    </service>
    <service id="assets.url_package" class="Symfony\Component\Asset\UrlPackage" abstract="true">
      <argument></argument>
      <argument></argument>
      <argument type="service" id="assets.context"/>
    </service>
    <service id="assets.static_version_strategy" class="Symfony\Component\Asset\VersionStrategy\StaticVersionStrategy" abstract="true">
      <argument></argument>
      <argument></argument>
    </service>
    <service id="assets.empty_version_strategy" class="Symfony\Component\Asset\VersionStrategy\EmptyVersionStrategy" public="false"/>
    <service id="assets.json_manifest_version_strategy" class="Symfony\Component\Asset\VersionStrategy\JsonManifestVersionStrategy" public="false" abstract="true">
      <argument></argument>
    </service>
    <service id="assets._default_package" class="Symfony\Component\Asset\PathPackage" public="false">
      <argument></argument>
      <argument type="service" id="assets.empty_version_strategy"/>
      <argument type="service" id="assets.context"/>
    </service>
    <service id="templating.engine.delegating" class="Symfony\Bundle\FrameworkBundle\Templating\DelegatingEngine" public="false">
      <argument type="service" id="service_container"/>
      <argument type="collection"/>
    </service>
    <service id="templating.name_parser" class="Symfony\Bundle\FrameworkBundle\Templating\TemplateNameParser">
      <argument type="service" id="kernel"/>
    </service>
    <service id="templating.filename_parser" class="Symfony\Bundle\FrameworkBundle\Templating\TemplateFilenameParser"/>
    <service id="templating.locator" class="Symfony\Bundle\FrameworkBundle\Templating\Loader\TemplateLocator" public="false">
      <argument type="service" id="file_locator"/>
      <argument>D:\wamp64\www\SiteSymfony\SonataBackOffice\var\cache\dev</argument>
    </service>
    <service id="templating.finder" class="Symfony\Bundle\FrameworkBundle\CacheWarmer\TemplateFinder" public="false">
      <argument type="service" id="kernel"/>
      <argument type="service" id="templating.filename_parser"/>
      <argument>D:\wamp64\www\SiteSymfony\SonataBackOffice\app/Resources</argument>
    </service>
    <service id="templating.cache_warmer.template_paths" class="Symfony\Bundle\FrameworkBundle\CacheWarmer\TemplatePathsCacheWarmer" public="false">
      <tag name="kernel.cache_warmer" priority="20"/>
      <argument type="service" id="templating.finder"/>
      <argument type="service" id="templating.locator"/>
    </service>
    <service id="templating.loader.filesystem" class="Symfony\Bundle\FrameworkBundle\Templating\Loader\FilesystemLoader" public="false">
      <argument type="service" id="templating.locator"/>
    </service>
    <service id="templating.loader.cache" class="Symfony\Component\Templating\Loader\CacheLoader" public="false">
      <tag name="monolog.logger" channel="templating"/>
      <argument type="service" id="templating.loader.wrapped"/>
      <argument>null</argument>
      <call method="setLogger">
        <argument type="service" id="monolog.logger.templating" on-invalid="ignore"/>
      </call>
    </service>
    <service id="templating.loader.chain" class="Symfony\Component\Templating\Loader\ChainLoader" public="false">
      <tag name="monolog.logger" channel="templating"/>
      <call method="setLogger">
        <argument type="service" id="monolog.logger.templating" on-invalid="ignore"/>
      </call>
    </service>
    <service id="2_c1195e380783f49ea2946b08fd7fa1887d19cb4b625a93abc99607a03e5a660d" class="Doctrine\Common\Cache\ApcCache" public="false">
      <call method="setNamespace">
        <argument></argument>
      </call>
    </service>
    <service id="1_c1195e380783f49ea2946b08fd7fa1887d19cb4b625a93abc99607a03e5a660d" class="Symfony\Component\Cache\Adapter\PhpArrayAdapter" public="false">
      <argument>D:\wamp64\www\SiteSymfony\SonataBackOffice\var\cache\dev/validation.php</argument>
      <argument type="service" id="cache.validator"/>
      <factory class="Symfony\Component\Cache\Adapter\PhpArrayAdapter" method="create"/>
    </service>
    <service id="validator" class="Symfony\Component\Validator\Validator\ValidatorInterface">
      <factory service="validator.builder" method="getValidator"/>
    </service>
    <service id="validator.builder" class="Symfony\Component\Validator\ValidatorBuilderInterface">
      <call method="setConstraintValidatorFactory">
        <argument type="service" id="validator.validator_factory"/>
      </call>
      <call method="setTranslator">
        <argument type="service" id="translator.data_collector"/>
      </call>
      <call method="setTranslationDomain">
        <argument>validators</argument>
      </call>
      <call method="addXmlMappings">
        <argument type="collection">
          <argument>D:\wamp64\www\SiteSymfony\SonataBackOffice\vendor\symfony\symfony\src\Symfony\Component\Form/Resources/config/validation.xml</argument>
          <argument>D:\wamp64\www\SiteSymfony\SonataBackOffice\vendor\friendsofsymfony\user-bundle/Resources/config/validation.xml</argument>
        </argument>
      </call>
      <call method="enableAnnotationMapping">
        <argument type="service" id="annotations.cached_reader"/>
      </call>
      <call method="addMethodMapping">
        <argument>loadValidatorMetadata</argument>
      </call>
      <call method="addObjectInitializers">
        <argument type="collection">
          <argument type="service" id="doctrine.orm.validator_initializer"/>
          <argument type="service" id="fos_user.validator.initializer"/>
        </argument>
      </call>
      <call method="addXmlMapping">
        <argument>D:\wamp64\www\SiteSymfony\SonataBackOffice\vendor\friendsofsymfony\user-bundle\DependencyInjection\Compiler/../../Resources/config/storage-validation/orm.xml</argument>
      </call>
      <factory class="Symfony\Component\Validator\Validation" method="createValidatorBuilder"/>
    </service>
    <service id="validator.mapping.cache_warmer" class="Symfony\Bundle\FrameworkBundle\CacheWarmer\ValidatorCacheWarmer" public="false">
      <tag name="kernel.cache_warmer"/>
      <argument type="service" id="validator.builder"/>
      <argument>D:\wamp64\www\SiteSymfony\SonataBackOffice\var\cache\dev/validation.php</argument>
      <argument type="service" id="cache.validator"/>
    </service>
    <service id="validator.mapping.cache.symfony" class="Symfony\Component\Validator\Mapping\Cache\Psr6Cache" public="false">
      <argument type="service" id="1_c1195e380783f49ea2946b08fd7fa1887d19cb4b625a93abc99607a03e5a660d"/>
    </service>
    <service id="validator.mapping.cache.doctrine.apc" class="Symfony\Component\Validator\Mapping\Cache\DoctrineCache" public="false">
      <argument type="service" id="2_c1195e380783f49ea2946b08fd7fa1887d19cb4b625a93abc99607a03e5a660d"/>
    </service>
    <service id="validator.validator_factory" class="Symfony\Component\Validator\ContainerConstraintValidatorFactory" public="false">
      <argument type="service" id="service_locator.f4370bc1feb25d18c1820ad3a90b7266"/>
    </service>
    <service id="validator.expression" class="Symfony\Component\Validator\Constraints\ExpressionValidator">
      <tag name="validator.constraint_validator" alias="validator.expression"/>
    </service>
    <service id="validator.email" class="Symfony\Component\Validator\Constraints\EmailValidator">
      <tag name="validator.constraint_validator" alias="Symfony\Component\Validator\Constraints\EmailValidator"/>
      <argument>false</argument>
    </service>
    <service id="fragment.listener" class="Symfony\Component\HttpKernel\EventListener\FragmentListener">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="uri_signer"/>
      <argument>/_fragment</argument>
    </service>
    <service id="translator.default" class="Symfony\Bundle\FrameworkBundle\Translation\Translator">
      <argument type="service" id="service_locator.20ccd3ddf0f78b2202986f924e362585"/>
      <argument type="service" id="translator.selector"/>
      <argument>fr</argument>
      <argument type="collection">
        <argument key="translation.loader.php" type="collection">
          <argument>php</argument>
        </argument>
        <argument key="translation.loader.yml" type="collection">
          <argument>yml</argument>
        </argument>
        <argument key="translation.loader.xliff" type="collection">
          <argument>xlf</argument>
          <argument>xliff</argument>
        </argument>
        <argument key="translation.loader.po" type="collection">
          <argument>po</argument>
        </argument>
        <argument key="translation.loader.mo" type="collection">
          <argument>mo</argument>
        </argument>
        <argument key="translation.loader.qt" type="collection">
          <argument>ts</argument>
        </argument>
        <argument key="translation.loader.csv" type="collection">
          <argument>csv</argument>
        </argument>
        <argument key="translation.loader.res" type="collection">
          <argument>res</argument>
        </argument>
        <argument key="translation.loader.dat" type="collection">
          <argument>dat</argument>
        </argument>
        <argument key="translation.loader.ini" type="collection">
          <argument>ini</argument>
        </argument>
        <argument key="translation.loader.json" type="collection">
          <argument>json</argument>
        </argument>
      </argument>
      <argument type="collection">
        <argument key="cache_dir">D:\wamp64\www\SiteSymfony\SonataBackOffice\var\cache\dev/translations</argument>
        <argument key="debug">true</argument>
        <argument key="resource_files" type="collection">
          <argument key="af" type="collection">
            <argument>D:\wamp64\www\SiteSymfony\SonataBackOffice\vendor\symfony\symfony\src\Symfony\Component\Validator/Resources/translations\validators.af.xlf</argument>
            <argument>D:\wamp64\www\SiteSymfony\SonataBackOffice\vendor\friendsofsymfony\user-bundle/Resources/translations\FOSUserBundle.af.yml</argument>
          </argument>
          <argument key="ar" type="collection">
            <argument>D:\wamp64\www\SiteSymfony\SonataBackOffice\vendor\symfony\symfony\src\Symfony\Component\Validator/Resources/translations\validators.ar.xlf</argument>
            <argument>D:\wamp64\www\SiteSymfony\SonataBackOffice\vendor\symfony\symfony\src\Symfony\Component\Form/Resources/translations\validators.ar.xlf</argument>
            <argument>D:\wamp64\www\SiteSymfony\SonataBackOffice\vendor\symfony\symfony\src\Symfony\Component\Security\Core/Resources/translations\security.ar.xlf</argument>
            <argument>D:\wamp64\www\SiteSymfony\SonataBackOffice\vendor\friendsofsymfony\user-bundle/Resources/translations\FOSUserBundle.ar.yml</argument>
            <argument>D:\wamp64\www\SiteSymfony\SonataBackOffice\vendor\friendsofsymfony\user-bundle/Resources/translations\validators.ar.yml</argument>
            <argument>D:\wamp64\www\SiteSymfony\SonataBackOffice\vendor\sonata-project\core-bundle/Resources/translations\SonataCoreBundle.ar.xliff</argument>
            <argument>D:\wamp64\www\SiteSymfony\SonataBackOffice\vendor\sonata-project\admin-bundle/Resources/translations\SonataAdminBundle.ar.xliff</argument>
            <argument>D:\wamp64\www\SiteSymfony\SonataBackOffice\vendor\javiereguiluz\easyadmin-bundle/Resources/translations\EasyAdminBundle.ar.xlf</argument>
            <argument>D:\wamp64\www\SiteSymfony\SonataBackOffice\vendor\javiereguiluz\easyadmin-bundle/Resources/translations\messages.ar.xlf</argument>
          </argument>
          <argument key="az" type="collection">
            <argument>D:\wamp64\www\SiteSymfony\SonataBackOffice\vendor\symfony\symfony\src\Symfony\Component\Validator/Resources/translations\validators.az.xlf</argument>
            <argument>D:\wamp64\www\SiteSymfony\SonataBackOffice\vendor\symfony\symfony\src\Symfony\Component\Form/Resources/translations\validators.az.xlf</argument>
            <argument>D:\wamp64\www\SiteSymfony\SonataBackOffice\vendor\symfony\symfony\src\Symfony\Component\Security\Core/Resources/translations\security.az.xlf</argument>
          </argument>
          <argument key="bg" type="collection">
            <argument>D:\wamp64\www\SiteSymfony\SonataBackOffice\vendor\symfony\symfony\src\Symfony\Component\Validator/Resources/translations\validators.bg.xlf</argument>
            <argument>D:\wamp64\www\SiteSymfony\SonataBackOffice\vendor\symfony\symfony\src\Symfony\Component\Form/Resources/translations\validators.bg.xlf</argument>
            <argument>D:\wamp64\www\SiteSymfony\SonataBackOffice\vendor\symfony\symfony\src\Symfony\Component\Security\Core/Resources/translations\security.bg.xlf</argument>
            <argument>D:\wamp64\www\SiteSymfony\SonataBackOffice\vendor\friendsofsymfony\user-bundle/Resources/translations\FOSUserBundle.bg.yml</argument>
            <argument>D:\wamp64\www\SiteSymfony\SonataBackOffice\vendor\friendsofsymfony\user-bundle/Resources/translations\validators.bg.yml</argument>
            <argument>D:\wamp64\www\SiteSymfony\SonataBackOffice\vendor\sonata-project\core-bundle/Resources/translations\SonataCoreBundle.bg.xliff</argument>
            <argument>D:\wamp64\www\SiteSymfony\SonataBackOffice\vendor\sonata-project\admin-bundle/Resources/translations\SonataAdminBundle.bg.xliff</argument>
            <argument>D:\wamp64\www\SiteSymfony\SonataBackOffice\vendor\javiereguiluz\easyadmin-bundle/Resources/translations\EasyAdminBundle.bg.xlf</argument>
            <argument>D:\wamp64\www\SiteSymfony\SonataBackOffice\vendor\javiereguiluz\easyadmin-bundle/Resources/translations\messages.bg.xlf</argument>
          </argument>
          <argument key="ca" type="collection">
            <argument>D:\wamp64\www\SiteSymfony\SonataBackOffice\vendor\symfony\symfony\src\Symfony\Component\Validator/Resources/translations\validators.ca.xlf</argument>
            <argument>D:\wamp64\www\SiteSymfony\SonataBackOffice\vendor\symfony\symfony\src\Symfony\Component\Form/Resources/translations\validators.ca.xlf</argument>
            <argument>D:\wamp64\www\SiteSymfony\SonataBackOffice\vendor\symfony\symfony\src\Symfony\Component\Security\Core/Resources/translations\security.ca.xlf</argument>
            <argument>D:\wamp64\www\SiteSymfony\SonataBackOffice\vendor\friendsofsymfony\user-bundle/Resources/translations\FOSUserBundle.ca.yml</argument>
            <argument>D:\wamp64\www\SiteSymfony\SonataBackOffice\vendor\friendsofsymfony\user-bundle/Resources/translations\validators.ca.yml</argument>
            <argument>D:\wamp64\www\SiteSymfony\SonataBackOffice\vendor\sonata-project\core-bundle/Resources/translations\SonataCoreBundle.ca.xliff</argument>
            <argument>D:\wamp64\www\SiteSymfony\SonataBackOffice\vendor\sonata-project\admin-bundle/Resources/translations\SonataAdminBundle.ca.xliff</argument>
            <argument>D:\wamp64\www\SiteSymfony\SonataBackOffice\vendor\javiereguiluz\easyadmin-bundle/Resources/translations\EasyAdminBundle.ca.xlf</argument>
            <argument>D:\wamp64\www\SiteSymfony\SonataBackOffice\vendor\javiereguiluz\easyadmin-bundle/Resources/translations\messages.ca.xlf</argument>
          </argument>
          <argument key="cs" type="collection">
            <argument>D:\wamp64\www\SiteSymfony\SonataBackOffice\vendor\symfony\symfony\src\Symfony\Component\Validator/Resources/translations\validators.cs.xlf</argument>
            <argument>D:\wamp64\www\SiteSymfony\SonataBackOffice\vendor\symfony\symfony\src\Symfony\Component\Form/Resources/translations\validators.cs.xlf</argument>
            <argument>D:\wamp64\www\SiteSymfony\SonataBackOffice\vendor\symfony\symfony\src\Symfony\Component\Security\Core/Resources/translations\security.cs.xlf</argument>
            <argument>D:\wamp64\www\SiteSymfony\SonataBackOffice\vendor\friendsofsymfony\user-bundle/Resources/translations\FOSUserBundle.cs.yml</argument>
            <argument>D:\wamp64\www\SiteSymfony\SonataBackOffice\vendor\friendsofsymfony\user-bundle/Resources/translations\validators.cs.yml</argument>
            <argument>D:\wamp64\www\SiteSymfony\SonataBackOffice\vendor\sonata-project\core-bundle/Resources/translations\SonataCoreBundle.cs.xliff</argument>
            <argument>D:\wamp64\www\SiteSymfony\SonataBackOffice\vendor\sonata-project\admin-bundle/Resources/translations\SonataAdminBundle.cs.xliff</argument>
            <argument>D:\wamp64\www\SiteSymfony\SonataBackOffice\vendor\javiereguiluz\easyadmin-bundle/Resources/translations\EasyAdminBundle.cs.xlf</argument>
            <argument>D:\wamp64\www\SiteSymfony\SonataBackOffice\vendor\javiereguiluz\easyadmin-bundle/Resources/translations\messages.cs.xlf</argument>
          </argument>
          <argument key="cy" type="collection">
            <argument>D:\wamp64\www\SiteSymfony\SonataBackOffice\vendor\symfony\symfony\src\Symfony\Component\Validator/Resources/translations\validators.cy.xlf</argument>
          </argument>
          <argument key="da" type="collection">
            <argument>D:\wamp64\www\SiteSymfony\SonataBackOffice\vendor\symfony\symfony\src\Symfony\Component\Validator/Resources/translations\validators.da.xlf</argument>
            <argument>D:\wamp64\www\SiteSymfony\SonataBackOffice\vendor\symfony\symfony\src\Symfony\Component\Form/Resources/translations\validators.da.xlf</argument>
            <argument>D:\wamp64\www\SiteSymfony\SonataBackOffice\vendor\symfony\symfony\src\Symfony\Component\Security\Core/Resources/translations\security.da.xlf</argument>
            <argument>D:\wamp64\www\SiteSymfony\SonataBackOffice\vendor\friendsofsymfony\user-bundle/Resources/translations\FOSUserBundle.da.yml</argument>
            <argument>D:\wamp64\www\SiteSymfony\SonataBackOffice\vendor\friendsofsymfony\user-bundle/Resources/translations\validators.da.yml</argument>
          </argument>
          <argument key="de" type="collection">
            <argument>D:\wamp64\www\SiteSymfony\SonataBackOffice\vendor\symfony\symfony\src\Symfony\Component\Validator/Resources/translations\validators.de.xlf</argument>
            <argument>D:\wamp64\www\SiteSymfony\SonataBackOffice\vendor\symfony\symfony\src\Symfony\Component\Form/Resources/translations\validators.de.xlf</argument>
            <argument>D:\wamp64\www\SiteSymfony\SonataBackOffice\vendor\symfony\symfony\src\Symfony\Component\Security\Core/Resources/translations\security.de.xlf</argument>
            <argument>D:\wamp64\www\SiteSymfony\SonataBackOffice\vendor\friendsofsymfony\user-bundle/Resources/translations\FOSUserBundle.de.yml</argument>
            <argument>D:\wamp64\www\SiteSymfony\SonataBackOffice\vendor\friendsofsymfony\user-bundle/Resources/translations\validators.de.yml</argument>
            <argument>D:\wamp64\www\SiteSymfony\SonataBackOffice\vendor\sonata-project\core-bundle/Resources/translations\SonataCoreBundle.de.xliff</argument>
            <argument>D:\wamp64\www\SiteSymfony\SonataBackOffice\vendor\sonata-project\block-bundle/Resources/translations\SonataBlockBundle.de.xliff</argument>
            <argument>D:\wamp64\www\SiteSymfony\SonataBackOffice\vendor\sonata-project\admin-bundle/Resources/translations\SonataAdminBundle.de.xliff</argument>
            <argument>D:\wamp64\www\SiteSymfony\SonataBackOffice\vendor\javiereguiluz\easyadmin-bundle/Resources/translations\EasyAdminBundle.de.xlf</argument>
            <argument>D:\wamp64\www\SiteSymfony\SonataBackOffice\vendor\javiereguiluz\easyadmin-bundle/Resources/translations\messages.de.xlf</argument>
          </argument>
          <argument key="el" type="collection">
            <argument>D:\wamp64\www\SiteSymfony\SonataBackOffice\vendor\symfony\symfony\src\Symfony\Component\Validator/Resources/translations\validators.el.xlf</argument>
            <argument>D:\wamp64\www\SiteSymfony\SonataBackOffice\vendor\symfony\symfony\src\Symfony\Component\Form/Resources/translations\validators.el.xlf</argument>
            <argument>D:\wamp64\www\SiteSymfony\SonataBackOffice\vendor\symfony\symfony\src\Symfony\Component\Security\Core/Resources/translations\security.el.xlf</argument>
            <argument>D:\wamp64\www\SiteSymfony\SonataBackOffice\vendor\friendsofsymfony\user-bundle/Resources/translations\FOSUserBundle.el.yml</argument>
            <argument>D:\wamp64\www\SiteSymfony\SonataBackOffice\vendor\friendsofsymfony\user-bundle/Resources/translations\validators.el.yml</argument>
          </argument>
          <argument key="en" type="collection">
            <argument>D:\wamp64\www\SiteSymfony\SonataBackOffice\vendor\symfony\symfony\src\Symfony\Component\Validator/Resources/translations\validators.en.xlf</argument>
            <argument>D:\wamp64\www\SiteSymfony\SonataBackOffice\vendor\symfony\symfony\src\Symfony\Component\Form/Resources/translations\validators.en.xlf</argument>
            <argument>D:\wamp64\www\SiteSymfony\SonataBackOffice\vendor\symfony\symfony\src\Symfony\Component\Security\Core/Resources/translations\security.en.xlf</argument>
            <argument>D:\wamp64\www\SiteSymfony\SonataBackOffice\vendor\friendsofsymfony\user-bundle/Resources/translations\FOSUserBundle.en.yml</argument>
            <argument>D:\wamp64\www\SiteSymfony\SonataBackOffice\vendor\friendsofsymfony\user-bundle/Resources/translations\validators.en.yml</argument>
            <argument>D:\wamp64\www\SiteSymfony\SonataBackOffice\vendor\sonata-project\core-bundle/Resources/translations\SonataCoreBundle.en.xliff</argument>
            <argument>D:\wamp64\www\SiteSymfony\SonataBackOffice\vendor\sonata-project\block-bundle/Resources/translations\SonataBlockBundle.en.xliff</argument>
            <argument>D:\wamp64\www\SiteSymfony\SonataBackOffice\vendor\sonata-project\admin-bundle/Resources/translations\SonataAdminBundle.en.xliff</argument>
            <argument>D:\wamp64\www\SiteSymfony\SonataBackOffice\vendor\javiereguiluz\easyadmin-bundle/Resources/translations\EasyAdminBundle.en.xlf</argument>
            <argument>D:\wamp64\www\SiteSymfony\SonataBackOffice\vendor\javiereguiluz\easyadmin-bundle/Resources/translations\messages.en.xlf</argument>
          </argument>
          <argument key="es" type="collection">
            <argument>D:\wamp64\www\SiteSymfony\SonataBackOffice\vendor\symfony\symfony\src\Symfony\Component\Validator/Resources/translations\validators.es.xlf</argument>
            <argument>D:\wamp64\www\SiteSymfony\SonataBackOffice\vendor\symfony\symfony\src\Symfony\Component\Form/Resources/translations\validators.es.xlf</argument>
            <argument>D:\wamp64\www\SiteSymfony\SonataBackOffice\vendor\symfony\symfony\src\Symfony\Component\Security\Core/Resources/translations\security.es.xlf</argument>
            <argument>D:\wamp64\www\SiteSymfony\SonataBackOffice\vendor\friendsofsymfony\user-bundle/Resources/translations\FOSUserBundle.es.yml</argument>
            <argument>D:\wamp64\www\SiteSymfony\SonataBackOffice\vendor\friendsofsymfony\user-bundle/Resources/translations\validators.es.yml</argument>
            <argument>D:\wamp64\www\SiteSymfony\SonataBackOffice\vendor\sonata-project\core-bundle/Resources/translations\SonataCoreBundle.es.xliff</argument>
            <argument>D:\wamp64\www\SiteSymfony\SonataBackOffice\vendor\sonata-project\admin-bundle/Resources/translations\SonataAdminBundle.es.xliff</argument>
            <argument>D:\wamp64\www\SiteSymfony\SonataBackOffice\vendor\javiereguiluz\easyadmin-bundle/Resources/translations\EasyAdminBundle.es.xlf</argument>
            <argument>D:\wamp64\www\SiteSymfony\SonataBackOffice\vendor\javiereguiluz\easyadmin-bundle/Resources/translations\messages.es.xlf</argument>
          </argument>
          <argument key="et" type="collection">
            <argument>D:\wamp64\www\SiteSymfony\SonataBackOffice\vendor\symfony\symfony\src\Symfony\Component\Validator/Resources/translations\validators.et.xlf</argument>
            <argument>D:\wamp64\www\SiteSymfony\SonataBackOffice\vendor\symfony\symfony\src\Symfony\Component\Form/Resources/translations\validators.et.xlf</argument>
            <argument>D:\wamp64\www\SiteSymfony\SonataBackOffice\vendor\friendsofsymfony\user-bundle/Resources/translations\FOSUserBundle.et.yml</argument>
          </argument>
          <argument key="eu" type="collection">
            <argument>D:\wamp64\www\SiteSymfony\SonataBackOffice\vendor\symfony\symfony\src\Symfony\Component\Validator/Resources/translations\validators.eu.xlf</argument>
            <argument>D:\wamp64\www\SiteSymfony\SonataBackOffice\vendor\symfony\symfony\src\Symfony\Component\Form/Resources/translations\validators.eu.xlf</argument>
            <argument>D:\wamp64\www\SiteSymfony\SonataBackOffice\vendor\friendsofsymfony\user-bundle/Resources/translations\FOSUserBundle.eu.yml</argument>
            <argument>D:\wamp64\www\SiteSymfony\SonataBackOffice\vendor\friendsofsymfony\user-bundle/Resources/translations\validators.eu.yml</argument>
            <argument>D:\wamp64\www\SiteSymfony\SonataBackOffice\vendor\sonata-project\core-bundle/Resources/translations\SonataCoreBundle.eu.xliff</argument>
            <argument>D:\wamp64\www\SiteSymfony\SonataBackOffice\vendor\sonata-project\admin-bundle/Resources/translations\SonataAdminBundle.eu.xliff</argument>
            <argument>D:\wamp64\www\SiteSymfony\SonataBackOffice\vendor\javiereguiluz\easyadmin-bundle/Resources/translations\EasyAdminBundle.eu.xlf</argument>
            <argument>D:\wamp64\www\SiteSymfony\SonataBackOffice\vendor\javiereguiluz\easyadmin-bundle/Resources/translations\messages.eu.xlf</argument>
          </argument>
          <argument key="fa" type="collection">
            <argument>D:\wamp64\www\SiteSymfony\SonataBackOffice\vendor\symfony\symfony\src\Symfony\Component\Validator/Resources/translations\validators.fa.xlf</argument>
            <argument>D:\wamp64\www\SiteSymfony\SonataBackOffice\vendor\symfony\symfony\src\Symfony\Component\Form/Resources/translations\validators.fa.xlf</argument>
            <argument>D:\wamp64\www\SiteSymfony\SonataBackOffice\vendor\symfony\symfony\src\Symfony\Component\Security\Core/Resources/translations\security.fa.xlf</argument>
            <argument>D:\wamp64\www\SiteSymfony\SonataBackOffice\vendor\friendsofsymfony\user-bundle/Resources/translations\FOSUserBundle.fa.yml</argument>
            <argument>D:\wamp64\www\SiteSymfony\SonataBackOffice\vendor\friendsofsymfony\user-bundle/Resources/translations\validators.fa.yml</argument>
            <argument>D:\wamp64\www\SiteSymfony\SonataBackOffice\vendor\sonata-project\core-bundle/Resources/translations\SonataCoreBundle.fa.xliff</argument>
            <argument>D:\wamp64\www\SiteSymfony\SonataBackOffice\vendor\sonata-project\admin-bundle/Resources/translations\SonataAdminBundle.fa.xliff</argument>
          </argument>
          <argument key="fi" type="collection">
            <argument>D:\wamp64\www\SiteSymfony\SonataBackOffice\vendor\symfony\symfony\src\Symfony\Component\Validator/Resources/translations\validators.fi.xlf</argument>
            <argument>D:\wamp64\www\SiteSymfony\SonataBackOffice\vendor\symfony\symfony\src\Symfony\Component\Form/Resources/translations\validators.fi.xlf</argument>
            <argument>D:\wamp64\www\SiteSymfony\SonataBackOffice\vendor\friendsofsymfony\user-bundle/Resources/translations\FOSUserBundle.fi.yml</argument>
            <argument>D:\wamp64\www\SiteSymfony\SonataBackOffice\vendor\friendsofsymfony\user-bundle/Resources/translations\validators.fi.yml</argument>
            <argument>D:\wamp64\www\SiteSymfony\SonataBackOffice\vendor\sonata-project\core-bundle/Resources/translations\SonataCoreBundle.fi.xliff</argument>
            <argument>D:\wamp64\www\SiteSymfony\SonataBackOffice\vendor\javiereguiluz\easyadmin-bundle/Resources/translations\EasyAdminBundle.fi.xlf</argument>
            <argument>D:\wamp64\www\SiteSymfony\SonataBackOffice\vendor\javiereguiluz\easyadmin-bundle/Resources/translations\messages.fi.xlf</argument>
          </argument>
          <argument key="fr" type="collection">
            <argument>D:\wamp64\www\SiteSymfony\SonataBackOffice\vendor\symfony\symfony\src\Symfony\Component\Validator/Resources/translations\validators.fr.xlf</argument>
            <argument>D:\wamp64\www\SiteSymfony\SonataBackOffice\vendor\symfony\symfony\src\Symfony\Component\Form/Resources/translations\validators.fr.xlf</argument>
            <argument>D:\wamp64\www\SiteSymfony\SonataBackOffice\vendor\symfony\symfony\src\Symfony\Component\Security\Core/Resources/translations\security.fr.xlf</argument>
            <argument>D:\wamp64\www\SiteSymfony\SonataBackOffice\vendor\friendsofsymfony\user-bundle/Resources/translations\FOSUserBundle.fr.yml</argument>
            <argument>D:\wamp64\www\SiteSymfony\SonataBackOffice\vendor\friendsofsymfony\user-bundle/Resources/translations\validators.fr.yml</argument>
            <argument>D:\wamp64\www\SiteSymfony\SonataBackOffice\vendor\sonata-project\core-bundle/Resources/translations\SonataCoreBundle.fr.xliff</argument>
            <argument>D:\wamp64\www\SiteSymfony\SonataBackOffice\vendor\sonata-project\block-bundle/Resources/translations\SonataBlockBundle.fr.xliff</argument>
            <argument>D:\wamp64\www\SiteSymfony\SonataBackOffice\vendor\sonata-project\admin-bundle/Resources/translations\SonataAdminBundle.fr.xliff</argument>
            <argument>D:\wamp64\www\SiteSymfony\SonataBackOffice\vendor\javiereguiluz\easyadmin-bundle/Resources/translations\EasyAdminBundle.fr.xlf</argument>
            <argument>D:\wamp64\www\SiteSymfony\SonataBackOffice\vendor\javiereguiluz\easyadmin-bundle/Resources/translations\messages.fr.xlf</argument>
          </argument>
          <argument key="gl" type="collection">
            <argument>D:\wamp64\www\SiteSymfony\SonataBackOffice\vendor\symfony\symfony\src\Symfony\Component\Validator/Resources/translations\validators.gl.xlf</argument>
            <argument>D:\wamp64\www\SiteSymfony\SonataBackOffice\vendor\symfony\symfony\src\Symfony\Component\Form/Resources/translations\validators.gl.xlf</argument>
            <argument>D:\wamp64\www\SiteSymfony\SonataBackOffice\vendor\symfony\symfony\src\Symfony\Component\Security\Core/Resources/translations\security.gl.xlf</argument>
          </argument>
          <argument key="he" type="collection">
            <argument>D:\wamp64\www\SiteSymfony\SonataBackOffice\vendor\symfony\symfony\src\Symfony\Component\Validator/Resources/translations\validators.he.xlf</argument>
            <argument>D:\wamp64\www\SiteSymfony\SonataBackOffice\vendor\symfony\symfony\src\Symfony\Component\Form/Resources/translations\validators.he.xlf</argument>
            <argument>D:\wamp64\www\SiteSymfony\SonataBackOffice\vendor\symfony\symfony\src\Symfony\Component\Security\Core/Resources/translations\security.he.xlf</argument>
            <argument>D:\wamp64\www\SiteSymfony\SonataBackOffice\vendor\friendsofsymfony\user-bundle/Resources/translations\FOSUserBundle.he.yml</argument>
            <argument>D:\wamp64\www\SiteSymfony\SonataBackOffice\vendor\friendsofsymfony\user-bundle/Resources/translations\validators.he.yml</argument>
          </argument>
          <argument key="hr" type="collection">
            <argument>D:\wamp64\www\SiteSymfony\SonataBackOffice\vendor\symfony\symfony\src\Symfony\Component\Validator/Resources/translations\validators.hr.xlf</argument>
            <argument>D:\wamp64\www\SiteSymfony\SonataBackOffice\vendor\symfony\symfony\src\Symfony\Component\Form/Resources/translations\validators.hr.xlf</argument>
            <argument>D:\wamp64\www\SiteSymfony\SonataBackOffice\vendor\symfony\symfony\src\Symfony\Component\Security\Core/Resources/translations\security.hr.xlf</argument>
            <argument>D:\wamp64\www\SiteSymfony\SonataBackOffice\vendor\friendsofsymfony\user-bundle/Resources/translations\FOSUserBundle.hr.yml</argument>
            <argument>D:\wamp64\www\SiteSymfony\SonataBackOffice\vendor\friendsofsymfony\user-bundle/Resources/translations\validators.hr.yml</argument>
            <argument>D:\wamp64\www\SiteSymfony\SonataBackOffice\vendor\sonata-project\core-bundle/Resources/translations\SonataCoreBundle.hr.xliff</argument>
            <argument>D:\wamp64\www\SiteSymfony\SonataBackOffice\vendor\sonata-project\admin-bundle/Resources/translations\SonataAdminBundle.hr.xliff</argument>
          </argument>
          <argument key="hu" type="collection">
            <argument>D:\wamp64\www\SiteSymfony\SonataBackOffice\vendor\symfony\symfony\src\Symfony\Component\Validator/Resources/translations\validators.hu.xlf</argument>
            <argument>D:\wamp64\www\SiteSymfony\SonataBackOffice\vendor\symfony\symfony\src\Symfony\Component\Form/Resources/translations\validators.hu.xlf</argument>
            <argument>D:\wamp64\www\SiteSymfony\SonataBackOffice\vendor\symfony\symfony\src\Symfony\Component\Security\Core/Resources/translations\security.hu.xlf</argument>
            <argument>D:\wamp64\www\SiteSymfony\SonataBackOffice\vendor\friendsofsymfony\user-bundle/Resources/translations\FOSUserBundle.hu.yml</argument>
            <argument>D:\wamp64\www\SiteSymfony\SonataBackOffice\vendor\friendsofsymfony\user-bundle/Resources/translations\validators.hu.yml</argument>
            <argument>D:\wamp64\www\SiteSymfony\SonataBackOffice\vendor\sonata-project\core-bundle/Resources/translations\SonataCoreBundle.hu.xliff</argument>
            <argument>D:\wamp64\www\SiteSymfony\SonataBackOffice\vendor\sonata-project\block-bundle/Resources/translations\SonataBlockBundle.hu.xliff</argument>
            <argument>D:\wamp64\www\SiteSymfony\SonataBackOffice\vendor\sonata-project\admin-bundle/Resources/translations\SonataAdminBundle.hu.xliff</argument>
          </argument>
          <argument key="hy" type="collection">
            <argument>D:\wamp64\www\SiteSymfony\SonataBackOffice\vendor\symfony\symfony\src\Symfony\Component\Validator/Resources/translations\validators.hy.xlf</argument>
            <argument>D:\wamp64\www\SiteSymfony\SonataBackOffice\vendor\symfony\symfony\src\Symfony\Component\Form/Resources/translations\validators.hy.xlf</argument>
          </argument>
          <argument key="id" type="collection">
            <argument>D:\wamp64\www\SiteSymfony\SonataBackOffice\vendor\symfony\symfony\src\Symfony\Component\Validator/Resources/translations\validators.id.xlf</argument>
            <argument>D:\wamp64\www\SiteSymfony\SonataBackOffice\vendor\symfony\symfony\src\Symfony\Component\Form/Resources/translations\validators.id.xlf</argument>
            <argument>D:\wamp64\www\SiteSymfony\SonataBackOffice\vendor\symfony\symfony\src\Symfony\Component\Security\Core/Resources/translations\security.id.xlf</argument>
            <argument>D:\wamp64\www\SiteSymfony\SonataBackOffice\vendor\friendsofsymfony\user-bundle/Resources/translations\FOSUserBundle.id.yml</argument>
            <argument>D:\wamp64\www\SiteSymfony\SonataBackOffice\vendor\friendsofsymfony\user-bundle/Resources/translations\validators.id.yml</argument>
          </argument>
          <argument key="it" type="collection">
            <argument>D:\wamp64\www\SiteSymfony\SonataBackOffice\vendor\symfony\symfony\src\Symfony\Component\Validator/Resources/translations\validators.it.xlf</argument>
            <argument>D:\wamp64\www\SiteSymfony\SonataBackOffice\vendor\symfony\symfony\src\Symfony\Component\Form/Resources/translations\validators.it.xlf</argument>
            <argument>D:\wamp64\www\SiteSymfony\SonataBackOffice\vendor\symfony\symfony\src\Symfony\Component\Security\Core/Resources/translations\security.it.xlf</argument>
            <argument>D:\wamp64\www\SiteSymfony\SonataBackOffice\vendor\friendsofsymfony\user-bundle/Resources/translations\FOSUserBundle.it.yml</argument>
            <argument>D:\wamp64\www\SiteSymfony\SonataBackOffice\vendor\friendsofsymfony\user-bundle/Resources/translations\validators.it.yml</argument>
            <argument>D:\wamp64\www\SiteSymfony\SonataBackOffice\vendor\sonata-project\core-bundle/Resources/translations\SonataCoreBundle.it.xliff</argument>
            <argument>D:\wamp64\www\SiteSymfony\SonataBackOffice\vendor\sonata-project\block-bundle/Resources/translations\SonataBlockBundle.it.xliff</argument>
            <argument>D:\wamp64\www\SiteSymfony\SonataBackOffice\vendor\sonata-project\admin-bundle/Resources/translations\SonataAdminBundle.it.xliff</argument>
            <argument>D:\wamp64\www\SiteSymfony\SonataBackOffice\vendor\javiereguiluz\easyadmin-bundle/Resources/translations\EasyAdminBundle.it.xlf</argument>
            <argument>D:\wamp64\www\SiteSymfony\SonataBackOffice\vendor\javiereguiluz\easyadmin-bundle/Resources/translations\messages.it.xlf</argument>
          </argument>
          <argument key="ja" type="collection">
            <argument>D:\wamp64\www\SiteSymfony\SonataBackOffice\vendor\symfony\symfony\src\Symfony\Component\Validator/Resources/translations\validators.ja.xlf</argument>
            <argument>D:\wamp64\www\SiteSymfony\SonataBackOffice\vendor\symfony\symfony\src\Symfony\Component\Form/Resources/translations\validators.ja.xlf</argument>
            <argument>D:\wamp64\www\SiteSymfony\SonataBackOffice\vendor\symfony\symfony\src\Symfony\Component\Security\Core/Resources/translations\security.ja.xlf</argument>
            <argument>D:\wamp64\www\SiteSymfony\SonataBackOffice\vendor\friendsofsymfony\user-bundle/Resources/translations\FOSUserBundle.ja.yml</argument>
            <argument>D:\wamp64\www\SiteSymfony\SonataBackOffice\vendor\friendsofsymfony\user-bundle/Resources/translations\validators.ja.yml</argument>
            <argument>D:\wamp64\www\SiteSymfony\SonataBackOffice\vendor\sonata-project\core-bundle/Resources/translations\SonataCoreBundle.ja.xliff</argument>
            <argument>D:\wamp64\www\SiteSymfony\SonataBackOffice\vendor\sonata-project\admin-bundle/Resources/translations\SonataAdminBundle.ja.xliff</argument>
          </argument>
          <argument key="lb" type="collection">
            <argument>D:\wamp64\www\SiteSymfony\SonataBackOffice\vendor\symfony\symfony\src\Symfony\Component\Validator/Resources/translations\validators.lb.xlf</argument>
            <argument>D:\wamp64\www\SiteSymfony\SonataBackOffice\vendor\symfony\symfony\src\Symfony\Component\Form/Resources/translations\validators.lb.xlf</argument>
            <argument>D:\wamp64\www\SiteSymfony\SonataBackOffice\vendor\symfony\symfony\src\Symfony\Component\Security\Core/Resources/translations\security.lb.xlf</argument>
            <argument>D:\wamp64\www\SiteSymfony\SonataBackOffice\vendor\friendsofsymfony\user-bundle/Resources/translations\FOSUserBundle.lb.yml</argument>
            <argument>D:\wamp64\www\SiteSymfony\SonataBackOffice\vendor\sonata-project\core-bundle/Resources/translations\SonataCoreBundle.lb.xliff</argument>
            <argument>D:\wamp64\www\SiteSymfony\SonataBackOffice\vendor\sonata-project\admin-bundle/Resources/translations\SonataAdminBundle.lb.xliff</argument>
          </argument>
          <argument key="lt" type="collection">
            <argument>D:\wamp64\www\SiteSymfony\SonataBackOffice\vendor\symfony\symfony\src\Symfony\Component\Validator/Resources/translations\validators.lt.xlf</argument>
            <argument>D:\wamp64\www\SiteSymfony\SonataBackOffice\vendor\symfony\symfony\src\Symfony\Component\Form/Resources/translations\validators.lt.xlf</argument>
            <argument>D:\wamp64\www\SiteSymfony\SonataBackOffice\vendor\symfony\symfony\src\Symfony\Component\Security\Core/Resources/translations\security.lt.xlf</argument>
            <argument>D:\wamp64\www\SiteSymfony\SonataBackOffice\vendor\friendsofsymfony\user-bundle/Resources/translations\FOSUserBundle.lt.yml</argument>
            <argument>D:\wamp64\www\SiteSymfony\SonataBackOffice\vendor\friendsofsymfony\user-bundle/Resources/translations\validators.lt.yml</argument>
            <argument>D:\wamp64\www\SiteSymfony\SonataBackOffice\vendor\sonata-project\core-bundle/Resources/translations\SonataCoreBundle.lt.xliff</argument>
            <argument>D:\wamp64\www\SiteSymfony\SonataBackOffice\vendor\sonata-project\admin-bundle/Resources/translations\SonataAdminBundle.lt.xliff</argument>
          </argument>
          <argument key="lv" type="collection">
            <argument>D:\wamp64\www\SiteSymfony\SonataBackOffice\vendor\symfony\symfony\src\Symfony\Component\Validator/Resources/translations\validators.lv.xlf</argument>
            <argument>D:\wamp64\www\SiteSymfony\SonataBackOffice\vendor\symfony\symfony\src\Symfony\Component\Form/Resources/translations\validators.lv.xlf</argument>
            <argument>D:\wamp64\www\SiteSymfony\SonataBackOffice\vendor\symfony\symfony\src\Symfony\Component\Security\Core/Resources/translations\security.lv.xlf</argument>
            <argument>D:\wamp64\www\SiteSymfony\SonataBackOffice\vendor\friendsofsymfony\user-bundle/Resources/translations\FOSUserBundle.lv.yml</argument>
            <argument>D:\wamp64\www\SiteSymfony\SonataBackOffice\vendor\friendsofsymfony\user-bundle/Resources/translations\validators.lv.yml</argument>
          </argument>
          <argument key="mn" type="collection">
            <argument>D:\wamp64\www\SiteSymfony\SonataBackOffice\vendor\symfony\symfony\src\Symfony\Component\Validator/Resources/translations\validators.mn.xlf</argument>
            <argument>D:\wamp64\www\SiteSymfony\SonataBackOffice\vendor\symfony\symfony\src\Symfony\Component\Form/Resources/translations\validators.mn.xlf</argument>
          </argument>
          <argument key="nl" type="collection">
            <argument>D:\wamp64\www\SiteSymfony\SonataBackOffice\vendor\symfony\symfony\src\Symfony\Component\Validator/Resources/translations\validators.nl.xlf</argument>
            <argument>D:\wamp64\www\SiteSymfony\SonataBackOffice\vendor\symfony\symfony\src\Symfony\Component\Form/Resources/translations\validators.nl.xlf</argument>
            <argument>D:\wamp64\www\SiteSymfony\SonataBackOffice\vendor\symfony\symfony\src\Symfony\Component\Security\Core/Resources/translations\security.nl.xlf</argument>
            <argument>D:\wamp64\www\SiteSymfony\SonataBackOffice\vendor\friendsofsymfony\user-bundle/Resources/translations\FOSUserBundle.nl.yml</argument>
            <argument>D:\wamp64\www\SiteSymfony\SonataBackOffice\vendor\friendsofsymfony\user-bundle/Resources/translations\validators.nl.yml</argument>
            <argument>D:\wamp64\www\SiteSymfony\SonataBackOffice\vendor\sonata-project\core-bundle/Resources/translations\SonataCoreBundle.nl.xliff</argument>
            <argument>D:\wamp64\www\SiteSymfony\SonataBackOffice\vendor\sonata-project\admin-bundle/Resources/translations\SonataAdminBundle.nl.xliff</argument>
            <argument>D:\wamp64\www\SiteSymfony\SonataBackOffice\vendor\javiereguiluz\easyadmin-bundle/Resources/translations\EasyAdminBundle.nl.xlf</argument>
            <argument>D:\wamp64\www\SiteSymfony\SonataBackOffice\vendor\javiereguiluz\easyadmin-bundle/Resources/translations\messages.nl.xlf</argument>
          </argument>
          <argument key="nn" type="collection">
            <argument>D:\wamp64\www\SiteSymfony\SonataBackOffice\vendor\symfony\symfony\src\Symfony\Component\Validator/Resources/translations\validators.nn.xlf</argument>
          </argument>
          <argument key="no" type="collection">
            <argument>D:\wamp64\www\SiteSymfony\SonataBackOffice\vendor\symfony\symfony\src\Symfony\Component\Validator/Resources/translations\validators.no.xlf</argument>
            <argument>D:\wamp64\www\SiteSymfony\SonataBackOffice\vendor\symfony\symfony\src\Symfony\Component\Form/Resources/translations\validators.no.xlf</argument>
            <argument>D:\wamp64\www\SiteSymfony\SonataBackOffice\vendor\symfony\symfony\src\Symfony\Component\Security\Core/Resources/translations\security.no.xlf</argument>
            <argument>D:\wamp64\www\SiteSymfony\SonataBackOffice\vendor\sonata-project\admin-bundle/Resources/translations\SonataAdminBundle.no.xliff</argument>
          </argument>
          <argument key="pl" type="collection">
            <argument>D:\wamp64\www\SiteSymfony\SonataBackOffice\vendor\symfony\symfony\src\Symfony\Component\Validator/Resources/translations\validators.pl.xlf</argument>
            <argument>D:\wamp64\www\SiteSymfony\SonataBackOffice\vendor\symfony\symfony\src\Symfony\Component\Form/Resources/translations\validators.pl.xlf</argument>
            <argument>D:\wamp64\www\SiteSymfony\SonataBackOffice\vendor\symfony\symfony\src\Symfony\Component\Security\Core/Resources/translations\security.pl.xlf</argument>
            <argument>D:\wamp64\www\SiteSymfony\SonataBackOffice\vendor\friendsofsymfony\user-bundle/Resources/translations\FOSUserBundle.pl.yml</argument>
            <argument>D:\wamp64\www\SiteSymfony\SonataBackOffice\vendor\friendsofsymfony\user-bundle/Resources/translations\validators.pl.yml</argument>
            <argument>D:\wamp64\www\SiteSymfony\SonataBackOffice\vendor\sonata-project\core-bundle/Resources/translations\SonataCoreBundle.pl.xliff</argument>
            <argument>D:\wamp64\www\SiteSymfony\SonataBackOffice\vendor\sonata-project\admin-bundle/Resources/translations\SonataAdminBundle.pl.xliff</argument>
            <argument>D:\wamp64\www\SiteSymfony\SonataBackOffice\vendor\javiereguiluz\easyadmin-bundle/Resources/translations\EasyAdminBundle.pl.xlf</argument>
            <argument>D:\wamp64\www\SiteSymfony\SonataBackOffice\vendor\javiereguiluz\easyadmin-bundle/Resources/translations\messages.pl.xlf</argument>
          </argument>
          <argument key="pt" type="collection">
            <argument>D:\wamp64\www\SiteSymfony\SonataBackOffice\vendor\symfony\symfony\src\Symfony\Component\Validator/Resources/translations\validators.pt.xlf</argument>
            <argument>D:\wamp64\www\SiteSymfony\SonataBackOffice\vendor\symfony\symfony\src\Symfony\Component\Form/Resources/translations\validators.pt.xlf</argument>
            <argument>D:\wamp64\www\SiteSymfony\SonataBackOffice\vendor\friendsofsymfony\user-bundle/Resources/translations\FOSUserBundle.pt.yml</argument>
            <argument>D:\wamp64\www\SiteSymfony\SonataBackOffice\vendor\friendsofsymfony\user-bundle/Resources/translations\validators.pt.yml</argument>
            <argument>D:\wamp64\www\SiteSymfony\SonataBackOffice\vendor\sonata-project\core-bundle/Resources/translations\SonataCoreBundle.pt.xliff</argument>
            <argument>D:\wamp64\www\SiteSymfony\SonataBackOffice\vendor\sonata-project\admin-bundle/Resources/translations\SonataAdminBundle.pt.xliff</argument>
            <argument>D:\wamp64\www\SiteSymfony\SonataBackOffice\vendor\javiereguiluz\easyadmin-bundle/Resources/translations\EasyAdminBundle.pt.xlf</argument>
            <argument>D:\wamp64\www\SiteSymfony\SonataBackOffice\vendor\javiereguiluz\easyadmin-bundle/Resources/translations\messages.pt.xlf</argument>
          </argument>
          <argument key="pt_BR" type="collection">
            <argument>D:\wamp64\www\SiteSymfony\SonataBackOffice\vendor\symfony\symfony\src\Symfony\Component\Validator/Resources/translations\validators.pt_BR.xlf</argument>
            <argument>D:\wamp64\www\SiteSymfony\SonataBackOffice\vendor\symfony\symfony\src\Symfony\Component\Form/Resources/translations\validators.pt_BR.xlf</argument>
            <argument>D:\wamp64\www\SiteSymfony\SonataBackOffice\vendor\symfony\symfony\src\Symfony\Component\Security\Core/Resources/translations\security.pt_BR.xlf</argument>
            <argument>D:\wamp64\www\SiteSymfony\SonataBackOffice\vendor\friendsofsymfony\user-bundle/Resources/translations\FOSUserBundle.pt_BR.yml</argument>
            <argument>D:\wamp64\www\SiteSymfony\SonataBackOffice\vendor\friendsofsymfony\user-bundle/Resources/translations\validators.pt_BR.yml</argument>
            <argument>D:\wamp64\www\SiteSymfony\SonataBackOffice\vendor\sonata-project\core-bundle/Resources/translations\SonataCoreBundle.pt_BR.xliff</argument>
            <argument>D:\wamp64\www\SiteSymfony\SonataBackOffice\vendor\sonata-project\admin-bundle/Resources/translations\SonataAdminBundle.pt_BR.xliff</argument>
          </argument>
          <argument key="ro" type="collection">
            <argument>D:\wamp64\www\SiteSymfony\SonataBackOffice\vendor\symfony\symfony\src\Symfony\Component\Validator/Resources/translations\validators.ro.xlf</argument>
            <argument>D:\wamp64\www\SiteSymfony\SonataBackOffice\vendor\symfony\symfony\src\Symfony\Component\Form/Resources/translations\validators.ro.xlf</argument>
            <argument>D:\wamp64\www\SiteSymfony\SonataBackOffice\vendor\symfony\symfony\src\Symfony\Component\Security\Core/Resources/translations\security.ro.xlf</argument>
            <argument>D:\wamp64\www\SiteSymfony\SonataBackOffice\vendor\friendsofsymfony\user-bundle/Resources/translations\FOSUserBundle.ro.yml</argument>
            <argument>D:\wamp64\www\SiteSymfony\SonataBackOffice\vendor\friendsofsymfony\user-bundle/Resources/translations\validators.ro.yml</argument>
            <argument>D:\wamp64\www\SiteSymfony\SonataBackOffice\vendor\sonata-project\core-bundle/Resources/translations\SonataCoreBundle.ro.xliff</argument>
            <argument>D:\wamp64\www\SiteSymfony\SonataBackOffice\vendor\sonata-project\admin-bundle/Resources/translations\SonataAdminBundle.ro.xliff</argument>
            <argument>D:\wamp64\www\SiteSymfony\SonataBackOffice\vendor\javiereguiluz\easyadmin-bundle/Resources/translations\EasyAdminBundle.ro.xlf</argument>
            <argument>D:\wamp64\www\SiteSymfony\SonataBackOffice\vendor\javiereguiluz\easyadmin-bundle/Resources/translations\messages.ro.xlf</argument>
          </argument>
          <argument key="ru" type="collection">
            <argument>D:\wamp64\www\SiteSymfony\SonataBackOffice\vendor\symfony\symfony\src\Symfony\Component\Validator/Resources/translations\validators.ru.xlf</argument>
            <argument>D:\wamp64\www\SiteSymfony\SonataBackOffice\vendor\symfony\symfony\src\Symfony\Component\Form/Resources/translations\validators.ru.xlf</argument>
            <argument>D:\wamp64\www\SiteSymfony\SonataBackOffice\vendor\symfony\symfony\src\Symfony\Component\Security\Core/Resources/translations\security.ru.xlf</argument>
            <argument>D:\wamp64\www\SiteSymfony\SonataBackOffice\vendor\friendsofsymfony\user-bundle/Resources/translations\FOSUserBundle.ru.yml</argument>
            <argument>D:\wamp64\www\SiteSymfony\SonataBackOffice\vendor\friendsofsymfony\user-bundle/Resources/translations\validators.ru.yml</argument>
            <argument>D:\wamp64\www\SiteSymfony\SonataBackOffice\vendor\sonata-project\core-bundle/Resources/translations\SonataCoreBundle.ru.xliff</argument>
            <argument>D:\wamp64\www\SiteSymfony\SonataBackOffice\vendor\sonata-project\admin-bundle/Resources/translations\SonataAdminBundle.ru.xliff</argument>
            <argument>D:\wamp64\www\SiteSymfony\SonataBackOffice\vendor\javiereguiluz\easyadmin-bundle/Resources/translations\EasyAdminBundle.ru.xlf</argument>
            <argument>D:\wamp64\www\SiteSymfony\SonataBackOffice\vendor\javiereguiluz\easyadmin-bundle/Resources/translations\messages.ru.xlf</argument>
          </argument>
          <argument key="sk" type="collection">
            <argument>D:\wamp64\www\SiteSymfony\SonataBackOffice\vendor\symfony\symfony\src\Symfony\Component\Validator/Resources/translations\validators.sk.xlf</argument>
            <argument>D:\wamp64\www\SiteSymfony\SonataBackOffice\vendor\symfony\symfony\src\Symfony\Component\Form/Resources/translations\validators.sk.xlf</argument>
            <argument>D:\wamp64\www\SiteSymfony\SonataBackOffice\vendor\symfony\symfony\src\Symfony\Component\Security\Core/Resources/translations\security.sk.xlf</argument>
            <argument>D:\wamp64\www\SiteSymfony\SonataBackOffice\vendor\friendsofsymfony\user-bundle/Resources/translations\FOSUserBundle.sk.yml</argument>
            <argument>D:\wamp64\www\SiteSymfony\SonataBackOffice\vendor\friendsofsymfony\user-bundle/Resources/translations\validators.sk.yml</argument>
            <argument>D:\wamp64\www\SiteSymfony\SonataBackOffice\vendor\sonata-project\core-bundle/Resources/translations\SonataCoreBundle.sk.xliff</argument>
            <argument>D:\wamp64\www\SiteSymfony\SonataBackOffice\vendor\sonata-project\admin-bundle/Resources/translations\SonataAdminBundle.sk.xliff</argument>
          </argument>
          <argument key="sl" type="collection">
            <argument>D:\wamp64\www\SiteSymfony\SonataBackOffice\vendor\symfony\symfony\src\Symfony\Component\Validator/Resources/translations\validators.sl.xlf</argument>
            <argument>D:\wamp64\www\SiteSymfony\SonataBackOffice\vendor\symfony\symfony\src\Symfony\Component\Form/Resources/translations\validators.sl.xlf</argument>
            <argument>D:\wamp64\www\SiteSymfony\SonataBackOffice\vendor\symfony\symfony\src\Symfony\Component\Security\Core/Resources/translations\security.sl.xlf</argument>
            <argument>D:\wamp64\www\SiteSymfony\SonataBackOffice\vendor\friendsofsymfony\user-bundle/Resources/translations\FOSUserBundle.sl.yml</argument>
            <argument>D:\wamp64\www\SiteSymfony\SonataBackOffice\vendor\friendsofsymfony\user-bundle/Resources/translations\validators.sl.yml</argument>
            <argument>D:\wamp64\www\SiteSymfony\SonataBackOffice\vendor\sonata-project\core-bundle/Resources/translations\SonataCoreBundle.sl.xliff</argument>
            <argument>D:\wamp64\www\SiteSymfony\SonataBackOffice\vendor\sonata-project\admin-bundle/Resources/translations\SonataAdminBundle.sl.xliff</argument>
            <argument>D:\wamp64\www\SiteSymfony\SonataBackOffice\vendor\javiereguiluz\easyadmin-bundle/Resources/translations\EasyAdminBundle.sl.xlf</argument>
            <argument>D:\wamp64\www\SiteSymfony\SonataBackOffice\vendor\javiereguiluz\easyadmin-bundle/Resources/translations\messages.sl.xlf</argument>
          </argument>
          <argument key="sq" type="collection">
            <argument>D:\wamp64\www\SiteSymfony\SonataBackOffice\vendor\symfony\symfony\src\Symfony\Component\Validator/Resources/translations\validators.sq.xlf</argument>
          </argument>
          <argument key="sr_Cyrl" type="collection">
            <argument>D:\wamp64\www\SiteSymfony\SonataBackOffice\vendor\symfony\symfony\src\Symfony\Component\Validator/Resources/translations\validators.sr_Cyrl.xlf</argument>
            <argument>D:\wamp64\www\SiteSymfony\SonataBackOffice\vendor\symfony\symfony\src\Symfony\Component\Form/Resources/translations\validators.sr_Cyrl.xlf</argument>
            <argument>D:\wamp64\www\SiteSymfony\SonataBackOffice\vendor\symfony\symfony\src\Symfony\Component\Security\Core/Resources/translations\security.sr_Cyrl.xlf</argument>
          </argument>
          <argument key="sr_Latn" type="collection">
            <argument>D:\wamp64\www\SiteSymfony\SonataBackOffice\vendor\symfony\symfony\src\Symfony\Component\Validator/Resources/translations\validators.sr_Latn.xlf</argument>
            <argument>D:\wamp64\www\SiteSymfony\SonataBackOffice\vendor\symfony\symfony\src\Symfony\Component\Form/Resources/translations\validators.sr_Latn.xlf</argument>
            <argument>D:\wamp64\www\SiteSymfony\SonataBackOffice\vendor\symfony\symfony\src\Symfony\Component\Security\Core/Resources/translations\security.sr_Latn.xlf</argument>
            <argument>D:\wamp64\www\SiteSymfony\SonataBackOffice\vendor\friendsofsymfony\user-bundle/Resources/translations\FOSUserBundle.sr_Latn.yml</argument>
            <argument>D:\wamp64\www\SiteSymfony\SonataBackOffice\vendor\friendsofsymfony\user-bundle/Resources/translations\validators.sr_Latn.yml</argument>
          </argument>
          <argument key="sv" type="collection">
            <argument>D:\wamp64\www\SiteSymfony\SonataBackOffice\vendor\symfony\symfony\src\Symfony\Component\Validator/Resources/translations\validators.sv.xlf</argument>
            <argument>D:\wamp64\www\SiteSymfony\SonataBackOffice\vendor\symfony\symfony\src\Symfony\Component\Form/Resources/translations\validators.sv.xlf</argument>
            <argument>D:\wamp64\www\SiteSymfony\SonataBackOffice\vendor\symfony\symfony\src\Symfony\Component\Security\Core/Resources/translations\security.sv.xlf</argument>
            <argument>D:\wamp64\www\SiteSymfony\SonataBackOffice\vendor\friendsofsymfony\user-bundle/Resources/translations\FOSUserBundle.sv.yml</argument>
            <argument>D:\wamp64\www\SiteSymfony\SonataBackOffice\vendor\friendsofsymfony\user-bundle/Resources/translations\validators.sv.yml</argument>
            <argument>D:\wamp64\www\SiteSymfony\SonataBackOffice\vendor\javiereguiluz\easyadmin-bundle/Resources/translations\EasyAdminBundle.sv.xlf</argument>
            <argument>D:\wamp64\www\SiteSymfony\SonataBackOffice\vendor\javiereguiluz\easyadmin-bundle/Resources/translations\messages.sv.xlf</argument>
          </argument>
          <argument key="th" type="collection">
            <argument>D:\wamp64\www\SiteSymfony\SonataBackOffice\vendor\symfony\symfony\src\Symfony\Component\Validator/Resources/translations\validators.th.xlf</argument>
            <argument>D:\wamp64\www\SiteSymfony\SonataBackOffice\vendor\symfony\symfony\src\Symfony\Component\Security\Core/Resources/translations\security.th.xlf</argument>
            <argument>D:\wamp64\www\SiteSymfony\SonataBackOffice\vendor\friendsofsymfony\user-bundle/Resources/translations\FOSUserBundle.th.yml</argument>
            <argument>D:\wamp64\www\SiteSymfony\SonataBackOffice\vendor\friendsofsymfony\user-bundle/Resources/translations\validators.th.yml</argument>
          </argument>
          <argument key="tr" type="collection">
            <argument>D:\wamp64\www\SiteSymfony\SonataBackOffice\vendor\symfony\symfony\src\Symfony\Component\Validator/Resources/translations\validators.tr.xlf</argument>
            <argument>D:\wamp64\www\SiteSymfony\SonataBackOffice\vendor\symfony\symfony\src\Symfony\Component\Security\Core/Resources/translations\security.tr.xlf</argument>
            <argument>D:\wamp64\www\SiteSymfony\SonataBackOffice\vendor\friendsofsymfony\user-bundle/Resources/translations\FOSUserBundle.tr.yml</argument>
            <argument>D:\wamp64\www\SiteSymfony\SonataBackOffice\vendor\friendsofsymfony\user-bundle/Resources/translations\validators.tr.yml</argument>
            <argument>D:\wamp64\www\SiteSymfony\SonataBackOffice\vendor\javiereguiluz\easyadmin-bundle/Resources/translations\EasyAdminBundle.tr.xlf</argument>
            <argument>D:\wamp64\www\SiteSymfony\SonataBackOffice\vendor\javiereguiluz\easyadmin-bundle/Resources/translations\messages.tr.xlf</argument>
          </argument>
          <argument key="uk" type="collection">
            <argument>D:\wamp64\www\SiteSymfony\SonataBackOffice\vendor\symfony\symfony\src\Symfony\Component\Validator/Resources/translations\validators.uk.xlf</argument>
            <argument>D:\wamp64\www\SiteSymfony\SonataBackOffice\vendor\symfony\symfony\src\Symfony\Component\Form/Resources/translations\validators.uk.xlf</argument>
            <argument>D:\wamp64\www\SiteSymfony\SonataBackOffice\vendor\friendsofsymfony\user-bundle/Resources/translations\FOSUserBundle.uk.yml</argument>
            <argument>D:\wamp64\www\SiteSymfony\SonataBackOffice\vendor\friendsofsymfony\user-bundle/Resources/translations\validators.uk.yml</argument>
            <argument>D:\wamp64\www\SiteSymfony\SonataBackOffice\vendor\sonata-project\core-bundle/Resources/translations\SonataCoreBundle.uk.xliff</argument>
            <argument>D:\wamp64\www\SiteSymfony\SonataBackOffice\vendor\sonata-project\admin-bundle/Resources/translations\SonataAdminBundle.uk.xliff</argument>
            <argument>D:\wamp64\www\SiteSymfony\SonataBackOffice\vendor\javiereguiluz\easyadmin-bundle/Resources/translations\EasyAdminBundle.uk.xlf</argument>
            <argument>D:\wamp64\www\SiteSymfony\SonataBackOffice\vendor\javiereguiluz\easyadmin-bundle/Resources/translations\messages.uk.xlf</argument>
          </argument>
          <argument key="vi" type="collection">
            <argument>D:\wamp64\www\SiteSymfony\SonataBackOffice\vendor\symfony\symfony\src\Symfony\Component\Validator/Resources/translations\validators.vi.xlf</argument>
            <argument>D:\wamp64\www\SiteSymfony\SonataBackOffice\vendor\symfony\symfony\src\Symfony\Component\Security\Core/Resources/translations\security.vi.xlf</argument>
            <argument>D:\wamp64\www\SiteSymfony\SonataBackOffice\vendor\friendsofsymfony\user-bundle/Resources/translations\FOSUserBundle.vi.yml</argument>
            <argument>D:\wamp64\www\SiteSymfony\SonataBackOffice\vendor\friendsofsymfony\user-bundle/Resources/translations\validators.vi.yml</argument>
          </argument>
          <argument key="zh_CN" type="collection">
            <argument>D:\wamp64\www\SiteSymfony\SonataBackOffice\vendor\symfony\symfony\src\Symfony\Component\Validator/Resources/translations\validators.zh_CN.xlf</argument>
            <argument>D:\wamp64\www\SiteSymfony\SonataBackOffice\vendor\symfony\symfony\src\Symfony\Component\Form/Resources/translations\validators.zh_CN.xlf</argument>
            <argument>D:\wamp64\www\SiteSymfony\SonataBackOffice\vendor\symfony\symfony\src\Symfony\Component\Security\Core/Resources/translations\security.zh_CN.xlf</argument>
            <argument>D:\wamp64\www\SiteSymfony\SonataBackOffice\vendor\friendsofsymfony\user-bundle/Resources/translations\FOSUserBundle.zh_CN.yml</argument>
            <argument>D:\wamp64\www\SiteSymfony\SonataBackOffice\vendor\friendsofsymfony\user-bundle/Resources/translations\validators.zh_CN.yml</argument>
            <argument>D:\wamp64\www\SiteSymfony\SonataBackOffice\vendor\sonata-project\core-bundle/Resources/translations\SonataCoreBundle.zh_CN.xliff</argument>
            <argument>D:\wamp64\www\SiteSymfony\SonataBackOffice\vendor\sonata-project\admin-bundle/Resources/translations\SonataAdminBundle.zh_CN.xliff</argument>
            <argument>D:\wamp64\www\SiteSymfony\SonataBackOffice\vendor\javiereguiluz\easyadmin-bundle/Resources/translations\EasyAdminBundle.zh_CN.xlf</argument>
            <argument>D:\wamp64\www\SiteSymfony\SonataBackOffice\vendor\javiereguiluz\easyadmin-bundle/Resources/translations\messages.zh_CN.xlf</argument>
          </argument>
          <argument key="zh_TW" type="collection">
            <argument>D:\wamp64\www\SiteSymfony\SonataBackOffice\vendor\symfony\symfony\src\Symfony\Component\Validator/Resources/translations\validators.zh_TW.xlf</argument>
          </argument>
          <argument key="pt_PT" type="collection">
            <argument>D:\wamp64\www\SiteSymfony\SonataBackOffice\vendor\symfony\symfony\src\Symfony\Component\Security\Core/Resources/translations\security.pt_PT.xlf</argument>
          </argument>
          <argument key="ua" type="collection">
            <argument>D:\wamp64\www\SiteSymfony\SonataBackOffice\vendor\symfony\symfony\src\Symfony\Component\Security\Core/Resources/translations\security.ua.xlf</argument>
          </argument>
          <argument key="eo" type="collection">
            <argument>D:\wamp64\www\SiteSymfony\SonataBackOffice\vendor\friendsofsymfony\user-bundle/Resources/translations\FOSUserBundle.eo.yml</argument>
            <argument>D:\wamp64\www\SiteSymfony\SonataBackOffice\vendor\friendsofsymfony\user-bundle/Resources/translations\validators.eo.yml</argument>
          </argument>
          <argument key="ky" type="collection">
            <argument>D:\wamp64\www\SiteSymfony\SonataBackOffice\vendor\friendsofsymfony\user-bundle/Resources/translations\FOSUserBundle.ky.yml</argument>
            <argument>D:\wamp64\www\SiteSymfony\SonataBackOffice\vendor\friendsofsymfony\user-bundle/Resources/translations\validators.ky.yml</argument>
          </argument>
          <argument key="nb" type="collection">
            <argument>D:\wamp64\www\SiteSymfony\SonataBackOffice\vendor\friendsofsymfony\user-bundle/Resources/translations\FOSUserBundle.nb.yml</argument>
            <argument>D:\wamp64\www\SiteSymfony\SonataBackOffice\vendor\friendsofsymfony\user-bundle/Resources/translations\validators.nb.yml</argument>
          </argument>
          <argument key="sv_SE" type="collection">
            <argument>D:\wamp64\www\SiteSymfony\SonataBackOffice\vendor\sonata-project\admin-bundle/Resources/translations\SonataAdminBundle.sv_SE.xliff</argument>
          </argument>
        </argument>
      </argument>
      <call method="setConfigCacheFactory">
        <argument type="service" id="config_cache_factory"/>
      </call>
      <call method="setFallbackLocales">
        <argument type="collection">
          <argument>fr</argument>
        </argument>
      </call>
    </service>
    <service id="translator.logging" class="Symfony\Component\Translation\LoggingTranslator" public="false">
      <tag name="monolog.logger" channel="translation"/>
      <argument type="service" id="translator.default"/>
      <argument type="service" id="monolog.logger.translation"/>
    </service>
    <service id="translation.loader.php" class="Symfony\Component\Translation\Loader\PhpFileLoader">
      <tag name="translation.loader" alias="php"/>
    </service>
    <service id="translation.loader.yml" class="Symfony\Component\Translation\Loader\YamlFileLoader">
      <tag name="translation.loader" alias="yml"/>
    </service>
    <service id="translation.loader.xliff" class="Symfony\Component\Translation\Loader\XliffFileLoader">
      <tag name="translation.loader" alias="xlf" legacy_alias="xliff" legacy-alias="xliff"/>
    </service>
    <service id="translation.loader.po" class="Symfony\Component\Translation\Loader\PoFileLoader">
      <tag name="translation.loader" alias="po"/>
    </service>
    <service id="translation.loader.mo" class="Symfony\Component\Translation\Loader\MoFileLoader">
      <tag name="translation.loader" alias="mo"/>
    </service>
    <service id="translation.loader.qt" class="Symfony\Component\Translation\Loader\QtFileLoader">
      <tag name="translation.loader" alias="ts"/>
    </service>
    <service id="translation.loader.csv" class="Symfony\Component\Translation\Loader\CsvFileLoader">
      <tag name="translation.loader" alias="csv"/>
    </service>
    <service id="translation.loader.res" class="Symfony\Component\Translation\Loader\IcuResFileLoader">
      <tag name="translation.loader" alias="res"/>
    </service>
    <service id="translation.loader.dat" class="Symfony\Component\Translation\Loader\IcuDatFileLoader">
      <tag name="translation.loader" alias="dat"/>
    </service>
    <service id="translation.loader.ini" class="Symfony\Component\Translation\Loader\IniFileLoader">
      <tag name="translation.loader" alias="ini"/>
    </service>
    <service id="translation.loader.json" class="Symfony\Component\Translation\Loader\JsonFileLoader">
      <tag name="translation.loader" alias="json"/>
    </service>
    <service id="translation.dumper.php" class="Symfony\Component\Translation\Dumper\PhpFileDumper">
      <tag name="translation.dumper" alias="php"/>
    </service>
    <service id="translation.dumper.xliff" class="Symfony\Component\Translation\Dumper\XliffFileDumper">
      <tag name="translation.dumper" alias="xlf"/>
    </service>
    <service id="translation.dumper.po" class="Symfony\Component\Translation\Dumper\PoFileDumper">
      <tag name="translation.dumper" alias="po"/>
    </service>
    <service id="translation.dumper.mo" class="Symfony\Component\Translation\Dumper\MoFileDumper">
      <tag name="translation.dumper" alias="mo"/>
    </service>
    <service id="translation.dumper.yml" class="Symfony\Component\Translation\Dumper\YamlFileDumper">
      <tag name="translation.dumper" alias="yml"/>
    </service>
    <service id="translation.dumper.qt" class="Symfony\Component\Translation\Dumper\QtFileDumper">
      <tag name="translation.dumper" alias="ts"/>
    </service>
    <service id="translation.dumper.csv" class="Symfony\Component\Translation\Dumper\CsvFileDumper">
      <tag name="translation.dumper" alias="csv"/>
    </service>
    <service id="translation.dumper.ini" class="Symfony\Component\Translation\Dumper\IniFileDumper">
      <tag name="translation.dumper" alias="ini"/>
    </service>
    <service id="translation.dumper.json" class="Symfony\Component\Translation\Dumper\JsonFileDumper">
      <tag name="translation.dumper" alias="json"/>
    </service>
    <service id="translation.dumper.res" class="Symfony\Component\Translation\Dumper\IcuResFileDumper">
      <tag name="translation.dumper" alias="res"/>
    </service>
    <service id="translation.extractor.php" class="Symfony\Bundle\FrameworkBundle\Translation\PhpExtractor">
      <tag name="translation.extractor" alias="php"/>
    </service>
    <service id="translation.loader" class="Symfony\Bundle\FrameworkBundle\Translation\TranslationLoader">
      <call method="addLoader">
        <argument>php</argument>
        <argument type="service" id="translation.loader.php"/>
      </call>
      <call method="addLoader">
        <argument>yml</argument>
        <argument type="service" id="translation.loader.yml"/>
      </call>
      <call method="addLoader">
        <argument>xlf</argument>
        <argument type="service" id="translation.loader.xliff"/>
      </call>
      <call method="addLoader">
        <argument>xliff</argument>
        <argument type="service" id="translation.loader.xliff"/>
      </call>
      <call method="addLoader">
        <argument>po</argument>
        <argument type="service" id="translation.loader.po"/>
      </call>
      <call method="addLoader">
        <argument>mo</argument>
        <argument type="service" id="translation.loader.mo"/>
      </call>
      <call method="addLoader">
        <argument>ts</argument>
        <argument type="service" id="translation.loader.qt"/>
      </call>
      <call method="addLoader">
        <argument>csv</argument>
        <argument type="service" id="translation.loader.csv"/>
      </call>
      <call method="addLoader">
        <argument>res</argument>
        <argument type="service" id="translation.loader.res"/>
      </call>
      <call method="addLoader">
        <argument>dat</argument>
        <argument type="service" id="translation.loader.dat"/>
      </call>
      <call method="addLoader">
        <argument>ini</argument>
        <argument type="service" id="translation.loader.ini"/>
      </call>
      <call method="addLoader">
        <argument>json</argument>
        <argument type="service" id="translation.loader.json"/>
      </call>
    </service>
    <service id="translation.extractor" class="Symfony\Component\Translation\Extractor\ChainExtractor">
      <call method="addExtractor">
        <argument>php</argument>
        <argument type="service" id="translation.extractor.php"/>
      </call>
      <call method="addExtractor">
        <argument>twig</argument>
        <argument type="service" id="twig.translation.extractor"/>
      </call>
    </service>
    <service id="translation.writer" class="Symfony\Component\Translation\Writer\TranslationWriter">
      <call method="addDumper">
        <argument>php</argument>
        <argument type="service" id="translation.dumper.php"/>
      </call>
      <call method="addDumper">
        <argument>xlf</argument>
        <argument type="service" id="translation.dumper.xliff"/>
      </call>
      <call method="addDumper">
        <argument>po</argument>
        <argument type="service" id="translation.dumper.po"/>
      </call>
      <call method="addDumper">
        <argument>mo</argument>
        <argument type="service" id="translation.dumper.mo"/>
      </call>
      <call method="addDumper">
        <argument>yml</argument>
        <argument type="service" id="translation.dumper.yml"/>
      </call>
      <call method="addDumper">
        <argument>ts</argument>
        <argument type="service" id="translation.dumper.qt"/>
      </call>
      <call method="addDumper">
        <argument>csv</argument>
        <argument type="service" id="translation.dumper.csv"/>
      </call>
      <call method="addDumper">
        <argument>ini</argument>
        <argument type="service" id="translation.dumper.ini"/>
      </call>
      <call method="addDumper">
        <argument>json</argument>
        <argument type="service" id="translation.dumper.json"/>
      </call>
      <call method="addDumper">
        <argument>res</argument>
        <argument type="service" id="translation.dumper.res"/>
      </call>
    </service>
    <service id="translation.warmer" class="Symfony\Bundle\FrameworkBundle\CacheWarmer\TranslationsCacheWarmer" public="false">
      <tag name="kernel.cache_warmer"/>
      <argument type="service" id="translator.default"/>
    </service>
    <service id="translator_listener" class="Symfony\Component\HttpKernel\EventListener\TranslatorListener">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="translator.data_collector"/>
      <argument type="service" id="request_stack"/>
    </service>
    <service id="profiler" class="Symfony\Component\HttpKernel\Profiler\Profiler">
      <tag name="monolog.logger" channel="profiler"/>
      <argument type="service" id="profiler.storage"/>
      <argument type="service" id="monolog.logger.profiler" on-invalid="null"/>
      <call method="add">
        <argument type="service" id="data_collector.request"/>
      </call>
      <call method="add">
        <argument type="service" id="data_collector.time"/>
      </call>
      <call method="add">
        <argument type="service" id="data_collector.memory"/>
      </call>
      <call method="add">
        <argument type="service" id="data_collector.ajax"/>
      </call>
      <call method="add">
        <argument type="service" id="data_collector.form"/>
      </call>
      <call method="add">
        <argument type="service" id="data_collector.exception"/>
      </call>
      <call method="add">
        <argument type="service" id="data_collector.logger"/>
      </call>
      <call method="add">
        <argument type="service" id="data_collector.events"/>
      </call>
      <call method="add">
        <argument type="service" id="data_collector.router"/>
      </call>
      <call method="add">
        <argument type="service" id="data_collector.cache"/>
      </call>
      <call method="add">
        <argument type="service" id="data_collector.translation"/>
      </call>
      <call method="add">
        <argument type="service" id="data_collector.security"/>
      </call>
      <call method="add">
        <argument type="service" id="data_collector.twig"/>
      </call>
      <call method="add">
        <argument type="service" id="data_collector.doctrine"/>
      </call>
      <call method="add">
        <argument type="service" id="swiftmailer.data_collector"/>
      </call>
      <call method="add">
        <argument type="service" id="data_collector.dump"/>
      </call>
      <call method="add">
        <argument type="service" id="sonata.block.data_collector"/>
      </call>
      <call method="add">
        <argument type="service" id="easyadmin.data_collector"/>
      </call>
      <call method="add">
        <argument type="service" id="data_collector.config"/>
      </call>
    </service>
    <service id="profiler.storage" class="Symfony\Component\HttpKernel\Profiler\FileProfilerStorage" public="false">
      <argument>file:D:\wamp64\www\SiteSymfony\SonataBackOffice\var\cache\dev/profiler</argument>
    </service>
    <service id="profiler_listener" class="Symfony\Component\HttpKernel\EventListener\ProfilerListener">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="profiler"/>
      <argument type="service" id="request_stack"/>
      <argument>null</argument>
      <argument>false</argument>
      <argument>false</argument>
    </service>
    <service id="data_collector.config" class="Symfony\Component\HttpKernel\DataCollector\ConfigDataCollector" public="false">
      <tag name="data_collector" template="@WebProfiler/Collector/config.html.twig" id="config" priority="-255"/>
      <call method="setKernel">
        <argument type="service" id="kernel" on-invalid="ignore"/>
      </call>
    </service>
    <service id="data_collector.request" class="Symfony\Bundle\FrameworkBundle\DataCollector\RequestDataCollector">
      <tag name="kernel.event_subscriber"/>
      <tag name="data_collector" template="@WebProfiler/Collector/request.html.twig" id="request" priority="335"/>
    </service>
    <service id="data_collector.ajax" class="Symfony\Component\HttpKernel\DataCollector\AjaxDataCollector" public="false">
      <tag name="data_collector" template="@WebProfiler/Collector/ajax.html.twig" id="ajax" priority="315"/>
    </service>
    <service id="data_collector.exception" class="Symfony\Component\HttpKernel\DataCollector\ExceptionDataCollector" public="false">
      <tag name="data_collector" template="@WebProfiler/Collector/exception.html.twig" id="exception" priority="305"/>
    </service>
    <service id="data_collector.events" class="Symfony\Component\HttpKernel\DataCollector\EventDataCollector" public="false">
      <tag name="data_collector" template="@WebProfiler/Collector/events.html.twig" id="events" priority="290"/>
      <argument type="service" id="debug.event_dispatcher" on-invalid="ignore"/>
    </service>
    <service id="data_collector.logger" class="Symfony\Component\HttpKernel\DataCollector\LoggerDataCollector" public="false">
      <tag name="data_collector" template="@WebProfiler/Collector/logger.html.twig" id="logger" priority="300"/>
      <tag name="monolog.logger" channel="profiler"/>
      <argument type="service" id="monolog.logger.profiler" on-invalid="ignore"/>
      <argument>D:\wamp64\www\SiteSymfony\SonataBackOffice\var\cache\dev/appDevDebugProjectContainer</argument>
    </service>
    <service id="data_collector.time" class="Symfony\Component\HttpKernel\DataCollector\TimeDataCollector" public="false">
      <tag name="data_collector" template="@WebProfiler/Collector/time.html.twig" id="time" priority="330"/>
      <argument type="service" id="kernel" on-invalid="ignore"/>
      <argument type="service" id="debug.stopwatch" on-invalid="ignore"/>
    </service>
    <service id="data_collector.memory" class="Symfony\Component\HttpKernel\DataCollector\MemoryDataCollector" public="false">
      <tag name="data_collector" template="@WebProfiler/Collector/memory.html.twig" id="memory" priority="325"/>
    </service>
    <service id="data_collector.router" class="Symfony\Bundle\FrameworkBundle\DataCollector\RouterDataCollector">
      <tag name="kernel.event_listener" event="kernel.controller" method="onKernelController"/>
      <tag name="data_collector" template="@WebProfiler/Collector/router.html.twig" id="router" priority="285"/>
    </service>
    <service id="data_collector.cache" class="Symfony\Component\Cache\DataCollector\CacheDataCollector" public="false">
      <tag name="data_collector" template="@WebProfiler/Collector/cache.html.twig" id="cache" priority="275"/>
      <call method="addInstance">
        <argument>cache.app</argument>
        <argument type="service" id="cache.app"/>
      </call>
      <call method="addInstance">
        <argument>cache.system</argument>
        <argument type="service" id="cache.system"/>
      </call>
      <call method="addInstance">
        <argument>cache.validator</argument>
        <argument type="service" id="cache.validator"/>
      </call>
      <call method="addInstance">
        <argument>cache.serializer</argument>
        <argument type="service" id="cache.serializer"/>
      </call>
      <call method="addInstance">
        <argument>cache.annotations</argument>
        <argument type="service" id="cache.annotations"/>
      </call>
    </service>
    <service id="1_84ce4e4d6639fb59ca04e8ab25eae9e8de90101e51680e46479bc7dc3e8ffe58" class="Symfony\Component\Form\ResolvedFormTypeFactory" public="false"/>
    <service id="form.type_extension.form.data_collector" class="Symfony\Component\Form\Extension\DataCollector\Type\DataCollectorTypeExtension">
      <tag name="form.type_extension" extended_type="Symfony\Component\Form\Extension\Core\Type\FormType" extended-type="Symfony\Component\Form\Extension\Core\Type\FormType"/>
      <argument type="service" id="data_collector.form"/>
    </service>
    <service id="data_collector.form.extractor" class="Symfony\Component\Form\Extension\DataCollector\FormDataExtractor"/>
    <service id="data_collector.form" class="Symfony\Component\Form\Extension\DataCollector\FormDataCollector">
      <tag name="data_collector" template="@WebProfiler/Collector/form.html.twig" id="form" priority="310"/>
      <argument type="service" id="data_collector.form.extractor"/>
    </service>
    <service id="translator.data_collector" class="Symfony\Component\Translation\DataCollectorTranslator" public="false">
      <argument type="service" id="translator.logging"/>
    </service>
    <service id="data_collector.translation" class="Symfony\Component\Translation\DataCollector\TranslationDataCollector">
      <tag name="data_collector" template="@WebProfiler/Collector/translation.html.twig" id="translation" priority="275"/>
      <argument type="service" id="translator.data_collector"/>
    </service>
    <service id="c66c8daa4fa4dead6a562ed2c4bdb322" class="Symfony\Component\Cache\Adapter\AbstractAdapter" public="false">
      <argument>redis://localhost</argument>
      <factory class="Symfony\Component\Cache\Adapter\AbstractAdapter" method="createConnection"/>
    </service>
    <service id="8464c6758298cf75d30c4f689fb7886d" class="Symfony\Component\Cache\Adapter\AbstractAdapter" public="false">
      <argument>memcached://localhost</argument>
      <factory class="Symfony\Component\Cache\Adapter\AbstractAdapter" method="createConnection"/>
    </service>
    <service id="cache.property_access" class="Symfony\Component\Cache\Adapter\ArrayAdapter" public="false">
      <argument>0</argument>
      <argument>false</argument>
    </service>
    <service id="debug.debug_handlers_listener" class="Symfony\Component\HttpKernel\EventListener\DebugHandlersListener">
      <tag name="kernel.event_subscriber"/>
      <tag name="monolog.logger" channel="php"/>
      <argument>null</argument>
      <argument type="service" id="monolog.logger.php" on-invalid="null"/>
      <argument>-1</argument>
      <argument>-1</argument>
      <argument>true</argument>
      <argument type="service" id="debug.file_link_formatter"/>
      <argument>true</argument>
    </service>
    <service id="debug.stopwatch" class="Symfony\Component\Stopwatch\Stopwatch"/>
    <service id="debug.file_link_formatter" class="Symfony\Component\HttpKernel\Debug\FileLinkFormatter" public="false">
      <argument>null</argument>
      <argument type="service" id="request_stack" on-invalid="ignore"/>
      <argument>D:\wamp64\www\SiteSymfony\SonataBackOffice</argument>
      <argument>/_profiler/open?file=%%f&amp;line=%%l#line%%l</argument>
    </service>
    <service id="debug.event_dispatcher" class="Symfony\Component\HttpKernel\Debug\TraceableEventDispatcher">
      <tag name="monolog.logger" channel="event"/>
      <argument type="service" id="debug.event_dispatcher.inner"/>
      <argument type="service" id="debug.stopwatch"/>
      <argument type="service" id="monolog.logger.event" on-invalid="null"/>
      <call method="addListener">
        <argument>kernel.controller</argument>
        <argument type="collection">
          <argument type="service" id="data_collector.router"/>
          <argument>onKernelController</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.response</argument>
        <argument type="collection">
          <argument type="service" id="sonata.block.cache.handler.default"/>
          <argument>onKernelResponse</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument type="service" id="knp_menu.listener.voters"/>
          <argument>onKernelRequest</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.controller</argument>
        <argument type="collection">
          <argument type="service" id="easyadmin.listener.controller"/>
          <argument>onKernelController</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>easy_admin.post_initialize</argument>
        <argument type="collection">
          <argument type="service" id="easyadmin.listener.request_post_initialize"/>
          <argument>initializeRequest</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.response</argument>
        <argument type="collection">
          <argument type="service" id="response_listener"/>
          <argument>onKernelResponse</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.response</argument>
        <argument type="collection">
          <argument type="service" id="streamed_response_listener"/>
          <argument>onKernelResponse</argument>
        </argument>
        <argument>-1024</argument>
      </call>
      <call method="addListener">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument type="service" id="locale_listener"/>
          <argument>onKernelRequest</argument>
        </argument>
        <argument>16</argument>
      </call>
      <call method="addListener">
        <argument>kernel.finish_request</argument>
        <argument type="collection">
          <argument type="service" id="locale_listener"/>
          <argument>onKernelFinishRequest</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument type="service" id="validate_request_listener"/>
          <argument>onKernelRequest</argument>
        </argument>
        <argument>256</argument>
      </call>
      <call method="addListener">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument type="service" id="resolve_controller_name_subscriber"/>
          <argument>onKernelRequest</argument>
        </argument>
        <argument>24</argument>
      </call>
      <call method="addListener">
        <argument>console.error</argument>
        <argument type="collection">
          <argument type="service" id="console.error_listener"/>
          <argument>onConsoleError</argument>
        </argument>
        <argument>-128</argument>
      </call>
      <call method="addListener">
        <argument>console.terminate</argument>
        <argument type="collection">
          <argument type="service" id="console.error_listener"/>
          <argument>onConsoleTerminate</argument>
        </argument>
        <argument>-128</argument>
      </call>
      <call method="addListener">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument type="service" id="session_listener"/>
          <argument>onKernelRequest</argument>
        </argument>
        <argument>128</argument>
      </call>
      <call method="addListener">
        <argument>kernel.response</argument>
        <argument type="collection">
          <argument type="service" id="session.save_listener"/>
          <argument>onKernelResponse</argument>
        </argument>
        <argument>-1000</argument>
      </call>
      <call method="addListener">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument type="service" id="fragment.listener"/>
          <argument>onKernelRequest</argument>
        </argument>
        <argument>48</argument>
      </call>
      <call method="addListener">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument type="service" id="translator_listener"/>
          <argument>onKernelRequest</argument>
        </argument>
        <argument>10</argument>
      </call>
      <call method="addListener">
        <argument>kernel.finish_request</argument>
        <argument type="collection">
          <argument type="service" id="translator_listener"/>
          <argument>onKernelFinishRequest</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.response</argument>
        <argument type="collection">
          <argument type="service" id="profiler_listener"/>
          <argument>onKernelResponse</argument>
        </argument>
        <argument>-100</argument>
      </call>
      <call method="addListener">
        <argument>kernel.exception</argument>
        <argument type="collection">
          <argument type="service" id="profiler_listener"/>
          <argument>onKernelException</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.terminate</argument>
        <argument type="collection">
          <argument type="service" id="profiler_listener"/>
          <argument>onKernelTerminate</argument>
        </argument>
        <argument>-1024</argument>
      </call>
      <call method="addListener">
        <argument>kernel.controller</argument>
        <argument type="collection">
          <argument type="service" id="data_collector.request"/>
          <argument>onKernelController</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.response</argument>
        <argument type="collection">
          <argument type="service" id="data_collector.request"/>
          <argument>onKernelResponse</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument type="service" id="debug.debug_handlers_listener"/>
          <argument>configure</argument>
        </argument>
        <argument>2048</argument>
      </call>
      <call method="addListener">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument type="service" id="router_listener"/>
          <argument>onKernelRequest</argument>
        </argument>
        <argument>32</argument>
      </call>
      <call method="addListener">
        <argument>kernel.finish_request</argument>
        <argument type="collection">
          <argument type="service" id="router_listener"/>
          <argument>onKernelFinishRequest</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument type="service" id="security.firewall"/>
          <argument>onKernelRequest</argument>
        </argument>
        <argument>8</argument>
      </call>
      <call method="addListener">
        <argument>kernel.finish_request</argument>
        <argument type="collection">
          <argument type="service" id="security.firewall"/>
          <argument>onKernelFinishRequest</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.response</argument>
        <argument type="collection">
          <argument type="service" id="security.rememberme.response_listener"/>
          <argument>onKernelResponse</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.exception</argument>
        <argument type="collection">
          <argument type="service" id="twig.exception_listener"/>
          <argument>onKernelException</argument>
        </argument>
        <argument>-128</argument>
      </call>
      <call method="addListener">
        <argument>console.command</argument>
        <argument type="collection">
          <argument type="service" id="monolog.handler.console"/>
          <argument>onCommand</argument>
        </argument>
        <argument>255</argument>
      </call>
      <call method="addListener">
        <argument>console.terminate</argument>
        <argument type="collection">
          <argument type="service" id="monolog.handler.console"/>
          <argument>onTerminate</argument>
        </argument>
        <argument>-255</argument>
      </call>
      <call method="addListener">
        <argument>kernel.exception</argument>
        <argument type="collection">
          <argument type="service" id="swiftmailer.email_sender.listener"/>
          <argument>onException</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.terminate</argument>
        <argument type="collection">
          <argument type="service" id="swiftmailer.email_sender.listener"/>
          <argument>onTerminate</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>console.exception</argument>
        <argument type="collection">
          <argument type="service" id="swiftmailer.email_sender.listener"/>
          <argument>onException</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>console.terminate</argument>
        <argument type="collection">
          <argument type="service" id="swiftmailer.email_sender.listener"/>
          <argument>onTerminate</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.controller</argument>
        <argument type="collection">
          <argument type="service" id="sensio_framework_extra.controller.listener"/>
          <argument>onKernelController</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.controller</argument>
        <argument type="collection">
          <argument type="service" id="sensio_framework_extra.converter.listener"/>
          <argument>onKernelController</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.controller</argument>
        <argument type="collection">
          <argument type="service" id="sensio_framework_extra.view.listener"/>
          <argument>onKernelController</argument>
        </argument>
        <argument>-128</argument>
      </call>
      <call method="addListener">
        <argument>kernel.view</argument>
        <argument type="collection">
          <argument type="service" id="sensio_framework_extra.view.listener"/>
          <argument>onKernelView</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.controller</argument>
        <argument type="collection">
          <argument type="service" id="sensio_framework_extra.cache.listener"/>
          <argument>onKernelController</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.response</argument>
        <argument type="collection">
          <argument type="service" id="sensio_framework_extra.cache.listener"/>
          <argument>onKernelResponse</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.controller</argument>
        <argument type="collection">
          <argument type="service" id="sensio_framework_extra.security.listener"/>
          <argument>onKernelController</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>fos_user.security.implicit_login</argument>
        <argument type="collection">
          <argument type="service" id="fos_user.security.interactive_login_listener"/>
          <argument>onImplicitLogin</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>security.interactive_login</argument>
        <argument type="collection">
          <argument type="service" id="fos_user.security.interactive_login_listener"/>
          <argument>onSecurityInteractiveLogin</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>fos_user.registration.completed</argument>
        <argument type="collection">
          <argument type="service" id="fos_user.listener.authentication"/>
          <argument>authenticate</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>fos_user.registration.confirmed</argument>
        <argument type="collection">
          <argument type="service" id="fos_user.listener.authentication"/>
          <argument>authenticate</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>fos_user.resetting.reset.completed</argument>
        <argument type="collection">
          <argument type="service" id="fos_user.listener.authentication"/>
          <argument>authenticate</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>fos_user.change_password.edit.completed</argument>
        <argument type="collection">
          <argument type="service" id="fos_user.listener.flash"/>
          <argument>addSuccessFlash</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>fos_user.group.create.completed</argument>
        <argument type="collection">
          <argument type="service" id="fos_user.listener.flash"/>
          <argument>addSuccessFlash</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>fos_user.group.delete.completed</argument>
        <argument type="collection">
          <argument type="service" id="fos_user.listener.flash"/>
          <argument>addSuccessFlash</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>fos_user.group.edit.completed</argument>
        <argument type="collection">
          <argument type="service" id="fos_user.listener.flash"/>
          <argument>addSuccessFlash</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>fos_user.profile.edit.completed</argument>
        <argument type="collection">
          <argument type="service" id="fos_user.listener.flash"/>
          <argument>addSuccessFlash</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>fos_user.registration.completed</argument>
        <argument type="collection">
          <argument type="service" id="fos_user.listener.flash"/>
          <argument>addSuccessFlash</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>fos_user.resetting.reset.completed</argument>
        <argument type="collection">
          <argument type="service" id="fos_user.listener.flash"/>
          <argument>addSuccessFlash</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>fos_user.registration.success</argument>
        <argument type="collection">
          <argument type="service" id="fos_user.listener.email_confirmation"/>
          <argument>onRegistrationSuccess</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>fos_user.resetting.reset.initialize</argument>
        <argument type="collection">
          <argument type="service" id="fos_user.listener.resetting"/>
          <argument>onResettingResetInitialize</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>fos_user.resetting.reset.success</argument>
        <argument type="collection">
          <argument type="service" id="fos_user.listener.resetting"/>
          <argument>onResettingResetSuccess</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>fos_user.resetting.reset.request</argument>
        <argument type="collection">
          <argument type="service" id="fos_user.listener.resetting"/>
          <argument>onResettingResetRequest</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>console.command</argument>
        <argument type="collection">
          <argument type="service" id="debug.dump_listener"/>
          <argument>configure</argument>
        </argument>
        <argument>1024</argument>
      </call>
      <call method="addListener">
        <argument>kernel.response</argument>
        <argument type="collection">
          <argument type="service" id="web_profiler.debug_toolbar"/>
          <argument>onKernelResponse</argument>
        </argument>
        <argument>-128</argument>
      </call>
    </service>
    <service id="debug.controller_resolver" class="Symfony\Component\HttpKernel\Controller\TraceableControllerResolver">
      <tag name="monolog.logger" channel="request"/>
      <argument type="service" id="debug.controller_resolver.inner"/>
      <argument type="service" id="debug.stopwatch"/>
      <argument type="service" id="debug.argument_resolver"/>
    </service>
    <service id="debug.argument_resolver" class="Symfony\Component\HttpKernel\Controller\TraceableArgumentResolver">
      <argument type="service" id="debug.argument_resolver.inner"/>
      <argument type="service" id="debug.stopwatch"/>
    </service>
    <service id="debug.log_processor" class="Symfony\Bridge\Monolog\Processor\DebugProcessor" public="false"/>
    <service id="routing.resolver" class="Symfony\Component\Config\Loader\LoaderResolver" public="false">
      <call method="addLoader">
        <argument type="service" id="routing.loader.xml"/>
      </call>
      <call method="addLoader">
        <argument type="service" id="routing.loader.yml"/>
      </call>
      <call method="addLoader">
        <argument type="service" id="routing.loader.php"/>
      </call>
      <call method="addLoader">
        <argument type="service" id="routing.loader.glob"/>
      </call>
      <call method="addLoader">
        <argument type="service" id="routing.loader.directory"/>
      </call>
      <call method="addLoader">
        <argument type="service" id="routing.loader.service"/>
      </call>
      <call method="addLoader">
        <argument type="service" id="sensio_framework_extra.routing.loader.annot_dir"/>
      </call>
      <call method="addLoader">
        <argument type="service" id="sensio_framework_extra.routing.loader.annot_file"/>
      </call>
      <call method="addLoader">
        <argument type="service" id="sensio_framework_extra.routing.loader.annot_class"/>
      </call>
      <call method="addLoader">
        <argument type="service" id="sonata.admin.route_loader"/>
      </call>
    </service>
    <service id="routing.loader.xml" class="Symfony\Component\Routing\Loader\XmlFileLoader" public="false">
      <tag name="routing.loader"/>
      <argument type="service" id="file_locator"/>
    </service>
    <service id="routing.loader.yml" class="Symfony\Component\Routing\Loader\YamlFileLoader" public="false">
      <tag name="routing.loader"/>
      <argument type="service" id="file_locator"/>
    </service>
    <service id="routing.loader.php" class="Symfony\Component\Routing\Loader\PhpFileLoader" public="false">
      <tag name="routing.loader"/>
      <argument type="service" id="file_locator"/>
    </service>
    <service id="routing.loader.glob" class="Symfony\Component\Config\Loader\GlobFileLoader" public="false">
      <tag name="routing.loader"/>
      <argument type="service" id="file_locator"/>
    </service>
    <service id="routing.loader.directory" class="Symfony\Component\Routing\Loader\DirectoryLoader" public="false">
      <tag name="routing.loader"/>
      <argument type="service" id="file_locator"/>
    </service>
    <service id="routing.loader.service" class="Symfony\Component\Routing\Loader\DependencyInjection\ServiceRouterLoader" public="false">
      <tag name="routing.loader"/>
      <argument type="service" id="service_container"/>
    </service>
    <service id="routing.loader" class="Symfony\Bundle\FrameworkBundle\Routing\DelegatingLoader">
      <argument type="service" id="controller_name_converter"/>
      <argument type="service" id="routing.resolver"/>
    </service>
    <service id="router.default" class="Symfony\Bundle\FrameworkBundle\Routing\Router" public="false">
      <tag name="monolog.logger" channel="router"/>
      <argument type="service" id="service_container"/>
      <argument>D:\wamp64\www\SiteSymfony\SonataBackOffice/app/config/routing_dev.yml</argument>
      <argument type="collection">
        <argument key="cache_dir">D:\wamp64\www\SiteSymfony\SonataBackOffice\var\cache\dev</argument>
        <argument key="debug">true</argument>
        <argument key="generator_class">Symfony\Component\Routing\Generator\UrlGenerator</argument>
        <argument key="generator_base_class">Symfony\Component\Routing\Generator\UrlGenerator</argument>
        <argument key="generator_dumper_class">Symfony\Component\Routing\Generator\Dumper\PhpGeneratorDumper</argument>
        <argument key="generator_cache_class">appDevDebugProjectContainerUrlGenerator</argument>
        <argument key="matcher_class">Symfony\Bundle\FrameworkBundle\Routing\RedirectableUrlMatcher</argument>
        <argument key="matcher_base_class">Symfony\Bundle\FrameworkBundle\Routing\RedirectableUrlMatcher</argument>
        <argument key="matcher_dumper_class">Symfony\Component\Routing\Matcher\Dumper\PhpMatcherDumper</argument>
        <argument key="matcher_cache_class">appDevDebugProjectContainerUrlMatcher</argument>
        <argument key="strict_requirements">true</argument>
      </argument>
      <argument type="service" id="router.request_context" on-invalid="ignore"/>
      <argument type="service" id="monolog.logger.router" on-invalid="ignore"/>
      <call method="setConfigCacheFactory">
        <argument type="service" id="config_cache_factory"/>
      </call>
    </service>
    <service id="router.request_context" class="Symfony\Component\Routing\RequestContext" public="false">
      <argument></argument>
      <argument>GET</argument>
      <argument>localhost</argument>
      <argument>http</argument>
      <argument>80</argument>
      <argument>443</argument>
    </service>
    <service id="router.cache_warmer" class="Symfony\Bundle\FrameworkBundle\CacheWarmer\RouterCacheWarmer" public="false">
      <tag name="kernel.cache_warmer"/>
      <argument type="service" id="router.default"/>
    </service>
    <service id="router_listener" class="Symfony\Component\HttpKernel\EventListener\RouterListener">
      <tag name="kernel.event_subscriber"/>
      <tag name="monolog.logger" channel="request"/>
      <argument type="service" id="router.default"/>
      <argument type="service" id="request_stack"/>
      <argument type="service" id="router.request_context" on-invalid="ignore"/>
      <argument type="service" id="monolog.logger.request" on-invalid="ignore"/>
    </service>
    <service id="3_ebcac2cc8f5fffc57987ed0be5d3dc6b23ebbe74bb15789f36bc318d10665075" class="Symfony\Component\Cache\Adapter\PhpArrayAdapter" public="false">
      <argument>D:\wamp64\www\SiteSymfony\SonataBackOffice\var\cache\dev/annotations.php</argument>
      <argument type="service" id="cache.annotations"/>
      <factory class="Symfony\Component\Cache\Adapter\PhpArrayAdapter" method="create"/>
    </service>
    <service id="2_ebcac2cc8f5fffc57987ed0be5d3dc6b23ebbe74bb15789f36bc318d10665075" class="Doctrine\Common\Cache\ArrayCache" public="false"/>
    <service id="1_ebcac2cc8f5fffc57987ed0be5d3dc6b23ebbe74bb15789f36bc318d10665075" class="Doctrine\Common\Annotations\AnnotationRegistry" public="false">
      <call method="registerLoader">
        <argument>class_exists</argument>
      </call>
    </service>
    <service id="annotations.reader" class="Doctrine\Common\Annotations\AnnotationReader" public="false">
      <call method="addGlobalIgnoredName">
        <argument>required</argument>
        <argument type="service" id="1_ebcac2cc8f5fffc57987ed0be5d3dc6b23ebbe74bb15789f36bc318d10665075"/>
      </call>
    </service>
    <service id="annotations.filesystem_cache" class="Doctrine\Common\Cache\FilesystemCache" public="false">
      <argument></argument>
    </service>
    <service id="annotations.cache_warmer" class="Symfony\Bundle\FrameworkBundle\CacheWarmer\AnnotationsCacheWarmer" public="false">
      <tag name="kernel.cache_warmer"/>
      <argument type="service" id="annotations.reader"/>
      <argument>D:\wamp64\www\SiteSymfony\SonataBackOffice\var\cache\dev/annotations.php</argument>
      <argument type="service" id="cache.annotations"/>
    </service>
    <service id="annotations.cache" class="Symfony\Component\Cache\DoctrineProvider" public="false">
      <argument type="service" id="3_ebcac2cc8f5fffc57987ed0be5d3dc6b23ebbe74bb15789f36bc318d10665075"/>
    </service>
    <service id="security.authorization_checker" class="Symfony\Component\Security\Core\Authorization\AuthorizationChecker">
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="security.authentication.manager"/>
      <argument type="service" id="debug.security.access.decision_manager"/>
      <argument>false</argument>
    </service>
    <service id="security.token_storage" class="Symfony\Component\Security\Core\Authentication\Token\Storage\TokenStorage"/>
    <service id="security.user_value_resolver" class="Symfony\Bundle\SecurityBundle\SecurityUserValueResolver" public="false">
      <tag name="controller.argument_value_resolver" priority="40"/>
      <argument type="service" id="security.token_storage"/>
    </service>
    <service id="security.authentication.manager" class="Symfony\Component\Security\Core\Authentication\AuthenticationProviderManager" public="false">
      <argument type="iterator">
        <argument type="service" id="security.authentication.provider.dao.admin"/>
        <argument type="service" id="security.authentication.provider.anonymous.admin"/>
        <argument type="service" id="security.authentication.provider.dao.main"/>
        <argument type="service" id="security.authentication.provider.anonymous.main"/>
      </argument>
      <argument>true</argument>
      <call method="setEventDispatcher">
        <argument type="service" id="debug.event_dispatcher"/>
      </call>
    </service>
    <service id="security.authentication.trust_resolver" class="Symfony\Component\Security\Core\Authentication\AuthenticationTrustResolver" public="false">
      <argument>Symfony\Component\Security\Core\Authentication\Token\AnonymousToken</argument>
      <argument>Symfony\Component\Security\Core\Authentication\Token\RememberMeToken</argument>
    </service>
    <service id="security.authentication.session_strategy" class="Symfony\Component\Security\Http\Session\SessionAuthenticationStrategy" public="false">
      <argument>migrate</argument>
    </service>
    <service id="security.encoder_factory.generic" class="Symfony\Component\Security\Core\Encoder\EncoderFactory" public="false">
      <argument type="collection">
        <argument key="AppBundle\Entity\User" type="collection">
          <argument key="class">Symfony\Component\Security\Core\Encoder\BCryptPasswordEncoder</argument>
          <argument key="arguments" type="collection">
            <argument>13</argument>
          </argument>
        </argument>
      </argument>
    </service>
    <service id="security.user_password_encoder.generic" class="Symfony\Component\Security\Core\Encoder\UserPasswordEncoder" public="false">
      <argument type="service" id="security.encoder_factory.generic"/>
    </service>
    <service id="security.user_checker" class="Symfony\Component\Security\Core\User\UserChecker" public="false"/>
    <service id="security.expression_language" class="Symfony\Component\Security\Core\Authorization\ExpressionLanguage" public="false"/>
    <service id="security.authentication_utils" class="Symfony\Component\Security\Http\Authentication\AuthenticationUtils">
      <argument type="service" id="request_stack"/>
    </service>
    <service id="security.role_hierarchy" class="Symfony\Component\Security\Core\Role\RoleHierarchy" public="false">
      <argument type="collection">
        <argument key="ROLE_CLIENT" type="collection">
          <argument>ROLE_USER</argument>
        </argument>
        <argument key="ROLE_USER" type="collection">
          <argument>ROLE_USER</argument>
        </argument>
        <argument key="ROLE_ADMIN" type="collection">
          <argument>ROLE_USER</argument>
          <argument>ROLE_SONATA_ADMIN</argument>
        </argument>
        <argument key="ROLE_SUPER_ADMIN" type="collection">
          <argument>ROLE_ADMIN</argument>
          <argument>ROLE_ALLOWED_TO_SWITCH</argument>
        </argument>
      </argument>
    </service>
    <service id="security.access.authenticated_voter" class="Symfony\Component\Security\Core\Authorization\Voter\AuthenticatedVoter" public="false">
      <tag name="security.voter" priority="250"/>
      <argument type="service" id="security.authentication.trust_resolver"/>
    </service>
    <service id="security.access.role_hierarchy_voter" class="Symfony\Component\Security\Core\Authorization\Voter\RoleHierarchyVoter" public="false">
      <tag name="security.voter" priority="245"/>
      <argument type="service" id="security.role_hierarchy"/>
    </service>
    <service id="security.access.expression_voter" class="Symfony\Component\Security\Core\Authorization\Voter\ExpressionVoter" public="false">
      <tag name="security.voter" priority="245"/>
      <argument type="service" id="security.expression_language"/>
      <argument type="service" id="security.authentication.trust_resolver"/>
      <argument type="service" id="security.role_hierarchy" on-invalid="null"/>
    </service>
    <service id="security.firewall" class="Symfony\Bundle\SecurityBundle\EventListener\FirewallListener">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="security.firewall.map"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="security.logout_url_generator"/>
    </service>
    <service id="security.firewall.map" class="Symfony\Bundle\SecurityBundle\Security\FirewallMap" public="false">
      <argument type="service" id="service_locator.560077d9081c1c6dfe57dabbe75297df"/>
      <argument type="iterator">
        <argument key="security.firewall.map.context.admin" type="service" id="security.request_matcher.6192eb66f667b945c5faa9068fbc96bd7724861bdcab98d92c6625b683ff302aff6d14d1"/>
        <argument key="security.firewall.map.context.main" type="service" id="security.request_matcher.7cfa9b08003afaadb4ea3bcbe010a26276dbfcad3be257643ceb6b25a29b80166d7d63fd"/>
      </argument>
    </service>
    <service id="security.firewall.context" class="Symfony\Bundle\SecurityBundle\Security\FirewallContext" abstract="true">
      <argument type="collection"/>
      <argument type="service" id="security.exception_listener"/>
      <argument></argument>
    </service>
    <service id="security.firewall.config" class="Symfony\Bundle\SecurityBundle\Security\FirewallConfig" public="false" abstract="true">
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument type="collection"/>
    </service>
    <service id="security.logout_url_generator" class="Symfony\Component\Security\Http\Logout\LogoutUrlGenerator" public="false">
      <argument type="service" id="request_stack" on-invalid="null"/>
      <argument type="service" id="router.default" on-invalid="null"/>
      <argument type="service" id="security.token_storage" on-invalid="null"/>
      <call method="registerListener">
        <argument>admin</argument>
        <argument>/admin/logout</argument>
        <argument>logout</argument>
        <argument>_csrf_token</argument>
        <argument>null</argument>
        <argument>user</argument>
      </call>
      <call method="registerListener">
        <argument>main</argument>
        <argument>/admin/logout</argument>
        <argument>logout</argument>
        <argument>_csrf_token</argument>
        <argument>null</argument>
        <argument>user</argument>
      </call>
    </service>
    <service id="security.user.provider.in_memory" class="Symfony\Component\Security\Core\User\InMemoryUserProvider" public="false" abstract="true"/>
    <service id="security.user.provider.in_memory.user" class="Symfony\Component\Security\Core\User\User" public="false" abstract="true"/>
    <service id="security.user.provider.ldap" class="Symfony\Component\Security\Core\User\LdapUserProvider" public="false" abstract="true">
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument></argument>
    </service>
    <service id="security.user.provider.chain" class="Symfony\Component\Security\Core\User\ChainUserProvider" public="false" abstract="true"/>
    <service id="security.http_utils" class="Symfony\Component\Security\Http\HttpUtils" public="false">
      <argument type="service" id="router.default" on-invalid="null"/>
      <argument type="service" id="router.default" on-invalid="null"/>
    </service>
    <service id="security.validator.user_password" class="Symfony\Component\Security\Core\Validator\Constraints\UserPasswordValidator">
      <tag name="validator.constraint_validator" alias="security.validator.user_password"/>
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="security.encoder_factory.generic"/>
    </service>
    <service id="security.authentication.listener.anonymous" class="Symfony\Component\Security\Http\Firewall\AnonymousAuthenticationListener" public="false">
      <tag name="monolog.logger" channel="security"/>
      <argument type="service" id="security.token_storage"/>
      <argument></argument>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <argument type="service" id="security.authentication.manager"/>
    </service>
    <service id="security.authentication.provider.anonymous" class="Symfony\Component\Security\Core\Authentication\Provider\AnonymousAuthenticationProvider" public="false">
      <argument></argument>
    </service>
    <service id="security.authentication.retry_entry_point" class="Symfony\Component\Security\Http\EntryPoint\RetryAuthenticationEntryPoint" public="false">
      <argument>80</argument>
      <argument>443</argument>
    </service>
    <service id="security.authentication.basic_entry_point" class="Symfony\Component\Security\Http\EntryPoint\BasicAuthenticationEntryPoint" public="false"/>
    <service id="security.authentication.digest_entry_point" class="Symfony\Component\Security\Http\EntryPoint\DigestAuthenticationEntryPoint" public="false"/>
    <service id="security.channel_listener" class="Symfony\Component\Security\Http\Firewall\ChannelListener" public="false">
      <tag name="monolog.logger" channel="security"/>
      <argument type="service" id="security.access_map"/>
      <argument type="service" id="security.authentication.retry_entry_point"/>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
    </service>
    <service id="security.access_map" class="Symfony\Component\Security\Http\AccessMap" public="false">
      <call method="add">
        <argument type="service" id="security.request_matcher.de30873fe4c8ba9e92b551cbd0950972e0a69e449f400a0d49be6b1db3f23611249878db"/>
        <argument type="collection">
          <argument>IS_AUTHENTICATED_ANONYMOUSLY</argument>
        </argument>
        <argument>null</argument>
      </call>
      <call method="add">
        <argument type="service" id="security.request_matcher.78053fac79565f734e59aeb8b8af01725488812917d938ca7e83b5619f249f072e13a851"/>
        <argument type="collection">
          <argument>IS_AUTHENTICATED_ANONYMOUSLY</argument>
        </argument>
        <argument>null</argument>
      </call>
      <call method="add">
        <argument type="service" id="security.request_matcher.d74bd7dd757d49935bc4a62d86acf7da684fd2faa8c1f6748311bcd2ce7e31eb603a19bc"/>
        <argument type="collection">
          <argument>IS_AUTHENTICATED_ANONYMOUSLY</argument>
        </argument>
        <argument>null</argument>
      </call>
      <call method="add">
        <argument type="service" id="security.request_matcher.8c331b0a561809941e8630a3027a73d42f298d30a41a1696fd639a6b0d1d1b5100e4d38f"/>
        <argument type="collection">
          <argument>IS_AUTHENTICATED_ANONYMOUSLY</argument>
        </argument>
        <argument>null</argument>
      </call>
    </service>
    <service id="security.context_listener" class="Symfony\Component\Security\Http\Firewall\ContextListener" public="false">
      <tag name="monolog.logger" channel="security"/>
      <argument type="service" id="security.token_storage"/>
      <argument type="collection">
        <argument type="service" id="fos_user.user_provider.username_email"/>
      </argument>
      <argument></argument>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <argument type="service" id="debug.event_dispatcher" on-invalid="null"/>
      <argument type="service" id="security.authentication.trust_resolver"/>
    </service>
    <service id="security.logout_listener" class="Symfony\Component\Security\Http\Firewall\LogoutListener" public="false" abstract="true">
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="security.http_utils"/>
      <argument type="service" id="security.logout.success_handler"/>
      <argument></argument>
    </service>
    <service id="security.logout.handler.session" class="Symfony\Component\Security\Http\Logout\SessionLogoutHandler" public="false"/>
    <service id="security.logout.handler.cookie_clearing" class="Symfony\Component\Security\Http\Logout\CookieClearingLogoutHandler" public="false" abstract="true"/>
    <service id="security.logout.success_handler" class="Symfony\Component\Security\Http\Logout\DefaultLogoutSuccessHandler" public="false" abstract="true">
      <argument type="service" id="security.http_utils"/>
      <argument>/</argument>
    </service>
    <service id="security.authentication.form_entry_point" class="Symfony\Component\Security\Http\EntryPoint\FormAuthenticationEntryPoint" public="false" abstract="true">
      <argument type="service" id="http_kernel"/>
    </service>
    <service id="security.authentication.listener.abstract" public="false" abstract="true">
      <tag name="monolog.logger" channel="security"/>
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="security.authentication.manager"/>
      <argument type="service" id="security.authentication.session_strategy"/>
      <argument type="service" id="security.http_utils"/>
      <argument></argument>
      <argument type="service" id="security.authentication.success_handler"/>
      <argument type="service" id="security.authentication.failure_handler"/>
      <argument type="collection"/>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <argument type="service" id="event_dispatcher" on-invalid="null"/>
    </service>
    <service id="security.authentication.custom_success_handler" class="Symfony\Component\Security\Http\Authentication\CustomAuthenticationSuccessHandler" public="false" abstract="true">
      <argument></argument>
      <argument type="collection"/>
      <argument></argument>
    </service>
    <service id="security.authentication.success_handler" class="Symfony\Component\Security\Http\Authentication\DefaultAuthenticationSuccessHandler" public="false" abstract="true">
      <argument type="service" id="security.http_utils"/>
      <argument type="collection"/>
    </service>
    <service id="security.authentication.custom_failure_handler" class="Symfony\Component\Security\Http\Authentication\CustomAuthenticationFailureHandler" public="false" abstract="true">
      <argument></argument>
      <argument type="collection"/>
    </service>
    <service id="security.authentication.failure_handler" class="Symfony\Component\Security\Http\Authentication\DefaultAuthenticationFailureHandler" public="false" abstract="true">
      <tag name="monolog.logger" channel="security"/>
      <argument type="service" id="http_kernel"/>
      <argument type="service" id="security.http_utils"/>
      <argument type="collection"/>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
    </service>
    <service id="security.authentication.listener.form" class="Symfony\Component\Security\Http\Firewall\UsernamePasswordFormAuthenticationListener" public="false" abstract="true">
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="security.authentication.manager"/>
      <argument type="service" id="security.authentication.session_strategy"/>
      <argument type="service" id="security.http_utils"/>
      <argument></argument>
      <argument type="service" id="security.authentication.success_handler"/>
      <argument type="service" id="security.authentication.failure_handler"/>
      <argument type="collection"/>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <argument type="service" id="event_dispatcher" on-invalid="null"/>
    </service>
    <service id="security.authentication.listener.simple_form" class="Symfony\Component\Security\Http\Firewall\SimpleFormAuthenticationListener" public="false" abstract="true">
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="security.authentication.manager"/>
      <argument type="service" id="security.authentication.session_strategy"/>
      <argument type="service" id="security.http_utils"/>
      <argument></argument>
      <argument type="service" id="security.authentication.success_handler"/>
      <argument type="service" id="security.authentication.failure_handler"/>
      <argument type="collection"/>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <argument type="service" id="event_dispatcher" on-invalid="null"/>
    </service>
    <service id="security.authentication.simple_success_failure_handler" class="Symfony\Component\Security\Http\Authentication\SimpleAuthenticationHandler" public="false" abstract="true">
      <tag name="monolog.logger" channel="security"/>
      <argument></argument>
      <argument type="service" id="security.authentication.success_handler"/>
      <argument type="service" id="security.authentication.failure_handler"/>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
    </service>
    <service id="security.authentication.listener.simple_preauth" class="Symfony\Component\Security\Http\Firewall\SimplePreAuthenticationListener" public="false" abstract="true">
      <tag name="monolog.logger" channel="security"/>
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="security.authentication.manager"/>
      <argument></argument>
      <argument></argument>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <argument type="service" id="event_dispatcher" on-invalid="null"/>
    </service>
    <service id="security.authentication.listener.x509" class="Symfony\Component\Security\Http\Firewall\X509AuthenticationListener" public="false" abstract="true">
      <tag name="monolog.logger" channel="security"/>
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="security.authentication.manager"/>
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <argument type="service" id="event_dispatcher" on-invalid="null"/>
    </service>
    <service id="security.authentication.listener.json" class="Symfony\Component\Security\Http\Firewall\UsernamePasswordJsonAuthenticationListener" public="false" abstract="true">
      <tag name="monolog.logger" channel="security"/>
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="security.authentication.manager"/>
      <argument type="service" id="security.http_utils"/>
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument type="collection"/>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <argument type="service" id="event_dispatcher" on-invalid="null"/>
      <argument type="service" id="property_accessor" on-invalid="null"/>
    </service>
    <service id="security.authentication.listener.remote_user" class="Symfony\Component\Security\Http\Firewall\RemoteUserAuthenticationListener" public="false" abstract="true">
      <tag name="monolog.logger" channel="security"/>
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="security.authentication.manager"/>
      <argument></argument>
      <argument></argument>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <argument type="service" id="event_dispatcher" on-invalid="null"/>
    </service>
    <service id="security.authentication.listener.basic" class="Symfony\Component\Security\Http\Firewall\BasicAuthenticationListener" public="false" abstract="true">
      <tag name="monolog.logger" channel="security"/>
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="security.authentication.manager"/>
      <argument></argument>
      <argument></argument>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
    </service>
    <service id="security.authentication.listener.digest" class="Symfony\Component\Security\Http\Firewall\DigestAuthenticationListener" public="false" abstract="true">
      <tag name="monolog.logger" channel="security"/>
      <argument type="service" id="security.token_storage"/>
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
    </service>
    <service id="security.authentication.provider.dao" class="Symfony\Component\Security\Core\Authentication\Provider\DaoAuthenticationProvider" public="false" abstract="true">
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument type="service" id="security.encoder_factory"/>
      <argument>true</argument>
    </service>
    <service id="security.authentication.provider.ldap_bind" class="Symfony\Component\Security\Core\Authentication\Provider\LdapBindAuthenticationProvider" public="false" abstract="true">
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument>true</argument>
    </service>
    <service id="security.authentication.provider.simple" class="Symfony\Component\Security\Core\Authentication\Provider\SimpleAuthenticationProvider" public="false" abstract="true">
      <argument></argument>
      <argument></argument>
      <argument></argument>
    </service>
    <service id="security.authentication.provider.pre_authenticated" class="Symfony\Component\Security\Core\Authentication\Provider\PreAuthenticatedAuthenticationProvider" public="false" abstract="true">
      <argument></argument>
      <argument></argument>
    </service>
    <service id="security.exception_listener" class="Symfony\Component\Security\Http\Firewall\ExceptionListener" public="false" abstract="true">
      <tag name="monolog.logger" channel="security"/>
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="security.authentication.trust_resolver"/>
      <argument type="service" id="security.http_utils"/>
      <argument></argument>
      <argument type="service" id="security.authentication.entry_point" on-invalid="null"/>
      <argument>null</argument>
      <argument type="service" id="security.access.denied_handler" on-invalid="null"/>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <argument>false</argument>
    </service>
    <service id="security.authentication.switchuser_listener" class="Symfony\Component\Security\Http\Firewall\SwitchUserListener" public="false" abstract="true">
      <tag name="monolog.logger" channel="security"/>
      <argument type="service" id="security.token_storage"/>
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument type="service" id="security.access.decision_manager"/>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <argument>_switch_user</argument>
      <argument>ROLE_ALLOWED_TO_SWITCH</argument>
      <argument type="service" id="event_dispatcher" on-invalid="null"/>
    </service>
    <service id="security.access_listener" class="Symfony\Component\Security\Http\Firewall\AccessListener" public="false">
      <tag name="monolog.logger" channel="security"/>
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="debug.security.access.decision_manager"/>
      <argument type="service" id="security.access_map"/>
      <argument type="service" id="security.authentication.manager"/>
    </service>
    <service id="security.authentication.listener.rememberme" class="Symfony\Component\Security\Http\Firewall\RememberMeListener" public="false" abstract="true">
      <tag name="monolog.logger" channel="security"/>
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="security.authentication.rememberme"/>
      <argument type="service" id="security.authentication.manager"/>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <argument type="service" id="event_dispatcher" on-invalid="null"/>
      <argument></argument>
      <argument type="service" id="security.authentication.session_strategy"/>
    </service>
    <service id="security.authentication.provider.rememberme" class="Symfony\Component\Security\Core\Authentication\Provider\RememberMeAuthenticationProvider" public="false" abstract="true">
      <argument></argument>
    </service>
    <service id="security.rememberme.token.provider.in_memory" class="Symfony\Component\Security\Core\Authentication\RememberMe\InMemoryTokenProvider" public="false"/>
    <service id="security.authentication.rememberme.services.abstract" public="false" abstract="true">
      <tag name="monolog.logger" channel="security"/>
      <argument type="collection"/>
      <argument></argument>
      <argument></argument>
      <argument type="collection"/>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
    </service>
    <service id="security.authentication.rememberme.services.persistent" class="Symfony\Component\Security\Http\RememberMe\PersistentTokenBasedRememberMeServices" public="false" abstract="true">
      <argument type="collection"/>
      <argument></argument>
      <argument></argument>
      <argument type="collection"/>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
    </service>
    <service id="security.authentication.rememberme.services.simplehash" class="Symfony\Component\Security\Http\RememberMe\TokenBasedRememberMeServices" public="false" abstract="true">
      <argument type="collection"/>
      <argument></argument>
      <argument></argument>
      <argument type="collection"/>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
    </service>
    <service id="security.rememberme.response_listener" class="Symfony\Component\Security\Http\RememberMe\ResponseListener">
      <tag name="kernel.event_subscriber"/>
    </service>
    <service id="templating.helper.logout_url" class="Symfony\Bundle\SecurityBundle\Templating\Helper\LogoutUrlHelper">
      <tag name="templating.helper" alias="logout_url"/>
      <argument type="service" id="security.logout_url_generator"/>
    </service>
    <service id="templating.helper.security" class="Symfony\Bundle\SecurityBundle\Templating\Helper\SecurityHelper">
      <tag name="templating.helper" alias="security"/>
      <argument type="service" id="security.authorization_checker" on-invalid="ignore"/>
    </service>
    <service id="twig.extension.logout_url" class="Symfony\Bridge\Twig\Extension\LogoutUrlExtension" public="false">
      <tag name="twig.extension"/>
      <argument type="service" id="security.logout_url_generator"/>
    </service>
    <service id="twig.extension.security" class="Symfony\Bridge\Twig\Extension\SecurityExtension" public="false">
      <tag name="twig.extension"/>
      <argument type="service" id="security.authorization_checker" on-invalid="ignore"/>
    </service>
    <service id="data_collector.security" class="Symfony\Bundle\SecurityBundle\DataCollector\SecurityDataCollector" public="false">
      <tag name="data_collector" template="@Security/Collector/security.html.twig" id="security" priority="270"/>
      <argument type="service" id="security.token_storage" on-invalid="ignore"/>
      <argument type="service" id="security.role_hierarchy"/>
      <argument type="service" id="security.logout_url_generator"/>
      <argument type="service" id="debug.security.access.decision_manager"/>
      <argument type="service" id="security.firewall.map"/>
    </service>
    <service id="security.authentication.guard_handler" class="Symfony\Component\Security\Guard\GuardAuthenticatorHandler">
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="debug.event_dispatcher" on-invalid="null"/>
    </service>
    <service id="security.authentication.provider.guard" class="Symfony\Component\Security\Guard\Provider\GuardAuthenticationProvider" public="false" abstract="true">
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument></argument>
    </service>
    <service id="security.authentication.listener.guard" class="Symfony\Component\Security\Guard\Firewall\GuardAuthenticationListener" public="false" abstract="true">
      <tag name="monolog.logger" channel="security"/>
      <argument type="service" id="security.authentication.guard_handler"/>
      <argument type="service" id="security.authentication.manager"/>
      <argument></argument>
      <argument></argument>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
    </service>
    <service id="debug.security.access.decision_manager" class="Symfony\Component\Security\Core\Authorization\TraceableAccessDecisionManager" public="false">
      <argument type="service" id="debug.security.access.decision_manager.inner"/>
    </service>
    <service id="security.firewall.map.config.admin" class="Symfony\Bundle\SecurityBundle\Security\FirewallConfig" public="false">
      <argument>admin</argument>
      <argument>security.user_checker</argument>
      <argument>security.request_matcher.6192eb66f667b945c5faa9068fbc96bd7724861bdcab98d92c6625b683ff302aff6d14d1</argument>
      <argument>true</argument>
      <argument>false</argument>
      <argument>fos_user.user_provider.username_email</argument>
      <argument>user</argument>
      <argument>security.authentication.form_entry_point.admin</argument>
      <argument>null</argument>
      <argument>null</argument>
      <argument type="collection">
        <argument>logout</argument>
        <argument>form_login</argument>
        <argument>anonymous</argument>
      </argument>
    </service>
    <service id="security.request_matcher.6192eb66f667b945c5faa9068fbc96bd7724861bdcab98d92c6625b683ff302aff6d14d1" class="Symfony\Component\HttpFoundation\RequestMatcher" public="false">
      <argument>/admin(.*)</argument>
    </service>
    <service id="security.context_listener.0" class="Symfony\Component\Security\Http\Firewall\ContextListener" public="false">
      <argument type="service" id="security.token_storage"/>
      <argument type="collection">
        <argument type="service" id="fos_user.user_provider.username_email"/>
      </argument>
      <argument>user</argument>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <argument type="service" id="debug.event_dispatcher" on-invalid="null"/>
      <argument type="service" id="security.authentication.trust_resolver"/>
    </service>
    <service id="security.logout_listener.admin" class="Symfony\Component\Security\Http\Firewall\LogoutListener" public="false">
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="security.http_utils"/>
      <argument type="service" id="security.logout.success_handler.admin"/>
      <argument type="collection">
        <argument key="csrf_parameter">_csrf_token</argument>
        <argument key="csrf_token_id">logout</argument>
        <argument key="logout_path">/admin/logout</argument>
      </argument>
      <call method="addHandler">
        <argument type="service" id="security.logout.handler.session"/>
      </call>
    </service>
    <service id="security.logout.success_handler.admin" class="Symfony\Component\Security\Http\Logout\DefaultLogoutSuccessHandler" public="false">
      <argument type="service" id="security.http_utils"/>
      <argument>/admin/login</argument>
    </service>
    <service id="security.authentication.provider.dao.admin" class="Symfony\Component\Security\Core\Authentication\Provider\DaoAuthenticationProvider" public="false">
      <argument type="service" id="fos_user.user_provider.username_email"/>
      <argument type="service" id="security.user_checker"/>
      <argument>admin</argument>
      <argument type="service" id="security.encoder_factory.generic"/>
      <argument>true</argument>
    </service>
    <service id="security.authentication.success_handler.admin.form_login" class="Symfony\Component\Security\Http\Authentication\DefaultAuthenticationSuccessHandler" public="false">
      <argument type="service" id="security.http_utils"/>
      <argument type="collection"/>
      <call method="setOptions">
        <argument type="collection">
          <argument key="login_path">/login</argument>
          <argument key="always_use_default_target_path">false</argument>
          <argument key="default_target_path">/</argument>
          <argument key="target_path_parameter">_target_path</argument>
          <argument key="use_referer">false</argument>
        </argument>
      </call>
      <call method="setProviderKey">
        <argument>admin</argument>
      </call>
    </service>
    <service id="security.authentication.failure_handler.admin.form_login" class="Symfony\Component\Security\Http\Authentication\DefaultAuthenticationFailureHandler" public="false">
      <argument type="service" id="http_kernel"/>
      <argument type="service" id="security.http_utils"/>
      <argument type="collection"/>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <call method="setOptions">
        <argument type="collection">
          <argument key="login_path">/login</argument>
          <argument key="failure_path">null</argument>
          <argument key="failure_forward">false</argument>
          <argument key="failure_path_parameter">_failure_path</argument>
        </argument>
      </call>
    </service>
    <service id="security.authentication.listener.form.admin" class="Symfony\Component\Security\Http\Firewall\UsernamePasswordFormAuthenticationListener" public="false">
      <tag name="security.remember_me_aware" id="admin" provider="security.user.provider.concrete.fos_userbundle"/>
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="security.authentication.manager"/>
      <argument type="service" id="security.authentication.session_strategy"/>
      <argument type="service" id="security.http_utils"/>
      <argument>admin</argument>
      <argument type="service" id="security.authentication.success_handler.admin.form_login"/>
      <argument type="service" id="security.authentication.failure_handler.admin.form_login"/>
      <argument type="collection">
        <argument key="use_forward">false</argument>
        <argument key="check_path">/admin/login_check</argument>
        <argument key="require_previous_session">true</argument>
        <argument key="username_parameter">_username</argument>
        <argument key="password_parameter">_password</argument>
        <argument key="csrf_parameter">_csrf_token</argument>
        <argument key="csrf_token_id">authenticate</argument>
        <argument key="post_only">true</argument>
      </argument>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <argument type="service" id="debug.event_dispatcher" on-invalid="null"/>
      <argument type="service" id="security.csrf.token_manager"/>
    </service>
    <service id="security.authentication.form_entry_point.admin" class="Symfony\Component\Security\Http\EntryPoint\FormAuthenticationEntryPoint" public="false">
      <argument type="service" id="http_kernel"/>
      <argument type="service" id="security.http_utils"/>
      <argument>/login</argument>
      <argument>false</argument>
    </service>
    <service id="security.authentication.listener.anonymous.admin" class="Symfony\Component\Security\Http\Firewall\AnonymousAuthenticationListener" public="false">
      <argument type="service" id="security.token_storage"/>
      <argument>5965dcf1561099.93243320</argument>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <argument type="service" id="security.authentication.manager"/>
    </service>
    <service id="security.authentication.provider.anonymous.admin" class="Symfony\Component\Security\Core\Authentication\Provider\AnonymousAuthenticationProvider" public="false">
      <argument>5965dcf1561099.93243320</argument>
    </service>
    <service id="security.exception_listener.admin" class="Symfony\Component\Security\Http\Firewall\ExceptionListener" public="false">
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="security.authentication.trust_resolver"/>
      <argument type="service" id="security.http_utils"/>
      <argument>admin</argument>
      <argument type="service" id="security.authentication.form_entry_point.admin"/>
      <argument>null</argument>
      <argument>null</argument>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <argument>false</argument>
    </service>
    <service id="security.firewall.map.context.admin" class="Symfony\Bundle\SecurityBundle\Security\FirewallContext">
      <argument type="collection">
        <argument type="service" id="security.channel_listener"/>
        <argument type="service" id="security.context_listener.0"/>
        <argument type="service" id="security.logout_listener.admin"/>
        <argument type="service" id="security.authentication.listener.form.admin"/>
        <argument type="service" id="security.authentication.listener.anonymous.admin"/>
        <argument type="service" id="security.access_listener"/>
      </argument>
      <argument type="service" id="security.exception_listener.admin"/>
      <argument type="service" id="security.firewall.map.config.admin"/>
    </service>
    <service id="security.firewall.map.config.main" class="Symfony\Bundle\SecurityBundle\Security\FirewallConfig" public="false">
      <argument>main</argument>
      <argument>security.user_checker</argument>
      <argument>security.request_matcher.7cfa9b08003afaadb4ea3bcbe010a26276dbfcad3be257643ceb6b25a29b80166d7d63fd</argument>
      <argument>true</argument>
      <argument>false</argument>
      <argument>fos_user.user_provider.username_email</argument>
      <argument>user</argument>
      <argument>security.authentication.form_entry_point.main</argument>
      <argument>null</argument>
      <argument>null</argument>
      <argument type="collection">
        <argument>logout</argument>
        <argument>form_login</argument>
        <argument>anonymous</argument>
      </argument>
    </service>
    <service id="security.request_matcher.7cfa9b08003afaadb4ea3bcbe010a26276dbfcad3be257643ceb6b25a29b80166d7d63fd" class="Symfony\Component\HttpFoundation\RequestMatcher" public="false">
      <argument>.*</argument>
    </service>
    <service id="security.logout_listener.main" class="Symfony\Component\Security\Http\Firewall\LogoutListener" public="false">
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="security.http_utils"/>
      <argument type="service" id="security.logout.success_handler.main"/>
      <argument type="collection">
        <argument key="csrf_parameter">_csrf_token</argument>
        <argument key="csrf_token_id">logout</argument>
        <argument key="logout_path">/admin/logout</argument>
      </argument>
      <call method="addHandler">
        <argument type="service" id="security.logout.handler.session"/>
      </call>
    </service>
    <service id="security.logout.success_handler.main" class="Symfony\Component\Security\Http\Logout\DefaultLogoutSuccessHandler" public="false">
      <argument type="service" id="security.http_utils"/>
      <argument>/admin/login</argument>
    </service>
    <service id="security.authentication.provider.dao.main" class="Symfony\Component\Security\Core\Authentication\Provider\DaoAuthenticationProvider" public="false">
      <argument type="service" id="fos_user.user_provider.username_email"/>
      <argument type="service" id="security.user_checker"/>
      <argument>main</argument>
      <argument type="service" id="security.encoder_factory.generic"/>
      <argument>true</argument>
    </service>
    <service id="security.authentication.success_handler.main.form_login" class="Symfony\Component\Security\Http\Authentication\DefaultAuthenticationSuccessHandler" public="false">
      <argument type="service" id="security.http_utils"/>
      <argument type="collection"/>
      <call method="setOptions">
        <argument type="collection">
          <argument key="login_path">/admin/login</argument>
          <argument key="use_referer">true</argument>
          <argument key="always_use_default_target_path">false</argument>
          <argument key="default_target_path">/</argument>
          <argument key="target_path_parameter">_target_path</argument>
        </argument>
      </call>
      <call method="setProviderKey">
        <argument>main</argument>
      </call>
    </service>
    <service id="security.authentication.failure_handler.main.form_login" class="Symfony\Component\Security\Http\Authentication\DefaultAuthenticationFailureHandler" public="false">
      <argument type="service" id="http_kernel"/>
      <argument type="service" id="security.http_utils"/>
      <argument type="collection"/>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <call method="setOptions">
        <argument type="collection">
          <argument key="login_path">/admin/login</argument>
          <argument key="failure_path">null</argument>
          <argument key="failure_forward">false</argument>
          <argument key="failure_path_parameter">_failure_path</argument>
        </argument>
      </call>
    </service>
    <service id="security.authentication.listener.form.main" class="Symfony\Component\Security\Http\Firewall\UsernamePasswordFormAuthenticationListener" public="false">
      <tag name="security.remember_me_aware" id="main" provider="security.user.provider.concrete.fos_userbundle"/>
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="security.authentication.manager"/>
      <argument type="service" id="security.authentication.session_strategy"/>
      <argument type="service" id="security.http_utils"/>
      <argument>main</argument>
      <argument type="service" id="security.authentication.success_handler.main.form_login"/>
      <argument type="service" id="security.authentication.failure_handler.main.form_login"/>
      <argument type="collection">
        <argument key="use_forward">false</argument>
        <argument key="check_path">/login_check</argument>
        <argument key="require_previous_session">true</argument>
        <argument key="username_parameter">_username</argument>
        <argument key="password_parameter">_password</argument>
        <argument key="csrf_parameter">_csrf_token</argument>
        <argument key="csrf_token_id">authenticate</argument>
        <argument key="post_only">true</argument>
      </argument>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <argument type="service" id="debug.event_dispatcher" on-invalid="null"/>
      <argument type="service" id="security.csrf.token_manager"/>
    </service>
    <service id="security.authentication.form_entry_point.main" class="Symfony\Component\Security\Http\EntryPoint\FormAuthenticationEntryPoint" public="false">
      <argument type="service" id="http_kernel"/>
      <argument type="service" id="security.http_utils"/>
      <argument>/admin/login</argument>
      <argument>false</argument>
    </service>
    <service id="security.authentication.listener.anonymous.main" class="Symfony\Component\Security\Http\Firewall\AnonymousAuthenticationListener" public="false">
      <argument type="service" id="security.token_storage"/>
      <argument>5965dcf1561099.93243320</argument>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <argument type="service" id="security.authentication.manager"/>
    </service>
    <service id="security.authentication.provider.anonymous.main" class="Symfony\Component\Security\Core\Authentication\Provider\AnonymousAuthenticationProvider" public="false">
      <argument>5965dcf1561099.93243320</argument>
    </service>
    <service id="security.exception_listener.main" class="Symfony\Component\Security\Http\Firewall\ExceptionListener" public="false">
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="security.authentication.trust_resolver"/>
      <argument type="service" id="security.http_utils"/>
      <argument>main</argument>
      <argument type="service" id="security.authentication.form_entry_point.main"/>
      <argument>null</argument>
      <argument>null</argument>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <argument>false</argument>
    </service>
    <service id="security.firewall.map.context.main" class="Symfony\Bundle\SecurityBundle\Security\FirewallContext">
      <argument type="collection">
        <argument type="service" id="security.channel_listener"/>
        <argument type="service" id="security.context_listener.0"/>
        <argument type="service" id="security.logout_listener.main"/>
        <argument type="service" id="security.authentication.listener.form.main"/>
        <argument type="service" id="security.authentication.listener.anonymous.main"/>
        <argument type="service" id="security.access_listener"/>
      </argument>
      <argument type="service" id="security.exception_listener.main"/>
      <argument type="service" id="security.firewall.map.config.main"/>
    </service>
    <service id="service_locator.560077d9081c1c6dfe57dabbe75297df" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="security.firewall.map.context.admin" type="service" id="security.firewall.map.context.admin"/>
        <argument key="security.firewall.map.context.main" type="service" id="security.firewall.map.context.main"/>
      </argument>
    </service>
    <service id="security.request_matcher.de30873fe4c8ba9e92b551cbd0950972e0a69e449f400a0d49be6b1db3f23611249878db" class="Symfony\Component\HttpFoundation\RequestMatcher" public="false">
      <argument>^/admin/login$</argument>
    </service>
    <service id="security.request_matcher.78053fac79565f734e59aeb8b8af01725488812917d938ca7e83b5619f249f072e13a851" class="Symfony\Component\HttpFoundation\RequestMatcher" public="false">
      <argument>^/admin/logout$</argument>
    </service>
    <service id="security.request_matcher.d74bd7dd757d49935bc4a62d86acf7da684fd2faa8c1f6748311bcd2ce7e31eb603a19bc" class="Symfony\Component\HttpFoundation\RequestMatcher" public="false">
      <argument>^/admin/login_check$</argument>
    </service>
    <service id="security.request_matcher.8c331b0a561809941e8630a3027a73d42f298d30a41a1696fd639a6b0d1d1b5100e4d38f" class="Symfony\Component\HttpFoundation\RequestMatcher" public="false">
      <argument>^/admin/resetting</argument>
    </service>
    <service id="security.console.user_password_encoder_command" class="Symfony\Bundle\SecurityBundle\Command\UserPasswordEncoderCommand" public="false">
      <tag name="console.command"/>
      <argument type="service" id="security.encoder_factory.generic"/>
      <argument type="collection">
        <argument>AppBundle\Entity\User</argument>
      </argument>
    </service>
    <service id="twig" class="Twig\Environment">
      <argument type="service" id="twig.loader.filesystem"/>
      <argument type="collection">
        <argument key="debug">true</argument>
        <argument key="strict_variables">true</argument>
        <argument key="exception_controller">twig.controller.exception:showAction</argument>
        <argument key="form_themes" type="collection">
          <argument>form_div_layout.html.twig</argument>
        </argument>
        <argument key="autoescape">name</argument>
        <argument key="cache">D:\wamp64\www\SiteSymfony\SonataBackOffice\var\cache\dev/twig</argument>
        <argument key="charset">UTF-8</argument>
        <argument key="paths" type="collection"/>
        <argument key="date" type="collection">
          <argument key="format">F j, Y H:i</argument>
          <argument key="interval_format">%d days</argument>
          <argument key="timezone">null</argument>
        </argument>
        <argument key="number_format" type="collection">
          <argument key="decimals">0</argument>
          <argument key="decimal_point">.</argument>
          <argument key="thousands_separator">,</argument>
        </argument>
      </argument>
      <call method="addExtension">
        <argument type="service" id="twig.extension.logout_url"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.security"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.profiler"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.trans"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.assets"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.code"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.routing"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.yaml"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.debug.stopwatch"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.expression"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.httpkernel"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.httpfoundation"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.debug"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.form"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.weblink"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="doctrine.twig.doctrine_extension"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="sonata.core.flashmessage.twig.extension"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="sonata.core.twig.extension.wrapping"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="sonata.core.twig.extension.text"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="sonata.core.twig.status_extension"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="sonata.core.twig.template_extension"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="sonata.block.twig.extension"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="knp_menu.twig.extension"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="sonata.admin.twig.extension"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="easyadmin.twig.extension"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.dump"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.webprofiler"/>
      </call>
      <call method="addGlobal">
        <argument>app</argument>
        <argument type="service" id="twig.app_variable"/>
      </call>
      <call method="addRuntimeLoader">
        <argument type="service" id="twig.runtime_loader"/>
      </call>
      <call method="addGlobal">
        <argument>sonata_block</argument>
        <argument type="service" id="sonata.block.twig.global"/>
      </call>
      <call method="addGlobal">
        <argument>sonata_admin</argument>
        <argument type="service" id="sonata.admin.twig.global"/>
      </call>
      <configurator service="twig.configurator.environment" method="configure"/>
    </service>
    <service id="twig.app_variable" class="Symfony\Bridge\Twig\AppVariable" public="false">
      <call method="setEnvironment">
        <argument>dev</argument>
      </call>
      <call method="setDebug">
        <argument>true</argument>
      </call>
      <call method="setTokenStorage">
        <argument type="service" id="security.token_storage" on-invalid="ignore"/>
      </call>
      <call method="setRequestStack">
        <argument type="service" id="request_stack" on-invalid="ignore"/>
      </call>
    </service>
    <service id="twig.cache_warmer" class="Symfony\Bundle\TwigBundle\CacheWarmer\TemplateCacheCacheWarmer" public="false">
      <tag name="kernel.cache_warmer"/>
      <tag name="container.service_subscriber" id="twig"/>
      <tag name="container.service_subscriber.locator" id="service_locator.26ac001b3ede28481ac0de703666b4d7"/>
      <argument type="service" id="service_locator.26ac001b3ede28481ac0de703666b4d7"/>
      <argument type="service" id="templating.finder" on-invalid="ignore"/>
      <argument type="collection"/>
    </service>
    <service id="twig.template_iterator" class="Symfony\Bundle\TwigBundle\TemplateIterator" public="false">
      <argument type="service" id="kernel"/>
      <argument>D:\wamp64\www\SiteSymfony\SonataBackOffice\app</argument>
      <argument type="collection"/>
    </service>
    <service id="twig.template_cache_warmer" class="Symfony\Bundle\TwigBundle\CacheWarmer\TemplateCacheWarmer" public="false">
      <tag name="kernel.cache_warmer"/>
      <argument type="service" id="service_container"/>
      <argument type="service" id="twig.template_iterator"/>
    </service>
    <service id="twig.loader.native_filesystem" class="Twig\Loader\FilesystemLoader" public="false">
      <argument type="collection"/>
      <argument>D:\wamp64\www\SiteSymfony\SonataBackOffice</argument>
      <call method="addPath">
        <argument>D:\wamp64\www\SiteSymfony\SonataBackOffice\vendor\symfony\symfony\src\Symfony\Bundle\FrameworkBundle/Resources/views</argument>
        <argument>Framework</argument>
      </call>
      <call method="addPath">
        <argument>D:\wamp64\www\SiteSymfony\SonataBackOffice\vendor\symfony\symfony\src\Symfony\Bundle\SecurityBundle/Resources/views</argument>
        <argument>Security</argument>
      </call>
      <call method="addPath">
        <argument>D:\wamp64\www\SiteSymfony\SonataBackOffice\vendor\symfony\symfony\src\Symfony\Bundle\TwigBundle/Resources/views</argument>
        <argument>Twig</argument>
      </call>
      <call method="addPath">
        <argument>D:\wamp64\www\SiteSymfony\SonataBackOffice\vendor\symfony\swiftmailer-bundle/Resources/views</argument>
        <argument>Swiftmailer</argument>
      </call>
      <call method="addPath">
        <argument>D:\wamp64\www\SiteSymfony\SonataBackOffice\vendor\doctrine\doctrine-bundle/Resources/views</argument>
        <argument>Doctrine</argument>
      </call>
      <call method="addPath">
        <argument>D:\wamp64\www\SiteSymfony\SonataBackOffice\src\AppBundle/Resources/views</argument>
        <argument>App</argument>
      </call>
      <call method="addPath">
        <argument>D:\wamp64\www\SiteSymfony\SonataBackOffice\src\AppBundle/Resources/views</argument>
        <argument>FOSUser</argument>
      </call>
      <call method="addPath">
        <argument>D:\wamp64\www\SiteSymfony\SonataBackOffice\vendor\friendsofsymfony\user-bundle/Resources/views</argument>
        <argument>FOSUser</argument>
      </call>
      <call method="addPath">
        <argument>D:\wamp64\www\SiteSymfony\SonataBackOffice\vendor\sonata-project\core-bundle/Resources/views</argument>
        <argument>SonataCore</argument>
      </call>
      <call method="addPath">
        <argument>D:\wamp64\www\SiteSymfony\SonataBackOffice\vendor\sonata-project\block-bundle/Resources/views</argument>
        <argument>SonataBlock</argument>
      </call>
      <call method="addPath">
        <argument>D:\wamp64\www\SiteSymfony\SonataBackOffice\vendor\knplabs\knp-menu-bundle/Resources/views</argument>
        <argument>KnpMenu</argument>
      </call>
      <call method="addPath">
        <argument>D:\wamp64\www\SiteSymfony\SonataBackOffice\vendor\sonata-project\doctrine-orm-admin-bundle/Resources/views</argument>
        <argument>SonataDoctrineORMAdmin</argument>
      </call>
      <call method="addPath">
        <argument>D:\wamp64\www\SiteSymfony\SonataBackOffice\vendor\sonata-project\admin-bundle/Resources/views</argument>
        <argument>SonataAdmin</argument>
      </call>
      <call method="addPath">
        <argument>D:\wamp64\www\SiteSymfony\SonataBackOffice\vendor\javiereguiluz\easyadmin-bundle/Resources/views</argument>
        <argument>EasyAdmin</argument>
      </call>
      <call method="addPath">
        <argument>D:\wamp64\www\SiteSymfony\SonataBackOffice\vendor\symfony\symfony\src\Symfony\Bundle\DebugBundle/Resources/views</argument>
        <argument>Debug</argument>
      </call>
      <call method="addPath">
        <argument>D:\wamp64\www\SiteSymfony\SonataBackOffice\vendor\symfony\symfony\src\Symfony\Bundle\WebProfilerBundle/Resources/views</argument>
        <argument>WebProfiler</argument>
      </call>
      <call method="addPath">
        <argument>D:\wamp64\www\SiteSymfony\SonataBackOffice\app/Resources/views</argument>
      </call>
      <call method="addPath">
        <argument>D:\wamp64\www\SiteSymfony\SonataBackOffice\vendor\symfony\symfony\src\Symfony\Bridge\Twig/Resources/views/Form</argument>
      </call>
    </service>
    <service id="twig.loader.chain" class="Twig\Loader\ChainLoader" public="false"/>
    <service id="twig.extension.profiler" class="Symfony\Bridge\Twig\Extension\ProfilerExtension" public="false">
      <tag name="twig.extension"/>
      <argument type="service" id="twig.profile"/>
      <argument type="service" id="debug.stopwatch" on-invalid="null"/>
    </service>
    <service id="twig.profile" class="Twig\Profiler\Profile"/>
    <service id="data_collector.twig" class="Symfony\Bridge\Twig\DataCollector\TwigDataCollector" public="false">
      <tag name="data_collector" template="@WebProfiler/Collector/twig.html.twig" id="twig" priority="257"/>
      <argument type="service" id="twig.profile"/>
    </service>
    <service id="twig.extension.trans" class="Symfony\Bridge\Twig\Extension\TranslationExtension" public="false">
      <tag name="twig.extension"/>
      <argument type="service" id="translator.data_collector"/>
    </service>
    <service id="twig.extension.assets" class="Symfony\Bridge\Twig\Extension\AssetExtension" public="false">
      <tag name="twig.extension"/>
      <argument type="service" id="assets.packages"/>
    </service>
    <service id="twig.extension.code" class="Symfony\Bridge\Twig\Extension\CodeExtension" public="false">
      <tag name="twig.extension"/>
      <argument type="service" id="debug.file_link_formatter" on-invalid="ignore"/>
      <argument>D:\wamp64\www\SiteSymfony\SonataBackOffice\app</argument>
      <argument>UTF-8</argument>
    </service>
    <service id="twig.extension.routing" class="Symfony\Bridge\Twig\Extension\RoutingExtension" public="false">
      <tag name="twig.extension"/>
      <argument type="service" id="router.default"/>
    </service>
    <service id="twig.extension.yaml" class="Symfony\Bridge\Twig\Extension\YamlExtension" public="false">
      <tag name="twig.extension"/>
    </service>
    <service id="twig.extension.debug.stopwatch" class="Symfony\Bridge\Twig\Extension\StopwatchExtension" public="false">
      <tag name="twig.extension"/>
      <argument type="service" id="debug.stopwatch" on-invalid="ignore"/>
      <argument>true</argument>
    </service>
    <service id="twig.extension.expression" class="Symfony\Bridge\Twig\Extension\ExpressionExtension" public="false">
      <tag name="twig.extension"/>
    </service>
    <service id="twig.extension.httpkernel" class="Symfony\Bridge\Twig\Extension\HttpKernelExtension" public="false">
      <tag name="twig.extension"/>
    </service>
    <service id="twig.runtime.httpkernel" class="Symfony\Bridge\Twig\Extension\HttpKernelRuntime">
      <tag name="twig.runtime"/>
      <argument type="service" id="fragment.handler"/>
    </service>
    <service id="twig.extension.httpfoundation" class="Symfony\Bridge\Twig\Extension\HttpFoundationExtension" public="false">
      <tag name="twig.extension"/>
      <argument type="service" id="request_stack"/>
      <argument type="service" id="router.request_context" on-invalid="ignore"/>
    </service>
    <service id="twig.extension.debug" class="Twig\Extension\DebugExtension" public="false">
      <tag name="twig.extension"/>
    </service>
    <service id="twig.translation.extractor" class="Symfony\Bridge\Twig\Translation\TwigExtractor">
      <tag name="translation.extractor" alias="twig"/>
      <argument type="service" id="twig"/>
    </service>
    <service id="twig.exception_listener" class="Symfony\Component\HttpKernel\EventListener\ExceptionListener">
      <tag name="kernel.event_subscriber"/>
      <tag name="monolog.logger" channel="request"/>
      <argument>twig.controller.exception:showAction</argument>
      <argument type="service" id="monolog.logger.request" on-invalid="null"/>
    </service>
    <service id="twig.controller.exception" class="Symfony\Bundle\TwigBundle\Controller\ExceptionController">
      <argument type="service" id="twig"/>
      <argument>true</argument>
    </service>
    <service id="twig.controller.preview_error" class="Symfony\Bundle\TwigBundle\Controller\PreviewErrorController">
      <argument type="service" id="http_kernel"/>
      <argument>twig.controller.exception:showAction</argument>
    </service>
    <service id="twig.configurator.environment" class="Symfony\Bundle\TwigBundle\DependencyInjection\Configurator\EnvironmentConfigurator" public="false">
      <argument>F j, Y H:i</argument>
      <argument>%d days</argument>
      <argument>null</argument>
      <argument>0</argument>
      <argument>.</argument>
      <argument>,</argument>
    </service>
    <service id="twig.runtime_loader" class="Twig\RuntimeLoader\ContainerRuntimeLoader" public="false">
      <argument type="service" id="service_locator.8925f20c49cbd61fcb37adf8c595459e"/>
    </service>
    <service id="twig.extension.form" class="Symfony\Bridge\Twig\Extension\FormExtension" public="false">
      <tag name="twig.extension"/>
      <argument type="collection">
        <argument type="service" id="service_container"/>
        <argument>twig.form.renderer</argument>
      </argument>
    </service>
    <service id="twig.form.engine" class="Symfony\Bridge\Twig\Form\TwigRendererEngine" public="false">
      <argument type="collection">
        <argument>form_div_layout.html.twig</argument>
      </argument>
      <argument type="service" id="twig"/>
    </service>
    <service id="twig.form.renderer" class="Symfony\Bridge\Twig\Form\TwigRenderer">
      <tag name="twig.runtime"/>
      <argument type="service" id="twig.form.engine"/>
      <argument type="service" id="security.csrf.token_manager" on-invalid="null"/>
    </service>
    <service id="twig.loader.filesystem" class="Symfony\Bundle\TwigBundle\Loader\FilesystemLoader" public="false">
      <tag name="twig.loader"/>
      <argument type="service" id="templating.locator"/>
      <argument type="service" id="templating.name_parser"/>
      <argument>D:\wamp64\www\SiteSymfony\SonataBackOffice</argument>
      <call method="addPath">
        <argument>D:\wamp64\www\SiteSymfony\SonataBackOffice\vendor\symfony\symfony\src\Symfony\Bundle\FrameworkBundle/Resources/views</argument>
        <argument>Framework</argument>
      </call>
      <call method="addPath">
        <argument>D:\wamp64\www\SiteSymfony\SonataBackOffice\vendor\symfony\symfony\src\Symfony\Bundle\SecurityBundle/Resources/views</argument>
        <argument>Security</argument>
      </call>
      <call method="addPath">
        <argument>D:\wamp64\www\SiteSymfony\SonataBackOffice\vendor\symfony\symfony\src\Symfony\Bundle\TwigBundle/Resources/views</argument>
        <argument>Twig</argument>
      </call>
      <call method="addPath">
        <argument>D:\wamp64\www\SiteSymfony\SonataBackOffice\vendor\symfony\swiftmailer-bundle/Resources/views</argument>
        <argument>Swiftmailer</argument>
      </call>
      <call method="addPath">
        <argument>D:\wamp64\www\SiteSymfony\SonataBackOffice\vendor\doctrine\doctrine-bundle/Resources/views</argument>
        <argument>Doctrine</argument>
      </call>
      <call method="addPath">
        <argument>D:\wamp64\www\SiteSymfony\SonataBackOffice\src\AppBundle/Resources/views</argument>
        <argument>App</argument>
      </call>
      <call method="addPath">
        <argument>D:\wamp64\www\SiteSymfony\SonataBackOffice\src\AppBundle/Resources/views</argument>
        <argument>FOSUser</argument>
      </call>
      <call method="addPath">
        <argument>D:\wamp64\www\SiteSymfony\SonataBackOffice\vendor\friendsofsymfony\user-bundle/Resources/views</argument>
        <argument>FOSUser</argument>
      </call>
      <call method="addPath">
        <argument>D:\wamp64\www\SiteSymfony\SonataBackOffice\vendor\sonata-project\core-bundle/Resources/views</argument>
        <argument>SonataCore</argument>
      </call>
      <call method="addPath">
        <argument>D:\wamp64\www\SiteSymfony\SonataBackOffice\vendor\sonata-project\block-bundle/Resources/views</argument>
        <argument>SonataBlock</argument>
      </call>
      <call method="addPath">
        <argument>D:\wamp64\www\SiteSymfony\SonataBackOffice\vendor\knplabs\knp-menu-bundle/Resources/views</argument>
        <argument>KnpMenu</argument>
      </call>
      <call method="addPath">
        <argument>D:\wamp64\www\SiteSymfony\SonataBackOffice\vendor\sonata-project\doctrine-orm-admin-bundle/Resources/views</argument>
        <argument>SonataDoctrineORMAdmin</argument>
      </call>
      <call method="addPath">
        <argument>D:\wamp64\www\SiteSymfony\SonataBackOffice\vendor\sonata-project\admin-bundle/Resources/views</argument>
        <argument>SonataAdmin</argument>
      </call>
      <call method="addPath">
        <argument>D:\wamp64\www\SiteSymfony\SonataBackOffice\vendor\javiereguiluz\easyadmin-bundle/Resources/views</argument>
        <argument>EasyAdmin</argument>
      </call>
      <call method="addPath">
        <argument>D:\wamp64\www\SiteSymfony\SonataBackOffice\vendor\symfony\symfony\src\Symfony\Bundle\DebugBundle/Resources/views</argument>
        <argument>Debug</argument>
      </call>
      <call method="addPath">
        <argument>D:\wamp64\www\SiteSymfony\SonataBackOffice\vendor\symfony\symfony\src\Symfony\Bundle\WebProfilerBundle/Resources/views</argument>
        <argument>WebProfiler</argument>
      </call>
      <call method="addPath">
        <argument>D:\wamp64\www\SiteSymfony\SonataBackOffice\app/Resources/views</argument>
      </call>
      <call method="addPath">
        <argument>D:\wamp64\www\SiteSymfony\SonataBackOffice\vendor\symfony\symfony\src\Symfony\Bridge\Twig/Resources/views/Form</argument>
      </call>
      <call method="addPath">
        <argument>D:\wamp64\www\SiteSymfony\SonataBackOffice\vendor\knplabs\knp-menu\src\Knp\Menu/Resources/views</argument>
      </call>
    </service>
    <service id="templating.engine.twig" class="Symfony\Bundle\TwigBundle\TwigEngine" public="false">
      <argument type="service" id="twig"/>
      <argument type="service" id="templating.name_parser"/>
      <argument type="service" id="templating.locator"/>
    </service>
    <service id="twig.extension.weblink" class="Symfony\Bridge\Twig\Extension\WebLinkExtension" public="false">
      <tag name="twig.extension"/>
      <argument type="service" id="request_stack"/>
    </service>
    <service id="monolog.logger" class="Symfony\Bridge\Monolog\Logger" public="false">
      <argument>app</argument>
      <call method="pushProcessor">
        <argument type="service" id="debug.log_processor"/>
      </call>
      <call method="useMicrosecondTimestamps">
        <argument>true</argument>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.server_log"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.console"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.main"/>
      </call>
    </service>
    <service id="monolog.logger_prototype" class="Symfony\Bridge\Monolog\Logger" abstract="true">
      <argument></argument>
      <call method="pushProcessor">
        <argument type="service" id="debug.log_processor"/>
      </call>
    </service>
    <service id="monolog.activation_strategy.not_found" class="Symfony\Bridge\Monolog\Handler\FingersCrossed\NotFoundActivationStrategy"/>
    <service id="monolog.handler.fingers_crossed.error_level_activation_strategy" class="Monolog\Handler\FingersCrossed\ErrorLevelActivationStrategy"/>
    <service id="monolog.formatter.chrome_php" class="Monolog\Formatter\ChromePHPFormatter" public="false"/>
    <service id="monolog.formatter.gelf_message" class="Monolog\Formatter\GelfMessageFormatter" public="false"/>
    <service id="monolog.formatter.html" class="Monolog\Formatter\HtmlFormatter" public="false"/>
    <service id="monolog.formatter.json" class="Monolog\Formatter\JsonFormatter" public="false"/>
    <service id="monolog.formatter.line" class="Monolog\Formatter\LineFormatter" public="false"/>
    <service id="monolog.formatter.loggly" class="Monolog\Formatter\LogglyFormatter" public="false"/>
    <service id="monolog.formatter.normalizer" class="Monolog\Formatter\NormalizerFormatter" public="false"/>
    <service id="monolog.formatter.scalar" class="Monolog\Formatter\ScalarFormatter" public="false"/>
    <service id="monolog.formatter.wildfire" class="Monolog\Formatter\WildfireFormatter" public="false"/>
    <service id="monolog.formatter.logstash" class="Monolog\Formatter\LogstashFormatter" public="false">
      <argument>app</argument>
    </service>
    <service id="monolog.processor.psr_log_message" class="Monolog\Processor\PsrLogMessageProcessor" public="false"/>
    <service id="monolog.handler.main" class="Monolog\Handler\StreamHandler">
      <argument>D:\wamp64\www\SiteSymfony\SonataBackOffice\var\logs/dev.log</argument>
      <argument>100</argument>
      <argument>true</argument>
      <argument>null</argument>
      <call method="pushProcessor">
        <argument type="service" id="monolog.processor.psr_log_message"/>
      </call>
    </service>
    <service id="monolog.handler.console" class="Symfony\Bridge\Monolog\Handler\ConsoleHandler">
      <tag name="kernel.event_subscriber"/>
      <argument>null</argument>
      <argument>true</argument>
      <argument type="collection"/>
    </service>
    <service id="monolog.handler.server_log" class="Symfony\Bridge\Monolog\Handler\ServerLogHandler">
      <argument>127.0.0.1:9911</argument>
      <argument>100</argument>
      <argument>true</argument>
    </service>
    <service id="3_4313fef45b8de9c9352c915468ecda8045afb1cf34ab18361a30e8fbf337f3e5" class="Swift_Transport_Esmtp_Auth_PlainAuthenticator" public="false"/>
    <service id="2_4313fef45b8de9c9352c915468ecda8045afb1cf34ab18361a30e8fbf337f3e5" class="Swift_Transport_Esmtp_Auth_LoginAuthenticator" public="false"/>
    <service id="1_4313fef45b8de9c9352c915468ecda8045afb1cf34ab18361a30e8fbf337f3e5" class="Swift_Transport_Esmtp_Auth_CramMd5Authenticator" public="false"/>
    <service id="swiftmailer.mailer.abstract" class="Swift_Mailer" abstract="true">
      <argument type="service" id="swiftmailer.transport"/>
    </service>
    <service id="swiftmailer.transport.smtp.configurator.abstract" class="Symfony\Bundle\SwiftmailerBundle\DependencyInjection\SmtpTransportConfigurator" public="false" abstract="true"/>
    <service id="swiftmailer.transport.sendmail.abstract" class="Swift_Transport_SendmailTransport" public="false" abstract="true"/>
    <service id="swiftmailer.transport.mail.abstract" class="Swift_Transport_MailTransport" public="false" abstract="true">
      <argument type="service" id="swiftmailer.transport.mailinvoker"/>
    </service>
    <service id="swiftmailer.transport.null.abstract" class="Swift_Transport_NullTransport" public="false" abstract="true"/>
    <service id="swiftmailer.transport.failover" class="Swift_Transport_FailoverTransport" public="false"/>
    <service id="swiftmailer.transport.mailinvoker" class="Swift_Transport_SimpleMailInvoker" public="false"/>
    <service id="swiftmailer.transport.buffer.abstract" class="Swift_Transport_StreamBuffer" public="false" abstract="true">
      <argument type="service" id="swiftmailer.transport.replacementfactory"/>
    </service>
    <service id="swiftmailer.transport.authhandler.abstract" class="Swift_Transport_Esmtp_AuthHandler" public="false" abstract="true">
      <argument type="collection">
        <argument type="service" id="1_4313fef45b8de9c9352c915468ecda8045afb1cf34ab18361a30e8fbf337f3e5"/>
        <argument type="service" id="2_4313fef45b8de9c9352c915468ecda8045afb1cf34ab18361a30e8fbf337f3e5"/>
        <argument type="service" id="3_4313fef45b8de9c9352c915468ecda8045afb1cf34ab18361a30e8fbf337f3e5"/>
      </argument>
    </service>
    <service id="swiftmailer.transport.eventdispatcher.abstract" class="Swift_Events_SimpleEventDispatcher" public="false" abstract="true"/>
    <service id="swiftmailer.transport.replacementfactory" class="Swift_StreamFilters_StringReplacementFilterFactory" public="false"/>
    <service id="swiftmailer.plugin.redirecting.abstract" class="Swift_Plugins_RedirectingPlugin" public="false" abstract="true"/>
    <service id="swiftmailer.plugin.antiflood.abstract" class="Swift_Plugins_AntiFloodPlugin" public="false" abstract="true"/>
    <service id="swiftmailer.plugin.impersonate.abstract" class="Swift_Plugins_ImpersonatePlugin" public="false" abstract="true"/>
    <service id="swiftmailer.plugin.messagelogger.abstract" class="Swift_Plugins_MessageLogger" abstract="true"/>
    <service id="swiftmailer.transport.smtp.abstract" class="Swift_Transport_EsmtpTransport" public="false" abstract="true"/>
    <service id="swiftmailer.transport.spool.abstract" class="Swift_Transport_SpoolTransport" public="false" abstract="true"/>
    <service id="swiftmailer.spool.file.abstract" class="Swift_FileSpool" public="false" abstract="true">
      <argument>D:\wamp64\www\SiteSymfony\SonataBackOffice\app/../data/swiftmailer/spool</argument>
    </service>
    <service id="swiftmailer.spool.memory.abstract" class="Swift_MemorySpool" public="false" abstract="true"/>
    <service id="swiftmailer.email_sender.listener" class="Symfony\Bundle\SwiftmailerBundle\EventListener\EmailSenderListener">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="service_container"/>
      <argument type="service" id="monolog.logger" on-invalid="null"/>
    </service>
    <service id="swiftmailer.data_collector" class="Symfony\Bundle\SwiftmailerBundle\DataCollector\MessageDataCollector" public="false">
      <tag name="data_collector" template="@Swiftmailer/Collector/swiftmailer.html.twig" id="swiftmailer" priority="245"/>
      <argument type="service" id="service_container"/>
    </service>
    <service id="swiftmailer.mailer.default.transport.eventdispatcher" class="Swift_Events_SimpleEventDispatcher" public="false"/>
    <service id="swiftmailer.mailer.default.transport.authhandler" class="Swift_Transport_Esmtp_AuthHandler" public="false">
      <argument type="collection">
        <argument type="service" id="1_4313fef45b8de9c9352c915468ecda8045afb1cf34ab18361a30e8fbf337f3e5"/>
        <argument type="service" id="2_4313fef45b8de9c9352c915468ecda8045afb1cf34ab18361a30e8fbf337f3e5"/>
        <argument type="service" id="3_4313fef45b8de9c9352c915468ecda8045afb1cf34ab18361a30e8fbf337f3e5"/>
      </argument>
      <call method="setUsername">
        <argument>assou.mohcine@gmail.com</argument>
      </call>
      <call method="setPassword">
        <argument>fslt ypzg qscx hzfy</argument>
      </call>
      <call method="setAuthMode">
        <argument>login</argument>
      </call>
    </service>
    <service id="swiftmailer.mailer.default.transport.buffer" class="Swift_Transport_StreamBuffer" public="false">
      <argument type="service" id="swiftmailer.transport.replacementfactory"/>
    </service>
    <service id="swiftmailer.transport.configurator.default" class="Symfony\Bundle\SwiftmailerBundle\DependencyInjection\SmtpTransportConfigurator" public="false">
      <argument>null</argument>
      <argument type="service" id="router.request_context" on-invalid="null"/>
    </service>
    <service id="swiftmailer.mailer.default.transport.smtp" class="Swift_Transport_EsmtpTransport" public="false">
      <argument type="service" id="swiftmailer.mailer.default.transport.buffer"/>
      <argument type="collection">
        <argument type="service" id="swiftmailer.mailer.default.transport.authhandler"/>
      </argument>
      <argument type="service" id="swiftmailer.mailer.default.transport.eventdispatcher"/>
      <call method="setHost">
        <argument>smtp.gmail.com</argument>
      </call>
      <call method="setPort">
        <argument>465</argument>
      </call>
      <call method="setEncryption">
        <argument>ssl</argument>
      </call>
      <call method="setTimeout">
        <argument>30</argument>
      </call>
      <call method="setSourceIp">
        <argument>null</argument>
      </call>
      <configurator service="swiftmailer.transport.configurator.default" method="configure"/>
    </service>
    <service id="swiftmailer.mailer.default" class="Swift_Mailer">
      <argument type="service" id="swiftmailer.mailer.default.transport.spool"/>
    </service>
    <service id="swiftmailer.mailer.default.spool.memory" class="Swift_MemorySpool" public="false"/>
    <service id="swiftmailer.mailer.default.transport.spool" class="Swift_Transport_SpoolTransport" public="false">
      <argument type="service" id="swiftmailer.mailer.default.transport.eventdispatcher"/>
      <argument type="service" id="swiftmailer.mailer.default.spool.memory"/>
      <call method="registerPlugin">
        <argument type="service" id="swiftmailer.mailer.default.plugin.messagelogger"/>
      </call>
    </service>
    <service id="swiftmailer.mailer.default.plugin.messagelogger" class="Swift_Plugins_MessageLogger">
      <tag name="swiftmailer.default.plugin"/>
    </service>
    <service id="doctrine_cache.abstract.apc" class="Doctrine\Common\Cache\ApcCache" abstract="true"/>
    <service id="doctrine_cache.abstract.apcu" class="Doctrine\Common\Cache\ApcuCache" abstract="true"/>
    <service id="doctrine_cache.abstract.array" class="Doctrine\Common\Cache\ArrayCache" abstract="true"/>
    <service id="doctrine_cache.abstract.chain" class="Doctrine\Common\Cache\ChainCache" abstract="true"/>
    <service id="doctrine_cache.abstract.couchbase" class="Doctrine\Common\Cache\CouchbaseCache" abstract="true"/>
    <service id="doctrine_cache.abstract.file_system" class="Doctrine\Common\Cache\FilesystemCache" abstract="true"/>
    <service id="doctrine_cache.abstract.php_file" class="Doctrine\Common\Cache\PhpFileCache" abstract="true"/>
    <service id="doctrine_cache.abstract.memcache" class="Doctrine\Common\Cache\MemcacheCache" abstract="true"/>
    <service id="doctrine_cache.abstract.memcached" class="Doctrine\Common\Cache\MemcachedCache" abstract="true"/>
    <service id="doctrine_cache.abstract.mongodb" class="Doctrine\Common\Cache\MongoDBCache" abstract="true"/>
    <service id="doctrine_cache.abstract.redis" class="Doctrine\Common\Cache\RedisCache" abstract="true"/>
    <service id="doctrine_cache.abstract.predis" class="Doctrine\Common\Cache\PredisCache" abstract="true"/>
    <service id="doctrine_cache.abstract.riak" class="Doctrine\Common\Cache\RiakCache" abstract="true"/>
    <service id="doctrine_cache.abstract.sqlite3" class="Doctrine\Common\Cache\SQLite3Cache" abstract="true"/>
    <service id="doctrine_cache.abstract.void" class="Doctrine\Common\Cache\VoidCache" abstract="true"/>
    <service id="doctrine_cache.abstract.wincache" class="Doctrine\Common\Cache\WinCacheCache" abstract="true"/>
    <service id="doctrine_cache.abstract.xcache" class="Doctrine\Common\Cache\XcacheCache" abstract="true"/>
    <service id="doctrine_cache.abstract.zenddata" class="Doctrine\Common\Cache\ZendDataCache" abstract="true"/>
    <service id="doctrine.dbal.logger.chain" class="Doctrine\DBAL\Logging\LoggerChain" public="false" abstract="true">
      <call method="addLogger">
        <argument type="service" id="doctrine.dbal.logger"/>
      </call>
    </service>
    <service id="doctrine.dbal.logger.profiling" class="Doctrine\DBAL\Logging\DebugStack" public="false" abstract="true"/>
    <service id="doctrine.dbal.logger" class="Symfony\Bridge\Doctrine\Logger\DbalLogger" public="false">
      <tag name="monolog.logger" channel="doctrine"/>
      <argument type="service" id="monolog.logger.doctrine" on-invalid="null"/>
      <argument type="service" id="debug.stopwatch" on-invalid="null"/>
    </service>
    <service id="data_collector.doctrine" class="Doctrine\Bundle\DoctrineBundle\DataCollector\DoctrineDataCollector" public="false">
      <tag name="data_collector" template="@Doctrine/Collector/db.html.twig" id="db" priority="250"/>
      <argument type="service" id="doctrine"/>
      <call method="addLogger">
        <argument>default</argument>
        <argument type="service" id="doctrine.dbal.logger.profiling.default"/>
      </call>
    </service>
    <service id="doctrine.dbal.connection_factory" class="Doctrine\Bundle\DoctrineBundle\ConnectionFactory">
      <argument type="collection"/>
    </service>
    <service id="doctrine.dbal.connection" class="Doctrine\DBAL\Connection" abstract="true">
      <factory service="doctrine.dbal.connection_factory" method="createConnection"/>
    </service>
    <service id="doctrine.dbal.connection.event_manager" class="Symfony\Bridge\Doctrine\ContainerAwareEventManager" public="false" abstract="true">
      <argument type="service" id="service_container"/>
    </service>
    <service id="doctrine.dbal.connection.configuration" class="Doctrine\DBAL\Configuration" public="false" abstract="true"/>
    <service id="doctrine" class="Doctrine\Bundle\DoctrineBundle\Registry">
      <argument type="service" id="service_container"/>
      <argument type="collection">
        <argument key="default">doctrine.dbal.default_connection</argument>
      </argument>
      <argument type="collection">
        <argument key="default">doctrine.orm.default_entity_manager</argument>
      </argument>
      <argument>default</argument>
      <argument>default</argument>
    </service>
    <service id="doctrine.twig.doctrine_extension" class="Doctrine\Bundle\DoctrineBundle\Twig\DoctrineExtension" public="false">
      <tag name="twig.extension"/>
    </service>
    <service id="doctrine.dbal.default_connection.configuration" class="Doctrine\DBAL\Configuration" public="false">
      <call method="setSQLLogger">
        <argument type="service" id="doctrine.dbal.logger.chain.default"/>
      </call>
    </service>
    <service id="doctrine.dbal.logger.profiling.default" class="Doctrine\DBAL\Logging\DebugStack" public="false"/>
    <service id="doctrine.dbal.logger.chain.default" class="Doctrine\DBAL\Logging\LoggerChain" public="false">
      <call method="addLogger">
        <argument type="service" id="doctrine.dbal.logger"/>
      </call>
      <call method="addLogger">
        <argument type="service" id="doctrine.dbal.logger.profiling.default"/>
      </call>
    </service>
    <service id="doctrine.dbal.default_connection.event_manager" class="Symfony\Bridge\Doctrine\ContainerAwareEventManager" public="false">
      <argument type="service" id="service_container"/>
      <call method="addEventSubscriber">
        <argument type="service" id="fos_user.user_listener"/>
      </call>
      <call method="addEventSubscriber">
        <argument type="service" id="sonata.easy_extends.doctrine.mapper"/>
      </call>
      <call method="addEventListener">
        <argument type="collection">
          <argument>loadClassMetadata</argument>
        </argument>
        <argument type="service" id="doctrine.orm.default_listeners.attach_entity_listeners"/>
      </call>
    </service>
    <service id="doctrine.dbal.default_connection" class="Doctrine\DBAL\Connection">
      <argument type="collection">
        <argument key="driver">pdo_mysql</argument>
        <argument key="host">127.0.0.1</argument>
        <argument key="port">null</argument>
        <argument key="dbname">fosuser</argument>
        <argument key="user">root</argument>
        <argument key="password">null</argument>
        <argument key="charset">UTF8</argument>
        <argument key="driverOptions" type="collection"/>
        <argument key="defaultTableOptions" type="collection"/>
      </argument>
      <argument type="service" id="doctrine.dbal.default_connection.configuration"/>
      <argument type="service" id="doctrine.dbal.default_connection.event_manager"/>
      <argument type="collection"/>
      <factory service="doctrine.dbal.connection_factory" method="createConnection"/>
    </service>
    <service id="doctrine.orm.proxy_cache_warmer" class="Symfony\Bridge\Doctrine\CacheWarmer\ProxyCacheWarmer" public="false">
      <tag name="kernel.cache_warmer"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="form.type_guesser.doctrine" class="Symfony\Bridge\Doctrine\Form\DoctrineOrmTypeGuesser">
      <tag name="form.type_guesser"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="form.type.entity" class="Symfony\Bridge\Doctrine\Form\Type\EntityType">
      <tag name="form.type" alias="entity"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="doctrine.orm.configuration" class="Doctrine\ORM\Configuration" public="false" abstract="true"/>
    <service id="doctrine.orm.entity_manager.abstract" class="Doctrine\ORM\EntityManager" lazy="true" abstract="true">
      <factory class="Doctrine\ORM\EntityManager" method="create"/>
    </service>
    <service id="doctrine.orm.manager_configurator.abstract" class="Doctrine\Bundle\DoctrineBundle\ManagerConfigurator" abstract="true">
      <argument type="collection"/>
      <argument type="collection"/>
    </service>
    <service id="doctrine.orm.validator.unique" class="Symfony\Bridge\Doctrine\Validator\Constraints\UniqueEntityValidator">
      <tag name="validator.constraint_validator" alias="doctrine.orm.validator.unique"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="doctrine.orm.validator_initializer" class="Symfony\Bridge\Doctrine\Validator\DoctrineInitializer">
      <tag name="validator.initializer"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="doctrine.orm.security.user.provider" class="Symfony\Bridge\Doctrine\Security\User\EntityUserProvider" public="false" abstract="true">
      <argument type="service" id="doctrine"/>
    </service>
    <service id="doctrine.orm.listeners.resolve_target_entity" class="Doctrine\ORM\Tools\ResolveTargetEntityListener" public="false"/>
    <service id="doctrine.orm.naming_strategy.default" class="Doctrine\ORM\Mapping\DefaultNamingStrategy" public="false"/>
    <service id="doctrine.orm.naming_strategy.underscore" class="Doctrine\ORM\Mapping\UnderscoreNamingStrategy" public="false"/>
    <service id="doctrine.orm.quote_strategy.default" class="Doctrine\ORM\Mapping\DefaultQuoteStrategy" public="false"/>
    <service id="doctrine.orm.quote_strategy.ansi" class="Doctrine\ORM\Mapping\AnsiQuoteStrategy" public="false"/>
    <service id="doctrine.orm.default_configuration" class="Doctrine\ORM\Configuration" public="false">
      <call method="setEntityNamespaces">
        <argument type="collection">
          <argument key="AppBundle">AppBundle\Entity</argument>
        </argument>
      </call>
      <call method="setMetadataCacheImpl">
        <argument type="service" id="doctrine_cache.providers.doctrine.orm.default_metadata_cache"/>
      </call>
      <call method="setQueryCacheImpl">
        <argument type="service" id="doctrine_cache.providers.doctrine.orm.default_query_cache"/>
      </call>
      <call method="setResultCacheImpl">
        <argument type="service" id="doctrine_cache.providers.doctrine.orm.default_result_cache"/>
      </call>
      <call method="setMetadataDriverImpl">
        <argument type="service" id="doctrine.orm.default_metadata_driver"/>
      </call>
      <call method="setProxyDir">
        <argument>D:\wamp64\www\SiteSymfony\SonataBackOffice\var\cache\dev/doctrine/orm/Proxies</argument>
      </call>
      <call method="setProxyNamespace">
        <argument>Proxies</argument>
      </call>
      <call method="setAutoGenerateProxyClasses">
        <argument>true</argument>
      </call>
      <call method="setClassMetadataFactoryName">
        <argument>Doctrine\ORM\Mapping\ClassMetadataFactory</argument>
      </call>
      <call method="setDefaultRepositoryClassName">
        <argument>Doctrine\ORM\EntityRepository</argument>
      </call>
      <call method="setNamingStrategy">
        <argument type="service" id="doctrine.orm.naming_strategy.underscore"/>
      </call>
      <call method="setQuoteStrategy">
        <argument type="service" id="doctrine.orm.quote_strategy.default"/>
      </call>
      <call method="setEntityListenerResolver">
        <argument type="service" id="doctrine.orm.default_entity_listener_resolver"/>
      </call>
    </service>
    <service id="doctrine.orm.default_annotation_metadata_driver" class="Doctrine\ORM\Mapping\Driver\AnnotationDriver" public="false">
      <argument type="service" id="annotations.cached_reader"/>
      <argument type="collection">
        <argument>D:\wamp64\www\SiteSymfony\SonataBackOffice\src\AppBundle\Entity</argument>
      </argument>
    </service>
    <service id="doctrine.orm.default_metadata_driver" class="Doctrine\Common\Persistence\Mapping\Driver\MappingDriverChain" public="false">
      <call method="addDriver">
        <argument type="service" id="doctrine.orm.default_annotation_metadata_driver"/>
        <argument>AppBundle\Entity</argument>
      </call>
      <call method="addDriver">
        <argument type="service">
          <service class="Doctrine\ORM\Mapping\Driver\XmlDriver">
            <argument type="service">
              <service class="Doctrine\Common\Persistence\Mapping\Driver\SymfonyFileLocator">
                <argument type="collection">
                  <argument key="D:\wamp64\www\SiteSymfony\SonataBackOffice\vendor\friendsofsymfony\user-bundle\Resources\config\doctrine-mapping">FOS\UserBundle\Model</argument>
                </argument>
                <argument>.orm.xml</argument>
              </service>
            </argument>
          </service>
        </argument>
        <argument>FOS\UserBundle\Model</argument>
      </call>
    </service>
    <service id="doctrine_cache.providers.doctrine.orm.default_metadata_cache" class="Doctrine\Common\Cache\ArrayCache">
      <call method="setNamespace">
        <argument>sf2orm_default_15d7b79dd6ebc43f0b7b9652a2cf7b5bb381d6fb0a3e571065e01de6ec605802</argument>
      </call>
    </service>
    <service id="doctrine_cache.providers.doctrine.orm.default_result_cache" class="Doctrine\Common\Cache\ArrayCache">
      <call method="setNamespace">
        <argument>sf2orm_default_15d7b79dd6ebc43f0b7b9652a2cf7b5bb381d6fb0a3e571065e01de6ec605802</argument>
      </call>
    </service>
    <service id="doctrine_cache.providers.doctrine.orm.default_query_cache" class="Doctrine\Common\Cache\ArrayCache">
      <call method="setNamespace">
        <argument>sf2orm_default_15d7b79dd6ebc43f0b7b9652a2cf7b5bb381d6fb0a3e571065e01de6ec605802</argument>
      </call>
    </service>
    <service id="doctrine.orm.default_entity_listener_resolver" class="Doctrine\Bundle\DoctrineBundle\Mapping\ContainerAwareEntityListenerResolver">
      <argument type="service" id="service_container"/>
    </service>
    <service id="doctrine.orm.default_listeners.attach_entity_listeners" class="Doctrine\ORM\Tools\AttachEntityListenersListener">
      <tag name="doctrine.event_listener" event="loadClassMetadata"/>
    </service>
    <service id="doctrine.orm.default_manager_configurator" class="Doctrine\Bundle\DoctrineBundle\ManagerConfigurator">
      <argument type="collection"/>
      <argument type="collection"/>
    </service>
    <service id="doctrine.orm.default_entity_manager" class="Doctrine\ORM\EntityManager" lazy="true">
      <argument type="service" id="doctrine.dbal.default_connection"/>
      <argument type="service" id="doctrine.orm.default_configuration"/>
      <factory class="Doctrine\ORM\EntityManager" method="create"/>
      <configurator service="doctrine.orm.default_manager_configurator" method="configure"/>
    </service>
    <service id="doctrine.orm.default_entity_manager.metadata_factory" class="Doctrine\Common\Persistence\Mapping\ClassMetadataFactory" public="false">
      <factory service="doctrine.orm.default_entity_manager" method="getMetadataFactory"/>
    </service>
    <service id="doctrine.orm.default_entity_manager.property_info_extractor" class="Symfony\Bridge\Doctrine\PropertyInfo\DoctrineExtractor">
      <tag name="property_info.list_extractor" priority="-1001"/>
      <tag name="property_info.type_extractor" priority="-999"/>
      <argument type="service" id="doctrine.orm.default_entity_manager.metadata_factory"/>
    </service>
    <service id="sensio_framework_extra.view.guesser" class="Sensio\Bundle\FrameworkExtraBundle\Templating\TemplateGuesser">
      <argument type="service" id="kernel"/>
    </service>
    <service id="sensio_framework_extra.controller.listener" class="Sensio\Bundle\FrameworkExtraBundle\EventListener\ControllerListener">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="annotations.cached_reader"/>
    </service>
    <service id="sensio_framework_extra.routing.loader.annot_dir" class="Symfony\Component\Routing\Loader\AnnotationDirectoryLoader" public="false">
      <tag name="routing.loader"/>
      <argument type="service" id="file_locator"/>
      <argument type="service" id="sensio_framework_extra.routing.loader.annot_class"/>
    </service>
    <service id="sensio_framework_extra.routing.loader.annot_file" class="Symfony\Component\Routing\Loader\AnnotationFileLoader" public="false">
      <tag name="routing.loader"/>
      <argument type="service" id="file_locator"/>
      <argument type="service" id="sensio_framework_extra.routing.loader.annot_class"/>
    </service>
    <service id="sensio_framework_extra.routing.loader.annot_class" class="Sensio\Bundle\FrameworkExtraBundle\Routing\AnnotatedRouteControllerLoader" public="false">
      <tag name="routing.loader"/>
      <argument type="service" id="annotations.cached_reader"/>
    </service>
    <service id="sensio_framework_extra.converter.listener" class="Sensio\Bundle\FrameworkExtraBundle\EventListener\ParamConverterListener">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="sensio_framework_extra.converter.manager"/>
      <argument>true</argument>
    </service>
    <service id="sensio_framework_extra.converter.manager" class="Sensio\Bundle\FrameworkExtraBundle\Request\ParamConverter\ParamConverterManager">
      <call method="add">
        <argument type="service" id="sensio_framework_extra.converter.doctrine.orm"/>
        <argument>0</argument>
        <argument>doctrine.orm</argument>
      </call>
      <call method="add">
        <argument type="service" id="sensio_framework_extra.converter.datetime"/>
        <argument>0</argument>
        <argument>datetime</argument>
      </call>
    </service>
    <service id="sensio_framework_extra.converter.doctrine.orm" class="Sensio\Bundle\FrameworkExtraBundle\Request\ParamConverter\DoctrineParamConverter">
      <tag name="request.param_converter" converter="doctrine.orm"/>
      <argument type="service" id="doctrine" on-invalid="ignore"/>
    </service>
    <service id="sensio_framework_extra.converter.datetime" class="Sensio\Bundle\FrameworkExtraBundle\Request\ParamConverter\DateTimeParamConverter">
      <tag name="request.param_converter" converter="datetime"/>
    </service>
    <service id="sensio_framework_extra.view.listener" class="Sensio\Bundle\FrameworkExtraBundle\EventListener\TemplateListener">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="service_container"/>
    </service>
    <service id="sensio_framework_extra.cache.listener" class="Sensio\Bundle\FrameworkExtraBundle\EventListener\HttpCacheListener">
      <tag name="kernel.event_subscriber"/>
    </service>
    <service id="sensio_framework_extra.security.listener" class="Sensio\Bundle\FrameworkExtraBundle\EventListener\SecurityListener">
      <tag name="kernel.event_subscriber"/>
      <argument>null</argument>
      <argument type="service" id="sensio_framework_extra.security.expression_language.default" on-invalid="null"/>
      <argument type="service" id="security.authentication.trust_resolver" on-invalid="null"/>
      <argument type="service" id="security.role_hierarchy" on-invalid="null"/>
      <argument type="service" id="security.token_storage" on-invalid="null"/>
      <argument type="service" id="security.authorization_checker" on-invalid="null"/>
    </service>
    <service id="sensio_framework_extra.security.expression_language.default" class="Sensio\Bundle\FrameworkExtraBundle\Security\ExpressionLanguage" public="false"/>
    <service id="fos_user.user_manager.default" class="FOS\UserBundle\Doctrine\UserManager" public="false">
      <argument type="service" id="fos_user.util.password_updater"/>
      <argument type="service" id="fos_user.util.canonical_fields_updater"/>
      <argument type="service" id="fos_user.object_manager"/>
      <argument>AppBundle\Entity\User</argument>
    </service>
    <service id="fos_user.object_manager" class="Doctrine\Common\Persistence\ObjectManager" public="false">
      <argument>null</argument>
      <factory service="doctrine" method="getManager"/>
    </service>
    <service id="fos_user.user_listener" class="FOS\UserBundle\Doctrine\UserListener" public="false">
      <tag name="doctrine.event_subscriber"/>
      <argument type="service" id="fos_user.util.password_updater"/>
      <argument type="service" id="fos_user.util.canonical_fields_updater"/>
    </service>
    <service id="fos_user.validator.initializer" class="FOS\UserBundle\Validator\Initializer" public="false">
      <tag name="validator.initializer"/>
      <argument type="service" id="fos_user.util.canonical_fields_updater"/>
    </service>
    <service id="fos_user.security.interactive_login_listener" class="FOS\UserBundle\EventListener\LastLoginListener">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="fos_user.user_manager.default"/>
    </service>
    <service id="fos_user.security.login_manager" class="FOS\UserBundle\Security\LoginManager">
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="security.user_checker"/>
      <argument type="service" id="security.authentication.session_strategy"/>
      <argument type="service" id="request_stack"/>
      <argument>null</argument>
    </service>
    <service id="fos_user.user_provider.username" class="FOS\UserBundle\Security\UserProvider" public="false">
      <argument type="service" id="fos_user.user_manager.default"/>
    </service>
    <service id="fos_user.user_provider.username_email" class="FOS\UserBundle\Security\EmailUserProvider" public="false">
      <argument type="service" id="fos_user.user_manager.default"/>
    </service>
    <service id="fos_user.util.canonicalizer.default" class="FOS\UserBundle\Util\Canonicalizer" public="false"/>
    <service id="fos_user.util.user_manipulator" class="FOS\UserBundle\Util\UserManipulator">
      <argument type="service" id="fos_user.user_manager.default"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="request_stack"/>
    </service>
    <service id="fos_user.util.token_generator.default" class="FOS\UserBundle\Util\TokenGenerator" public="false"/>
    <service id="fos_user.util.password_updater" class="FOS\UserBundle\Util\PasswordUpdater" public="false">
      <argument type="service" id="security.encoder_factory.generic"/>
    </service>
    <service id="fos_user.util.canonical_fields_updater" class="FOS\UserBundle\Util\CanonicalFieldsUpdater" public="false">
      <argument type="service" id="fos_user.util.canonicalizer.default"/>
      <argument type="service" id="fos_user.util.canonicalizer.default"/>
    </service>
    <service id="fos_user.mailer.default" class="FOS\UserBundle\Mailer\Mailer" public="false">
      <argument type="service" id="swiftmailer.mailer.default"/>
      <argument type="service" id="router.default"/>
      <argument type="service" id="templating.engine.twig"/>
      <argument type="collection">
        <argument key="confirmation.template">FOSUserBundle:Registration:email.txt.twig</argument>
        <argument key="resetting.template">@FOSUser/Resetting/email.txt.twig</argument>
        <argument key="from_email" type="collection">
          <argument key="confirmation" type="collection">
            <argument key="assou.mohcine@gmail.com">assou.mohcine@gmail.com</argument>
          </argument>
          <argument key="resetting" type="collection">
            <argument key="assou.mohcine@gmail.com">assou.mohcine@gmail.com</argument>
          </argument>
        </argument>
      </argument>
    </service>
    <service id="fos_user.mailer.twig_swift" class="FOS\UserBundle\Mailer\TwigSwiftMailer" public="false">
      <argument type="service" id="swiftmailer.mailer.default"/>
      <argument type="service" id="router.default"/>
      <argument type="service" id="twig"/>
      <argument type="collection">
        <argument key="template" type="collection">
          <argument key="confirmation">FOSUserBundle:Registration:email.txt.twig</argument>
          <argument key="resetting">@FOSUser/Resetting/email.txt.twig</argument>
        </argument>
        <argument key="from_email" type="collection">
          <argument key="confirmation" type="collection">
            <argument key="assou.mohcine@gmail.com">assou.mohcine@gmail.com</argument>
          </argument>
          <argument key="resetting" type="collection">
            <argument key="assou.mohcine@gmail.com">assou.mohcine@gmail.com</argument>
          </argument>
        </argument>
      </argument>
    </service>
    <service id="fos_user.mailer.noop" class="FOS\UserBundle\Mailer\NoopMailer" public="false"/>
    <service id="fos_user.listener.authentication" class="FOS\UserBundle\EventListener\AuthenticationListener">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="fos_user.security.login_manager"/>
      <argument>main</argument>
    </service>
    <service id="fos_user.listener.flash" class="FOS\UserBundle\EventListener\FlashListener">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="session"/>
      <argument type="service" id="translator.data_collector"/>
    </service>
    <service id="fos_user.username_form_type" class="FOS\UserBundle\Form\Type\UsernameFormType">
      <tag name="form.type" alias="fos_user_username"/>
      <argument type="service" id="fos_user.user_to_username_transformer"/>
    </service>
    <service id="fos_user.user_to_username_transformer" class="FOS\UserBundle\Form\DataTransformer\UserToUsernameTransformer" public="false">
      <argument type="service" id="fos_user.user_manager.default"/>
    </service>
    <service id="fos_user.profile.form.factory" class="FOS\UserBundle\Form\Factory\FormFactory">
      <argument type="service" id="form.factory"/>
      <argument>fos_user_profile_form</argument>
      <argument>FOS\UserBundle\Form\Type\ProfileFormType</argument>
      <argument type="collection">
        <argument>Profile</argument>
        <argument>Default</argument>
      </argument>
    </service>
    <service id="fos_user.profile.form.type" class="FOS\UserBundle\Form\Type\ProfileFormType">
      <tag name="form.type" alias="fos_user_profile"/>
      <argument>AppBundle\Entity\User</argument>
    </service>
    <service id="fos_user.registration.form.factory" class="FOS\UserBundle\Form\Factory\FormFactory">
      <argument type="service" id="form.factory"/>
      <argument>fos_user_registration_form</argument>
      <argument>app_user_registration</argument>
      <argument type="collection">
        <argument>Registration</argument>
        <argument>Default</argument>
      </argument>
    </service>
    <service id="fos_user.registration.form.type" class="FOS\UserBundle\Form\Type\RegistrationFormType">
      <tag name="form.type" alias="fos_user_registration"/>
      <argument>AppBundle\Entity\User</argument>
    </service>
    <service id="fos_user.listener.email_confirmation" class="FOS\UserBundle\EventListener\EmailConfirmationListener">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="fos_user.mailer.default"/>
      <argument type="service" id="fos_user.util.token_generator.default"/>
      <argument type="service" id="router.default"/>
      <argument type="service" id="session"/>
    </service>
    <service id="fos_user.change_password.form.factory" class="FOS\UserBundle\Form\Factory\FormFactory">
      <argument type="service" id="form.factory"/>
      <argument>fos_user_change_password_form</argument>
      <argument>fos_user_change_password</argument>
      <argument type="collection">
        <argument>ChangePassword</argument>
        <argument>Default</argument>
      </argument>
    </service>
    <service id="fos_user.change_password.form.type" class="FOS\UserBundle\Form\Type\ChangePasswordFormType">
      <tag name="form.type" alias="fos_user_change_password"/>
      <argument>AppBundle\Entity\User</argument>
    </service>
    <service id="fos_user.resetting.form.factory" class="FOS\UserBundle\Form\Factory\FormFactory">
      <argument type="service" id="form.factory"/>
      <argument>fos_user_resetting_form</argument>
      <argument>FOS\UserBundle\Form\Type\ResettingFormType</argument>
      <argument type="collection">
        <argument>ResetPassword</argument>
        <argument>Default</argument>
      </argument>
    </service>
    <service id="fos_user.resetting.form.type" class="FOS\UserBundle\Form\Type\ResettingFormType">
      <tag name="form.type" alias="fos_user_resetting"/>
      <argument>AppBundle\Entity\User</argument>
    </service>
    <service id="fos_user.listener.resetting" class="FOS\UserBundle\EventListener\ResettingListener">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="router.default"/>
      <argument>86400</argument>
    </service>
    <service id="fos_user.group.form.factory" class="FOS\UserBundle\Form\Factory\FormFactory">
      <argument type="service" id="form.factory"/>
      <argument>fos_user_group_form</argument>
      <argument>app_group_registration</argument>
      <argument type="collection">
        <argument>Registration</argument>
        <argument>Default</argument>
      </argument>
    </service>
    <service id="fos_user.group.form.type" class="FOS\UserBundle\Form\Type\GroupFormType">
      <tag name="form.type" alias="fos_user_group"/>
      <argument>AppBundle\Entity\Group</argument>
    </service>
    <service id="fos_user.group_manager.default" class="FOS\UserBundle\Doctrine\GroupManager" public="false">
      <argument type="service" id="fos_user.object_manager"/>
      <argument>AppBundle\Entity\Group</argument>
    </service>
    <service id="sonata.core.date.moment_format_converter" class="Sonata\CoreBundle\Date\MomentFormatConverter"/>
    <service id="sonata.core.flashmessage.manager" class="Sonata\CoreBundle\FlashMessage\FlashManager">
      <tag name="sonata.status.renderer"/>
      <argument type="service" id="session"/>
      <argument type="service" id="translator.data_collector"/>
      <argument type="collection">
        <argument key="success" type="collection">
          <argument key="success" type="collection">
            <argument key="domain">SonataCoreBundle</argument>
          </argument>
          <argument key="sonata_flash_success" type="collection">
            <argument key="domain">SonataAdminBundle</argument>
          </argument>
          <argument key="sonata_user_success" type="collection">
            <argument key="domain">SonataUserBundle</argument>
          </argument>
          <argument key="fos_user_success" type="collection">
            <argument key="domain">FOSUserBundle</argument>
          </argument>
        </argument>
        <argument key="warning" type="collection">
          <argument key="warning" type="collection">
            <argument key="domain">SonataCoreBundle</argument>
          </argument>
          <argument key="sonata_flash_info" type="collection">
            <argument key="domain">SonataAdminBundle</argument>
          </argument>
        </argument>
        <argument key="danger" type="collection">
          <argument key="error" type="collection">
            <argument key="domain">SonataCoreBundle</argument>
          </argument>
          <argument key="sonata_flash_error" type="collection">
            <argument key="domain">SonataAdminBundle</argument>
          </argument>
          <argument key="sonata_user_error" type="collection">
            <argument key="domain">SonataUserBundle</argument>
          </argument>
        </argument>
      </argument>
      <argument type="collection">
        <argument key="success">success</argument>
        <argument key="warning">warning</argument>
        <argument key="danger">danger</argument>
      </argument>
    </service>
    <service id="sonata.core.flashmessage.twig.extension" class="Sonata\CoreBundle\Twig\Extension\FlashMessageExtension">
      <tag name="twig.extension"/>
      <argument type="service" id="sonata.core.flashmessage.manager"/>
    </service>
    <service id="sonata.core.form.type.array" class="Sonata\CoreBundle\Form\Type\ImmutableArrayType">
      <tag name="form.type" alias="sonata_type_immutable_array"/>
    </service>
    <service id="sonata.core.form.type.boolean" class="Sonata\CoreBundle\Form\Type\BooleanType">
      <tag name="form.type" alias="sonata_type_boolean"/>
    </service>
    <service id="sonata.core.form.type.collection" class="Sonata\CoreBundle\Form\Type\CollectionType">
      <tag name="form.type" alias="sonata_type_collection"/>
    </service>
    <service id="sonata.core.form.type.translatable_choice" class="Sonata\CoreBundle\Form\Type\TranslatableChoiceType">
      <tag name="form.type" alias="sonata_type_translatable_choice"/>
      <argument type="service" id="translator.data_collector"/>
    </service>
    <service id="sonata.core.form.type.date_range" class="Sonata\CoreBundle\Form\Type\DateRangeType">
      <tag name="form.type" alias="sonata_type_date_range"/>
      <argument type="service" id="translator.data_collector"/>
    </service>
    <service id="sonata.core.form.type.datetime_range" class="Sonata\CoreBundle\Form\Type\DateTimeRangeType">
      <tag name="form.type" alias="sonata_type_datetime_range"/>
      <argument type="service" id="translator.data_collector"/>
    </service>
    <service id="sonata.core.form.type.date_picker" class="Sonata\CoreBundle\Form\Type\DatePickerType">
      <tag name="form.type" alias="sonata_type_date_picker"/>
      <argument type="service" id="sonata.core.date.moment_format_converter"/>
      <argument type="service" id="translator.data_collector"/>
    </service>
    <service id="sonata.core.form.type.datetime_picker" class="Sonata\CoreBundle\Form\Type\DateTimePickerType">
      <tag name="form.type" alias="sonata_type_datetime_picker"/>
      <argument type="service" id="sonata.core.date.moment_format_converter"/>
      <argument type="service" id="translator.data_collector"/>
    </service>
    <service id="sonata.core.form.type.date_range_picker" class="Sonata\CoreBundle\Form\Type\DateRangePickerType">
      <tag name="form.type" alias="sonata_type_date_range_picker"/>
      <argument type="service" id="translator.data_collector"/>
    </service>
    <service id="sonata.core.form.type.datetime_range_picker" class="Sonata\CoreBundle\Form\Type\DateTimeRangePickerType">
      <tag name="form.type" alias="sonata_type_datetime_range_picker"/>
      <argument type="service" id="translator.data_collector"/>
    </service>
    <service id="sonata.core.form.type.equal" class="Sonata\CoreBundle\Form\Type\EqualType">
      <tag name="form.type" alias="sonata_type_equal"/>
      <argument type="service" id="translator.data_collector"/>
    </service>
    <service id="sonata.core.form.type.color_selector" class="Sonata\CoreBundle\Form\Type\ColorSelectorType">
      <tag name="form.type" alias="sonata_type_color_selector"/>
    </service>
    <service id="sonata.core.validator.inline" class="Sonata\CoreBundle\Validator\InlineValidator">
      <tag name="validator.constraint_validator" alias="sonata.core.validator.inline"/>
      <argument type="service" id="service_container"/>
      <argument type="service" id="validator.validator_factory"/>
    </service>
    <service id="sonata.core.twig.extension.wrapping" class="Sonata\CoreBundle\Twig\Extension\FormTypeExtension">
      <tag name="twig.extension"/>
      <argument>standard</argument>
    </service>
    <service id="sonata.core.twig.extension.text" class="Sonata\CoreBundle\Twig\Extension\DeprecatedTextExtension">
      <tag name="twig.extension"/>
    </service>
    <service id="sonata.core.twig.status_extension" class="Sonata\CoreBundle\Twig\Extension\StatusExtension">
      <tag name="twig.extension"/>
      <call method="addStatusService">
        <argument type="service" id="sonata.core.flashmessage.manager"/>
      </call>
    </service>
    <service id="sonata.core.twig.template_extension" class="Sonata\CoreBundle\Twig\Extension\TemplateExtension">
      <tag name="twig.extension"/>
      <argument>true</argument>
      <argument type="service" id="translator.data_collector"/>
      <argument type="service" id="sonata.core.model.adapter.chain"/>
    </service>
    <service id="sonata.core.model.adapter.doctrine_orm" class="Sonata\CoreBundle\Model\Adapter\DoctrineORMAdapter" public="false">
      <argument type="service" id="doctrine" on-invalid="ignore"/>
    </service>
    <service id="sonata.core.model.adapter.chain" class="Sonata\CoreBundle\Model\Adapter\AdapterChain">
      <call method="addAdapter">
        <argument type="service" id="sonata.core.model.adapter.doctrine_orm"/>
      </call>
    </service>
    <service id="sonata.core.slugify.cocur" class="Cocur\Slugify\Slugify">
      <deprecated>The "%service_id%" service is deprecated. You should stop using it, as it will soon be removed.</deprecated>
    </service>
    <service id="sonata.core.slugify.native" class="Sonata\CoreBundle\Component\NativeSlugify">
      <deprecated>The "%service_id%" service is deprecated. You should stop using it, as it will soon be removed.</deprecated>
    </service>
    <service id="sonata.block.service.container" class="Sonata\BlockBundle\Block\Service\ContainerBlockService">
      <tag name="sonata.block"/>
      <argument>sonata.block.container</argument>
      <argument type="service" id="templating.engine.twig"/>
    </service>
    <service id="sonata.block.service.empty" class="Sonata\BlockBundle\Block\Service\EmptyBlockService">
      <tag name="sonata.block"/>
      <argument>sonata.block.empty</argument>
      <argument type="service" id="templating.engine.twig"/>
    </service>
    <service id="sonata.block.service.text" class="Sonata\BlockBundle\Block\Service\TextBlockService">
      <tag name="sonata.block"/>
      <argument>sonata.block.text</argument>
      <argument type="service" id="templating.engine.twig"/>
    </service>
    <service id="sonata.block.service.rss" class="Sonata\BlockBundle\Block\Service\RssBlockService">
      <tag name="sonata.block"/>
      <argument>sonata.block.rss</argument>
      <argument type="service" id="templating.engine.twig"/>
    </service>
    <service id="sonata.block.service.menu" class="Sonata\BlockBundle\Block\Service\MenuBlockService">
      <tag name="sonata.block"/>
      <argument>sonata.block.menu</argument>
      <argument type="service" id="templating.engine.twig"/>
      <argument type="service" id="knp_menu.menu_provider.chain"/>
      <argument type="service" id="sonata.block.menu.registry"/>
    </service>
    <service id="sonata.block.service.template" class="Sonata\BlockBundle\Block\Service\TemplateBlockService">
      <tag name="sonata.block"/>
      <argument>sonata.block.template</argument>
      <argument type="service" id="templating.engine.twig"/>
    </service>
    <service id="sonata.block.form.type.block" class="Sonata\BlockBundle\Form\Type\ServiceListType">
      <tag name="form.type" alias="sonata_block_service_choice"/>
      <argument type="service" id="sonata.block.manager"/>
    </service>
    <service id="sonata.block.form.type.container_template" class="Sonata\BlockBundle\Form\Type\ContainerTemplateType">
      <tag name="form.type" alias="sonata_type_container_template_choice"/>
      <argument type="collection">
        <argument key="SonataBlockBundle:Block:block_container.html.twig">SonataBlockBundle default template</argument>
      </argument>
    </service>
    <service id="sonata.block.manager" class="Sonata\BlockBundle\Block\BlockServiceManager" public="false">
      <argument type="service" id="service_container"/>
      <argument>true</argument>
      <argument type="service" id="monolog.logger" on-invalid="ignore"/>
      <call method="add">
        <argument>sonata.block.service.container</argument>
        <argument>sonata.block.service.container</argument>
        <argument type="collection"/>
      </call>
      <call method="add">
        <argument>sonata.block.service.empty</argument>
        <argument>sonata.block.service.empty</argument>
        <argument type="collection"/>
      </call>
      <call method="add">
        <argument>sonata.block.service.text</argument>
        <argument>sonata.block.service.text</argument>
        <argument type="collection">
          <argument>cms</argument>
        </argument>
      </call>
      <call method="add">
        <argument>sonata.block.service.rss</argument>
        <argument>sonata.block.service.rss</argument>
        <argument type="collection">
          <argument>cms</argument>
        </argument>
      </call>
      <call method="add">
        <argument>sonata.block.service.menu</argument>
        <argument>sonata.block.service.menu</argument>
        <argument type="collection"/>
      </call>
      <call method="add">
        <argument>sonata.block.service.template</argument>
        <argument>sonata.block.service.template</argument>
        <argument type="collection"/>
      </call>
      <call method="add">
        <argument>sonata.admin.block.admin_list</argument>
        <argument>sonata.admin.block.admin_list</argument>
        <argument type="collection">
          <argument>cms</argument>
        </argument>
      </call>
      <call method="add">
        <argument>sonata.admin.block.search_result</argument>
        <argument>sonata.admin.block.search_result</argument>
        <argument type="collection">
          <argument>admin</argument>
        </argument>
      </call>
      <call method="add">
        <argument>sonata.admin.block.stats</argument>
        <argument>sonata.admin.block.stats</argument>
        <argument type="collection">
          <argument>admin</argument>
        </argument>
      </call>
    </service>
    <service id="sonata.block.menu.registry" class="Sonata\BlockBundle\Menu\MenuRegistry">
      <argument type="collection"/>
    </service>
    <service id="sonata.block.context_manager.default" class="Sonata\BlockBundle\Block\BlockContextManager">
      <argument type="service" id="sonata.block.loader.chain"/>
      <argument type="service" id="sonata.block.manager"/>
      <argument type="collection">
        <argument key="by_type" type="collection">
          <argument key="sonata.admin.block.admin_list">sonata.cache.noop</argument>
          <argument key="sonata.admin.block.stats">sonata.cache.noop</argument>
          <argument key="sonata.admin.block.search_result">sonata.cache.noop</argument>
          <argument key="sonata.block.service.text">sonata.cache.noop</argument>
          <argument key="sonata.block.service.action">sonata.cache.noop</argument>
          <argument key="sonata.block.service.rss">sonata.cache.noop</argument>
        </argument>
      </argument>
      <argument type="service" id="monolog.logger" on-invalid="ignore"/>
    </service>
    <service id="sonata.block.renderer.default" class="Sonata\BlockBundle\Block\BlockRenderer">
      <argument type="service" id="sonata.block.manager"/>
      <argument type="service" id="sonata.block.exception.strategy.manager"/>
      <argument type="service" id="monolog.logger" on-invalid="ignore"/>
      <argument>true</argument>
    </service>
    <service id="sonata.block.twig.extension" class="Sonata\BlockBundle\Twig\Extension\BlockExtension" public="false">
      <tag name="twig.extension"/>
      <argument type="service" id="sonata.block.templating.helper"/>
    </service>
    <service id="sonata.block.templating.helper" class="Sonata\BlockBundle\Templating\Helper\BlockHelper">
      <tag name="templating.helper" alias="sonata_block"/>
      <argument type="service" id="sonata.block.manager"/>
      <argument type="collection">
        <argument key="by_type" type="collection">
          <argument key="sonata.admin.block.admin_list">sonata.cache.noop</argument>
          <argument key="sonata.admin.block.stats">sonata.cache.noop</argument>
          <argument key="sonata.admin.block.search_result">sonata.cache.noop</argument>
          <argument key="sonata.block.service.text">sonata.cache.noop</argument>
          <argument key="sonata.block.service.action">sonata.cache.noop</argument>
          <argument key="sonata.block.service.rss">sonata.cache.noop</argument>
        </argument>
      </argument>
      <argument type="service" id="sonata.block.renderer.default"/>
      <argument type="service" id="sonata.block.context_manager.default"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument>null</argument>
      <argument type="service" id="sonata.block.cache.handler.default" on-invalid="ignore"/>
      <argument type="service" id="debug.stopwatch" on-invalid="ignore"/>
    </service>
    <service id="sonata.block.loader.chain" class="Sonata\BlockBundle\Block\BlockLoaderChain">
      <argument type="collection">
        <argument type="service" id="sonata.block.loader.service"/>
      </argument>
    </service>
    <service id="sonata.block.loader.service" class="Sonata\BlockBundle\Block\Loader\ServiceLoader">
      <tag name="sonata.block.loader"/>
      <argument type="collection">
        <argument>sonata.admin.block.admin_list</argument>
        <argument>sonata.admin.block.stats</argument>
        <argument>sonata.admin.block.search_result</argument>
        <argument>sonata.block.service.text</argument>
        <argument>sonata.block.service.action</argument>
        <argument>sonata.block.service.rss</argument>
      </argument>
    </service>
    <service id="sonata.block.twig.global" class="Sonata\BlockBundle\Twig\GlobalVariables">
      <argument type="collection">
        <argument key="block_base">SonataBlockBundle:Block:block_base.html.twig</argument>
        <argument key="block_container">SonataBlockBundle:Block:block_container.html.twig</argument>
      </argument>
    </service>
    <service id="sonata.block.cache.handler.default" class="Sonata\BlockBundle\Cache\HttpCacheHandler">
      <tag name="kernel.event_listener" event="kernel.response" method="onKernelResponse"/>
    </service>
    <service id="sonata.block.cache.handler.noop" class="Sonata\BlockBundle\Cache\NoopHttpCacheHandler"/>
    <service id="sonata.block.exception.strategy.manager" class="Sonata\BlockBundle\Exception\Strategy\StrategyManager">
      <argument type="service" id="service_container"/>
      <argument type="collection">
        <argument key="debug_only">sonata.block.exception.filter.debug_only</argument>
        <argument key="ignore_block_exception">sonata.block.exception.filter.ignore_block_exception</argument>
        <argument key="keep_all">sonata.block.exception.filter.keep_all</argument>
        <argument key="keep_none">sonata.block.exception.filter.keep_none</argument>
      </argument>
      <argument type="collection">
        <argument key="inline">sonata.block.exception.renderer.inline</argument>
        <argument key="inline_debug">sonata.block.exception.renderer.inline_debug</argument>
        <argument key="throw">sonata.block.exception.renderer.throw</argument>
      </argument>
      <argument type="collection"/>
      <argument type="collection"/>
      <call method="setDefaultFilter">
        <argument>debug_only</argument>
      </call>
      <call method="setDefaultRenderer">
        <argument>throw</argument>
      </call>
    </service>
    <service id="sonata.block.exception.filter.keep_none" class="Sonata\BlockBundle\Exception\Filter\KeepNoneFilter"/>
    <service id="sonata.block.exception.filter.keep_all" class="Sonata\BlockBundle\Exception\Filter\KeepAllFilter"/>
    <service id="sonata.block.exception.filter.debug_only" class="Sonata\BlockBundle\Exception\Filter\DebugOnlyFilter">
      <argument>true</argument>
    </service>
    <service id="sonata.block.exception.filter.ignore_block_exception" class="Sonata\BlockBundle\Exception\Filter\IgnoreClassFilter">
      <argument>Sonata\BlockBundle\Exception\BlockExceptionInterface</argument>
    </service>
    <service id="sonata.block.exception.renderer.inline" class="Sonata\BlockBundle\Exception\Renderer\InlineRenderer">
      <argument type="service" id="templating.engine.twig"/>
      <argument>SonataBlockBundle:Block:block_exception.html.twig</argument>
    </service>
    <service id="sonata.block.exception.renderer.inline_debug" class="Sonata\BlockBundle\Exception\Renderer\InlineDebugRenderer">
      <argument type="service" id="templating.engine.twig"/>
      <argument>SonataBlockBundle:Block:block_exception_debug.html.twig</argument>
      <argument>true</argument>
      <argument>true</argument>
    </service>
    <service id="sonata.block.exception.renderer.throw" class="Sonata\BlockBundle\Exception\Renderer\MonkeyThrowRenderer"/>
    <service id="sonata.block.data_collector" class="Sonata\BlockBundle\Profiler\DataCollector\BlockDataCollector" public="false">
      <tag name="data_collector" id="block" template="SonataBlockBundle:Profiler:block.html.twig"/>
      <argument type="service" id="sonata.block.templating.helper"/>
      <argument type="collection">
        <argument>sonata.block.service.container</argument>
        <argument>sonata.page.block.container</argument>
        <argument>sonata.dashboard.block.container</argument>
        <argument>cmf.block.container</argument>
        <argument>cmf.block.slideshow</argument>
      </argument>
    </service>
    <service id="knp_menu.factory" class="Knp\Menu\MenuFactory">
      <call method="addExtension">
        <argument type="service" id="knp_menu.factory_extension.routing"/>
        <argument>0</argument>
      </call>
    </service>
    <service id="knp_menu.factory_extension.routing" class="Knp\Menu\Integration\Symfony\RoutingExtension" public="false">
      <tag name="knp_menu.factory_extension"/>
      <argument type="service" id="router.default"/>
    </service>
    <service id="knp_menu.helper" class="Knp\Menu\Twig\Helper" public="false">
      <argument type="service" id="knp_menu.renderer_provider"/>
      <argument type="service" id="knp_menu.menu_provider.chain"/>
      <argument type="service" id="knp_menu.manipulator"/>
      <argument type="service" id="knp_menu.matcher"/>
    </service>
    <service id="knp_menu.matcher" class="Knp\Menu\Matcher\Matcher">
      <call method="addVoter">
        <argument type="service" id="knp_menu.voter.router"/>
      </call>
      <call method="addVoter">
        <argument type="service" id="sonata.admin.menu.matcher.voter.admin"/>
      </call>
      <call method="addVoter">
        <argument type="service" id="sonata.admin.menu.matcher.voter.children"/>
      </call>
      <call method="addVoter">
        <argument type="service" id="sonata.admin.menu.matcher.voter.active"/>
      </call>
    </service>
    <service id="knp_menu.menu_provider.chain" class="Knp\Menu\Provider\ChainProvider" public="false">
      <argument type="collection">
        <argument type="service" id="knp_menu.menu_provider.container_aware"/>
        <argument type="service" id="knp_menu.menu_provider.builder_service"/>
        <argument type="service" id="knp_menu.menu_provider.builder_alias"/>
        <argument type="service" id="sonata.admin.menu.group_provider"/>
      </argument>
    </service>
    <service id="knp_menu.menu_provider.container_aware" class="Knp\Bundle\MenuBundle\Provider\ContainerAwareProvider" public="false">
      <tag name="knp_menu.provider"/>
      <argument type="service" id="service_container"/>
      <argument type="collection">
        <argument key="sonata_admin_sidebar">sonata.admin.sidebar_menu</argument>
      </argument>
    </service>
    <service id="knp_menu.menu_provider.builder_service" class="Knp\Bundle\MenuBundle\Provider\BuilderServiceProvider" public="false">
      <tag name="knp_menu.provider"/>
      <argument type="service" id="service_container"/>
      <argument type="collection"/>
    </service>
    <service id="knp_menu.menu_provider.builder_alias" class="Knp\Bundle\MenuBundle\Provider\BuilderAliasProvider" public="false">
      <tag name="knp_menu.provider"/>
      <argument type="service" id="kernel"/>
      <argument type="service" id="service_container"/>
      <argument type="service" id="knp_menu.factory"/>
    </service>
    <service id="knp_menu.renderer_provider" class="Knp\Bundle\MenuBundle\Renderer\ContainerAwareProvider">
      <argument type="service" id="service_container"/>
      <argument>twig</argument>
      <argument type="collection">
        <argument key="list">knp_menu.renderer.list</argument>
        <argument key="twig">knp_menu.renderer.twig</argument>
      </argument>
    </service>
    <service id="knp_menu.renderer.list" class="Knp\Menu\Renderer\ListRenderer">
      <tag name="knp_menu.renderer" alias="list"/>
      <argument type="service" id="knp_menu.matcher"/>
      <argument type="collection"/>
      <argument>UTF-8</argument>
    </service>
    <service id="knp_menu.listener.voters" class="Knp\Bundle\MenuBundle\EventListener\VoterInitializerListener">
      <tag name="kernel.event_listener" event="kernel.request" method="onKernelRequest"/>
      <call method="addVoter">
        <argument type="service" id="knp_menu.voter.router"/>
      </call>
      <call method="addVoter">
        <argument type="service" id="sonata.admin.menu.matcher.voter.admin"/>
      </call>
    </service>
    <service id="knp_menu.voter.router" class="Knp\Menu\Matcher\Voter\RouteVoter">
      <tag name="knp_menu.voter" request="1"/>
    </service>
    <service id="knp_menu.manipulator" class="Knp\Menu\Util\MenuManipulator" public="false"/>
    <service id="knp_menu.twig.extension" class="Knp\Menu\Twig\MenuExtension" public="false">
      <tag name="twig.extension"/>
      <argument type="service" id="knp_menu.helper"/>
      <argument type="service" id="knp_menu.matcher"/>
      <argument type="service" id="knp_menu.manipulator"/>
    </service>
    <service id="knp_menu.renderer.twig" class="Knp\Menu\Renderer\TwigRenderer">
      <tag name="knp_menu.renderer" alias="twig"/>
      <argument type="service" id="twig"/>
      <argument>KnpMenuBundle::menu.html.twig</argument>
      <argument type="service" id="knp_menu.matcher"/>
      <argument type="collection"/>
    </service>
    <service id="sonata.admin.entity_manager" class="Doctrine\ORM\EntityManager" public="false">
      <argument>null</argument>
      <factory service="doctrine" method="getEntityManager"/>
    </service>
    <service id="sonata.admin.manager.orm" class="Sonata\DoctrineORMAdminBundle\Model\ModelManager">
      <argument type="service" id="doctrine"/>
    </service>
    <service id="sonata.admin.builder.orm_form" class="Sonata\DoctrineORMAdminBundle\Builder\FormContractor">
      <argument type="service" id="form.factory"/>
    </service>
    <service id="sonata.admin.builder.orm_list" class="Sonata\DoctrineORMAdminBundle\Builder\ListBuilder">
      <argument type="service" id="sonata.admin.guesser.orm_list_chain"/>
      <argument type="collection">
        <argument key="array">SonataAdminBundle:CRUD:list_array.html.twig</argument>
        <argument key="boolean">SonataAdminBundle:CRUD:list_boolean.html.twig</argument>
        <argument key="date">SonataAdminBundle:CRUD:list_date.html.twig</argument>
        <argument key="time">SonataAdminBundle:CRUD:list_time.html.twig</argument>
        <argument key="datetime">SonataAdminBundle:CRUD:list_datetime.html.twig</argument>
        <argument key="text">SonataAdminBundle:CRUD:list_string.html.twig</argument>
        <argument key="textarea">SonataAdminBundle:CRUD:list_string.html.twig</argument>
        <argument key="email">SonataAdminBundle:CRUD:list_email.html.twig</argument>
        <argument key="trans">SonataAdminBundle:CRUD:list_trans.html.twig</argument>
        <argument key="string">SonataAdminBundle:CRUD:list_string.html.twig</argument>
        <argument key="smallint">SonataAdminBundle:CRUD:list_string.html.twig</argument>
        <argument key="bigint">SonataAdminBundle:CRUD:list_string.html.twig</argument>
        <argument key="integer">SonataAdminBundle:CRUD:list_string.html.twig</argument>
        <argument key="decimal">SonataAdminBundle:CRUD:list_string.html.twig</argument>
        <argument key="identifier">SonataAdminBundle:CRUD:list_string.html.twig</argument>
        <argument key="currency">SonataAdminBundle:CRUD:list_currency.html.twig</argument>
        <argument key="percent">SonataAdminBundle:CRUD:list_percent.html.twig</argument>
        <argument key="choice">SonataAdminBundle:CRUD:list_choice.html.twig</argument>
        <argument key="url">SonataAdminBundle:CRUD:list_url.html.twig</argument>
        <argument key="html">SonataAdminBundle:CRUD:list_html.html.twig</argument>
      </argument>
    </service>
    <service id="sonata.admin.guesser.orm_list" class="Sonata\DoctrineORMAdminBundle\Guesser\TypeGuesser">
      <tag name="sonata.admin.guesser.orm_list"/>
    </service>
    <service id="sonata.admin.guesser.orm_list_chain" class="Sonata\AdminBundle\Guesser\TypeGuesserChain">
      <argument type="collection">
        <argument type="service" id="sonata.admin.guesser.orm_list"/>
      </argument>
    </service>
    <service id="sonata.admin.builder.orm_show" class="Sonata\DoctrineORMAdminBundle\Builder\ShowBuilder">
      <argument type="service" id="sonata.admin.guesser.orm_show_chain"/>
      <argument type="collection">
        <argument key="array">SonataAdminBundle:CRUD:show_array.html.twig</argument>
        <argument key="boolean">SonataAdminBundle:CRUD:show_boolean.html.twig</argument>
        <argument key="date">SonataAdminBundle:CRUD:show_date.html.twig</argument>
        <argument key="time">SonataAdminBundle:CRUD:show_time.html.twig</argument>
        <argument key="datetime">SonataAdminBundle:CRUD:show_datetime.html.twig</argument>
        <argument key="text">SonataAdminBundle:CRUD:base_show_field.html.twig</argument>
        <argument key="email">SonataAdminBundle:CRUD:show_email.html.twig</argument>
        <argument key="trans">SonataAdminBundle:CRUD:show_trans.html.twig</argument>
        <argument key="string">SonataAdminBundle:CRUD:base_show_field.html.twig</argument>
        <argument key="smallint">SonataAdminBundle:CRUD:base_show_field.html.twig</argument>
        <argument key="bigint">SonataAdminBundle:CRUD:base_show_field.html.twig</argument>
        <argument key="integer">SonataAdminBundle:CRUD:base_show_field.html.twig</argument>
        <argument key="decimal">SonataAdminBundle:CRUD:base_show_field.html.twig</argument>
        <argument key="currency">SonataAdminBundle:CRUD:show_currency.html.twig</argument>
        <argument key="percent">SonataAdminBundle:CRUD:show_percent.html.twig</argument>
        <argument key="choice">SonataAdminBundle:CRUD:show_choice.html.twig</argument>
        <argument key="url">SonataAdminBundle:CRUD:show_url.html.twig</argument>
        <argument key="html">SonataAdminBundle:CRUD:show_html.html.twig</argument>
      </argument>
    </service>
    <service id="sonata.admin.guesser.orm_show" class="Sonata\DoctrineORMAdminBundle\Guesser\TypeGuesser">
      <tag name="sonata.admin.guesser.orm_show"/>
    </service>
    <service id="sonata.admin.guesser.orm_show_chain" class="Sonata\AdminBundle\Guesser\TypeGuesserChain">
      <argument type="collection">
        <argument type="service" id="sonata.admin.guesser.orm_show"/>
      </argument>
    </service>
    <service id="sonata.admin.builder.orm_datagrid" class="Sonata\DoctrineORMAdminBundle\Builder\DatagridBuilder">
      <argument type="service" id="form.factory"/>
      <argument type="service" id="sonata.admin.builder.filter.factory"/>
      <argument type="service" id="sonata.admin.guesser.orm_datagrid_chain"/>
      <argument>true</argument>
    </service>
    <service id="sonata.admin.guesser.orm_datagrid" class="Sonata\DoctrineORMAdminBundle\Guesser\FilterTypeGuesser">
      <tag name="sonata.admin.guesser.orm_datagrid"/>
    </service>
    <service id="sonata.admin.guesser.orm_datagrid_chain" class="Sonata\AdminBundle\Guesser\TypeGuesserChain">
      <argument type="collection">
        <argument type="service" id="sonata.admin.guesser.orm_datagrid"/>
      </argument>
    </service>
    <service id="sonata.admin.orm.filter.type.boolean" class="Sonata\DoctrineORMAdminBundle\Filter\BooleanFilter" shared="false">
      <tag name="sonata.admin.filter.type" alias="doctrine_orm_boolean"/>
    </service>
    <service id="sonata.admin.orm.filter.type.callback" class="Sonata\DoctrineORMAdminBundle\Filter\CallbackFilter" shared="false">
      <tag name="sonata.admin.filter.type" alias="doctrine_orm_callback"/>
    </service>
    <service id="sonata.admin.orm.filter.type.choice" class="Sonata\DoctrineORMAdminBundle\Filter\ChoiceFilter" shared="false">
      <tag name="sonata.admin.filter.type" alias="doctrine_orm_choice"/>
    </service>
    <service id="sonata.admin.orm.filter.type.model" class="Sonata\DoctrineORMAdminBundle\Filter\ModelFilter" shared="false">
      <tag name="sonata.admin.filter.type" alias="doctrine_orm_model"/>
    </service>
    <service id="sonata.admin.orm.filter.type.model_autocomplete" class="Sonata\DoctrineORMAdminBundle\Filter\ModelAutocompleteFilter" shared="false">
      <tag name="sonata.admin.filter.type" alias="doctrine_orm_model_autocomplete"/>
    </service>
    <service id="sonata.admin.orm.filter.type.string" class="Sonata\DoctrineORMAdminBundle\Filter\StringFilter" shared="false">
      <tag name="sonata.admin.filter.type" alias="doctrine_orm_string"/>
    </service>
    <service id="sonata.admin.orm.filter.type.number" class="Sonata\DoctrineORMAdminBundle\Filter\NumberFilter" shared="false">
      <tag name="sonata.admin.filter.type" alias="doctrine_orm_number"/>
    </service>
    <service id="sonata.admin.orm.filter.type.date" class="Sonata\DoctrineORMAdminBundle\Filter\DateFilter" shared="false">
      <tag name="sonata.admin.filter.type" alias="doctrine_orm_date"/>
    </service>
    <service id="sonata.admin.orm.filter.type.date_range" class="Sonata\DoctrineORMAdminBundle\Filter\DateRangeFilter" shared="false">
      <tag name="sonata.admin.filter.type" alias="doctrine_orm_date_range"/>
    </service>
    <service id="sonata.admin.orm.filter.type.datetime" class="Sonata\DoctrineORMAdminBundle\Filter\DateTimeFilter" shared="false">
      <tag name="sonata.admin.filter.type" alias="doctrine_orm_datetime"/>
    </service>
    <service id="sonata.admin.orm.filter.type.time" class="Sonata\DoctrineORMAdminBundle\Filter\TimeFilter" shared="false">
      <tag name="sonata.admin.filter.type" alias="doctrine_orm_time"/>
    </service>
    <service id="sonata.admin.orm.filter.type.datetime_range" class="Sonata\DoctrineORMAdminBundle\Filter\DateTimeRangeFilter" shared="false">
      <tag name="sonata.admin.filter.type" alias="doctrine_orm_datetime_range"/>
    </service>
    <service id="sonata.admin.orm.filter.type.class" class="Sonata\DoctrineORMAdminBundle\Filter\ClassFilter" shared="false">
      <tag name="sonata.admin.filter.type" alias="doctrine_orm_class"/>
    </service>
    <service id="sonata.admin.manipulator.acl.object.orm" class="Sonata\DoctrineORMAdminBundle\Util\ObjectAclManipulator"/>
    <service id="sonata.admin.twig.extension" class="Sonata\AdminBundle\Twig\Extension\SonataAdminExtension">
      <tag name="twig.extension"/>
      <argument type="service" id="sonata.admin.pool"/>
      <argument type="service" id="monolog.logger" on-invalid="ignore"/>
      <argument type="service" id="translator.data_collector"/>
      <call method="setXEditableTypeMapping">
        <argument type="collection">
          <argument key="choice">select</argument>
          <argument key="boolean">select</argument>
          <argument key="text">text</argument>
          <argument key="textarea">textarea</argument>
          <argument key="html">textarea</argument>
          <argument key="email">email</argument>
          <argument key="string">text</argument>
          <argument key="smallint">text</argument>
          <argument key="bigint">text</argument>
          <argument key="integer">number</argument>
          <argument key="decimal">number</argument>
          <argument key="currency">number</argument>
          <argument key="percent">number</argument>
          <argument key="url">url</argument>
          <argument key="date">date</argument>
        </argument>
      </call>
    </service>
    <service id="sonata.admin.pool" class="Sonata\AdminBundle\Admin\Pool">
      <argument type="service" id="service_container"/>
      <argument>HIGH TECH</argument>
      <argument>bundles/sonataadmin/logo_title.png</argument>
      <argument type="collection">
        <argument key="html5_validate">true</argument>
        <argument key="sort_admins">false</argument>
        <argument key="confirm_exit">true</argument>
        <argument key="use_select2">true</argument>
        <argument key="use_icheck">true</argument>
        <argument key="use_bootlint">false</argument>
        <argument key="use_stickyforms">true</argument>
        <argument key="pager_links">null</argument>
        <argument key="form_type">standard</argument>
        <argument key="dropdown_number_groups_per_colums">2</argument>
        <argument key="title_mode">both</argument>
        <argument key="lock_protection">false</argument>
        <argument key="enable_jms_di_extra_autoregistration">true</argument>
        <argument key="javascripts" type="collection">
          <argument>bundles/sonatacore/vendor/jquery/dist/jquery.min.js</argument>
          <argument>bundles/sonataadmin/vendor/jquery.scrollTo/jquery.scrollTo.min.js</argument>
          <argument>bundles/sonatacore/vendor/moment/min/moment.min.js</argument>
          <argument>bundles/sonataadmin/vendor/jqueryui/ui/minified/jquery-ui.min.js</argument>
          <argument>bundles/sonataadmin/vendor/jqueryui/ui/minified/i18n/jquery-ui-i18n.min.js</argument>
          <argument>bundles/sonatacore/vendor/bootstrap/dist/js/bootstrap.min.js</argument>
          <argument>bundles/sonatacore/vendor/eonasdan-bootstrap-datetimepicker/build/js/bootstrap-datetimepicker.min.js</argument>
          <argument>bundles/sonataadmin/vendor/jquery-form/jquery.form.js</argument>
          <argument>bundles/sonataadmin/jquery/jquery.confirmExit.js</argument>
          <argument>bundles/sonataadmin/vendor/x-editable/dist/bootstrap3-editable/js/bootstrap-editable.min.js</argument>
          <argument>bundles/sonatacore/vendor/select2/select2.min.js</argument>
          <argument>bundles/sonataadmin/vendor/admin-lte/dist/js/app.min.js</argument>
          <argument>bundles/sonataadmin/vendor/iCheck/icheck.min.js</argument>
          <argument>bundles/sonataadmin/vendor/slimScroll/jquery.slimscroll.min.js</argument>
          <argument>bundles/sonataadmin/vendor/waypoints/lib/jquery.waypoints.min.js</argument>
          <argument>bundles/sonataadmin/vendor/waypoints/lib/shortcuts/sticky.min.js</argument>
          <argument>bundles/sonataadmin/vendor/readmore-js/readmore.min.js</argument>
          <argument>bundles/sonataadmin/vendor/masonry/dist/masonry.pkgd.min.js</argument>
          <argument>bundles/sonataadmin/Admin.js</argument>
          <argument>bundles/sonataadmin/treeview.js</argument>
        </argument>
        <argument key="stylesheets" type="collection">
          <argument>bundles/sonatacore/vendor/bootstrap/dist/css/bootstrap.min.css</argument>
          <argument>bundles/sonatacore/vendor/components-font-awesome/css/font-awesome.min.css</argument>
          <argument>bundles/sonatacore/vendor/ionicons/css/ionicons.min.css</argument>
          <argument>bundles/sonataadmin/vendor/admin-lte/dist/css/AdminLTE.min.css</argument>
          <argument>bundles/sonataadmin/vendor/admin-lte/dist/css/skins/skin-black.min.css</argument>
          <argument>bundles/sonataadmin/vendor/iCheck/skins/square/blue.css</argument>
          <argument>bundles/sonatacore/vendor/eonasdan-bootstrap-datetimepicker/build/css/bootstrap-datetimepicker.min.css</argument>
          <argument>bundles/sonataadmin/vendor/jqueryui/themes/base/jquery-ui.css</argument>
          <argument>bundles/sonatacore/vendor/select2/select2.css</argument>
          <argument>bundles/sonatacore/vendor/select2-bootstrap-css/select2-bootstrap.min.css</argument>
          <argument>bundles/sonataadmin/vendor/x-editable/dist/bootstrap3-editable/css/bootstrap-editable.css</argument>
          <argument>bundles/sonataadmin/css/styles.css</argument>
          <argument>bundles/sonataadmin/css/layout.css</argument>
          <argument>bundles/sonataadmin/css/tree.css</argument>
        </argument>
      </argument>
      <argument type="service" id="property_accessor"/>
      <call method="setTemplates">
        <argument type="collection">
          <argument key="search">SonataAdminBundle:Core:search.html.twig</argument>
          <argument key="search_result_block">SonataAdminBundle:Block:block_search_result.html.twig</argument>
          <argument key="user_block">SonataAdminBundle:Core:user_block.html.twig</argument>
          <argument key="add_block">SonataAdminBundle:Core:add_block.html.twig</argument>
          <argument key="layout">SonataAdminBundle::standard_layout.html.twig</argument>
          <argument key="ajax">SonataAdminBundle::ajax_layout.html.twig</argument>
          <argument key="dashboard">SonataAdminBundle:Core:dashboard.html.twig</argument>
          <argument key="list">SonataAdminBundle:CRUD:list.html.twig</argument>
          <argument key="filter">SonataAdminBundle:Form:filter_admin_fields.html.twig</argument>
          <argument key="show">SonataAdminBundle:CRUD:show.html.twig</argument>
          <argument key="show_compare">SonataAdminBundle:CRUD:show_compare.html.twig</argument>
          <argument key="edit">SonataAdminBundle:CRUD:edit.html.twig</argument>
          <argument key="preview">SonataAdminBundle:CRUD:preview.html.twig</argument>
          <argument key="history">SonataAdminBundle:CRUD:history.html.twig</argument>
          <argument key="acl">SonataAdminBundle:CRUD:acl.html.twig</argument>
          <argument key="history_revision_timestamp">SonataAdminBundle:CRUD:history_revision_timestamp.html.twig</argument>
          <argument key="action">SonataAdminBundle:CRUD:action.html.twig</argument>
          <argument key="select">SonataAdminBundle:CRUD:list__select.html.twig</argument>
          <argument key="list_block">SonataAdminBundle:Block:block_admin_list.html.twig</argument>
          <argument key="short_object_description">SonataAdminBundle:Helper:short-object-description.html.twig</argument>
          <argument key="delete">SonataAdminBundle:CRUD:delete.html.twig</argument>
          <argument key="batch">SonataAdminBundle:CRUD:list__batch.html.twig</argument>
          <argument key="batch_confirmation">SonataAdminBundle:CRUD:batch_confirmation.html.twig</argument>
          <argument key="inner_list_row">SonataAdminBundle:CRUD:list_inner_row.html.twig</argument>
          <argument key="outer_list_rows_mosaic">SonataAdminBundle:CRUD:list_outer_rows_mosaic.html.twig</argument>
          <argument key="outer_list_rows_list">SonataAdminBundle:CRUD:list_outer_rows_list.html.twig</argument>
          <argument key="outer_list_rows_tree">SonataAdminBundle:CRUD:list_outer_rows_tree.html.twig</argument>
          <argument key="base_list_field">SonataAdminBundle:CRUD:base_list_field.html.twig</argument>
          <argument key="pager_links">SonataAdminBundle:Pager:links.html.twig</argument>
          <argument key="pager_results">SonataAdminBundle:Pager:results.html.twig</argument>
          <argument key="tab_menu_template">SonataAdminBundle:Core:tab_menu_template.html.twig</argument>
          <argument key="knp_menu_template">SonataAdminBundle:Menu:sonata_menu.html.twig</argument>
          <argument key="action_create">SonataAdminBundle:CRUD:dashboard__action_create.html.twig</argument>
          <argument key="button_acl">SonataAdminBundle:Button:acl_button.html.twig</argument>
          <argument key="button_create">SonataAdminBundle:Button:create_button.html.twig</argument>
          <argument key="button_edit">SonataAdminBundle:Button:edit_button.html.twig</argument>
          <argument key="button_history">SonataAdminBundle:Button:history_button.html.twig</argument>
          <argument key="button_list">SonataAdminBundle:Button:list_button.html.twig</argument>
          <argument key="button_show">SonataAdminBundle:Button:show_button.html.twig</argument>
        </argument>
      </call>
      <call method="setAdminServiceIds">
        <argument type="collection">
          <argument>app.admin.category</argument>
          <argument>app.admin.blogpost</argument>
          <argument>app.admin.user</argument>
          <argument>app.admin.groups</argument>
        </argument>
      </call>
      <call method="setAdminGroups">
        <argument type="collection">
          <argument key="Gestion des catégories" type="collection">
            <argument key="label">Gestion des catégories</argument>
            <argument key="label_catalogue">AppBundle</argument>
            <argument key="icon">&lt;i class="fa fa-tasks" &gt;&lt;/i&gt;</argument>
            <argument key="roles" type="collection"/>
            <argument key="on_top">false</argument>
            <argument key="keep_open">false</argument>
            <argument key="items" type="collection">
              <argument type="collection">
                <argument key="admin">app.admin.category</argument>
                <argument key="label">Catégorie</argument>
                <argument key="route"></argument>
                <argument key="route_params" type="collection"/>
                <argument key="route_absolute">true</argument>
              </argument>
            </argument>
          </argument>
          <argument key="Gestion des blogs" type="collection">
            <argument key="label">Gestion des blogs</argument>
            <argument key="label_catalogue">AppBundle</argument>
            <argument key="icon">&lt;i class="fa fa-book" &gt;&lt;/i&gt;</argument>
            <argument key="roles" type="collection"/>
            <argument key="on_top">false</argument>
            <argument key="keep_open">false</argument>
            <argument key="items" type="collection">
              <argument type="collection">
                <argument key="admin">app.admin.blogpost</argument>
                <argument key="label">Blog</argument>
                <argument key="route"></argument>
                <argument key="route_params" type="collection"/>
                <argument key="route_absolute">true</argument>
              </argument>
            </argument>
          </argument>
          <argument key="Gestion des utilisateurs" type="collection">
            <argument key="label">Gestion des utilisateurs</argument>
            <argument key="label_catalogue">AppBundle</argument>
            <argument key="icon">&lt;i class="fa fa-users" &gt;&lt;/i&gt;</argument>
            <argument key="roles" type="collection"/>
            <argument key="on_top">false</argument>
            <argument key="keep_open">false</argument>
            <argument key="items" type="collection">
              <argument type="collection">
                <argument key="admin">app.admin.user</argument>
                <argument key="label">Utilisateur</argument>
                <argument key="route"></argument>
                <argument key="route_params" type="collection"/>
                <argument key="route_absolute">true</argument>
              </argument>
            </argument>
          </argument>
          <argument key="Gestion des Groupes" type="collection">
            <argument key="label">Gestion des Groupes</argument>
            <argument key="label_catalogue">AppBundle</argument>
            <argument key="icon">&lt;i class="fa fa-cogs" &gt;&lt;/i&gt;</argument>
            <argument key="roles" type="collection"/>
            <argument key="on_top">false</argument>
            <argument key="keep_open">false</argument>
            <argument key="items" type="collection">
              <argument type="collection">
                <argument key="admin">app.admin.groups</argument>
                <argument key="label">Groupe</argument>
                <argument key="route"></argument>
                <argument key="route_params" type="collection"/>
                <argument key="route_absolute">true</argument>
              </argument>
            </argument>
          </argument>
        </argument>
      </call>
      <call method="setAdminClasses">
        <argument type="collection">
          <argument key="AppBundle\Entity\Category" type="collection">
            <argument>app.admin.category</argument>
          </argument>
          <argument key="AppBundle\Entity\BlogPost" type="collection">
            <argument>app.admin.blogpost</argument>
          </argument>
          <argument key="AppBundle\Entity\User" type="collection">
            <argument>app.admin.user</argument>
          </argument>
          <argument key="AppBundle\Entity\Group" type="collection">
            <argument>app.admin.groups</argument>
          </argument>
        </argument>
      </call>
    </service>
    <service id="sonata.admin.route_loader" class="Sonata\AdminBundle\Route\AdminPoolLoader">
      <tag name="routing.loader"/>
      <argument type="service" id="sonata.admin.pool"/>
      <argument type="collection">
        <argument>app.admin.category</argument>
        <argument>app.admin.blogpost</argument>
        <argument>app.admin.user</argument>
        <argument>app.admin.groups</argument>
      </argument>
      <argument type="service" id="service_container"/>
    </service>
    <service id="sonata.admin.helper" class="Sonata\AdminBundle\Admin\AdminHelper">
      <argument type="service" id="sonata.admin.pool"/>
    </service>
    <service id="sonata.admin.builder.filter.factory" class="Sonata\AdminBundle\Filter\FilterFactory">
      <argument type="service" id="service_container"/>
      <argument type="collection">
        <argument key="Sonata\DoctrineORMAdminBundle\Filter\BooleanFilter">sonata.admin.orm.filter.type.boolean</argument>
        <argument key="doctrine_orm_boolean">sonata.admin.orm.filter.type.boolean</argument>
        <argument key="Sonata\DoctrineORMAdminBundle\Filter\CallbackFilter">sonata.admin.orm.filter.type.callback</argument>
        <argument key="doctrine_orm_callback">sonata.admin.orm.filter.type.callback</argument>
        <argument key="Sonata\DoctrineORMAdminBundle\Filter\ChoiceFilter">sonata.admin.orm.filter.type.choice</argument>
        <argument key="doctrine_orm_choice">sonata.admin.orm.filter.type.choice</argument>
        <argument key="Sonata\DoctrineORMAdminBundle\Filter\ModelFilter">sonata.admin.orm.filter.type.model</argument>
        <argument key="doctrine_orm_model">sonata.admin.orm.filter.type.model</argument>
        <argument key="Sonata\DoctrineORMAdminBundle\Filter\ModelAutocompleteFilter">sonata.admin.orm.filter.type.model_autocomplete</argument>
        <argument key="doctrine_orm_model_autocomplete">sonata.admin.orm.filter.type.model_autocomplete</argument>
        <argument key="Sonata\DoctrineORMAdminBundle\Filter\StringFilter">sonata.admin.orm.filter.type.string</argument>
        <argument key="doctrine_orm_string">sonata.admin.orm.filter.type.string</argument>
        <argument key="Sonata\DoctrineORMAdminBundle\Filter\NumberFilter">sonata.admin.orm.filter.type.number</argument>
        <argument key="doctrine_orm_number">sonata.admin.orm.filter.type.number</argument>
        <argument key="Sonata\DoctrineORMAdminBundle\Filter\DateFilter">sonata.admin.orm.filter.type.date</argument>
        <argument key="doctrine_orm_date">sonata.admin.orm.filter.type.date</argument>
        <argument key="Sonata\DoctrineORMAdminBundle\Filter\DateRangeFilter">sonata.admin.orm.filter.type.date_range</argument>
        <argument key="doctrine_orm_date_range">sonata.admin.orm.filter.type.date_range</argument>
        <argument key="Sonata\DoctrineORMAdminBundle\Filter\DateTimeFilter">sonata.admin.orm.filter.type.datetime</argument>
        <argument key="doctrine_orm_datetime">sonata.admin.orm.filter.type.datetime</argument>
        <argument key="Sonata\DoctrineORMAdminBundle\Filter\TimeFilter">sonata.admin.orm.filter.type.time</argument>
        <argument key="doctrine_orm_time">sonata.admin.orm.filter.type.time</argument>
        <argument key="Sonata\DoctrineORMAdminBundle\Filter\DateTimeRangeFilter">sonata.admin.orm.filter.type.datetime_range</argument>
        <argument key="doctrine_orm_datetime_range">sonata.admin.orm.filter.type.datetime_range</argument>
        <argument key="Sonata\DoctrineORMAdminBundle\Filter\ClassFilter">sonata.admin.orm.filter.type.class</argument>
        <argument key="doctrine_orm_class">sonata.admin.orm.filter.type.class</argument>
      </argument>
    </service>
    <service id="sonata.admin.breadcrumbs_builder" class="Sonata\AdminBundle\Admin\BreadcrumbsBuilder">
      <argument type="collection">
        <argument key="child_admin_route">edit</argument>
      </argument>
    </service>
    <service id="sonata.admin.label.strategy.bc" class="Sonata\AdminBundle\Translator\BCLabelTranslatorStrategy"/>
    <service id="sonata.admin.label.strategy.native" class="Sonata\AdminBundle\Translator\NativeLabelTranslatorStrategy"/>
    <service id="sonata.admin.label.strategy.noop" class="Sonata\AdminBundle\Translator\NoopLabelTranslatorStrategy"/>
    <service id="sonata.admin.label.strategy.underscore" class="Sonata\AdminBundle\Translator\UnderscoreLabelTranslatorStrategy"/>
    <service id="sonata.admin.label.strategy.form_component" class="Sonata\AdminBundle\Translator\FormLabelTranslatorStrategy"/>
    <service id="sonata.admin.controller.admin" class="Sonata\AdminBundle\Controller\HelperController">
      <argument type="service" id="twig"/>
      <argument type="service" id="sonata.admin.pool"/>
      <argument type="service" id="sonata.admin.helper"/>
      <argument type="service" id="validator"/>
    </service>
    <service id="sonata.admin.audit.manager" class="Sonata\AdminBundle\Model\AuditManager">
      <argument type="service" id="service_container"/>
    </service>
    <service id="sonata.admin.exporter" class="Sonata\AdminBundle\Export\Exporter">
      <deprecated>The "%service_id%" service is deprecated. You should stop using it, as it will soon be removed.</deprecated>
    </service>
    <service id="sonata.admin.search.handler" class="Sonata\AdminBundle\Search\SearchHandler">
      <argument type="service" id="sonata.admin.pool"/>
    </service>
    <service id="sonata.admin.event.extension" class="Sonata\AdminBundle\Event\AdminEventExtension">
      <tag name="sonata.admin.extension" global="1"/>
      <argument type="service" id="debug.event_dispatcher"/>
    </service>
    <service id="sonata.admin.twig.global" class="Sonata\AdminBundle\Twig\GlobalVariables">
      <argument type="service" id="sonata.admin.pool"/>
    </service>
    <service id="sonata.admin.form.type.admin" class="Sonata\AdminBundle\Form\Type\AdminType">
      <tag name="form.type" alias="sonata_type_admin"/>
    </service>
    <service id="sonata.admin.form.type.model_choice" class="Sonata\AdminBundle\Form\Type\ModelType">
      <tag name="form.type" alias="sonata_type_model"/>
      <argument type="service" id="property_accessor"/>
    </service>
    <service id="sonata.admin.form.type.model_list" class="Sonata\AdminBundle\Form\Type\ModelListType">
      <tag name="form.type" alias="sonata_type_model_list"/>
    </service>
    <service id="sonata.admin.form.type.model_reference" class="Sonata\AdminBundle\Form\Type\ModelReferenceType">
      <tag name="form.type" alias="sonata_type_model_reference"/>
    </service>
    <service id="sonata.admin.form.type.model_hidden" class="Sonata\AdminBundle\Form\Type\ModelHiddenType">
      <tag name="form.type" alias="sonata_type_model_hidden"/>
    </service>
    <service id="sonata.admin.form.type.model_autocomplete" class="Sonata\AdminBundle\Form\Type\ModelAutocompleteType">
      <tag name="form.type" alias="sonata_type_model_autocomplete"/>
    </service>
    <service id="sonata.admin.form.type.collection" class="Sonata\AdminBundle\Form\Type\CollectionType">
      <tag name="form.type" alias="sonata_type_native_collection"/>
    </service>
    <service id="sonata.admin.doctrine_orm.form.type.choice_field_mask" class="Sonata\AdminBundle\Form\Type\ChoiceFieldMaskType">
      <tag name="form.type" alias="sonata_type_choice_field_mask"/>
    </service>
    <service id="sonata.admin.form.extension.field" class="Sonata\AdminBundle\Form\Extension\Field\Type\FormTypeFieldExtension">
      <tag name="form.type_extension" alias="form" extended_type="Symfony\Component\Form\Extension\Core\Type\FormType" extended-type="Symfony\Component\Form\Extension\Core\Type\FormType"/>
      <argument type="collection">
        <argument key="email"></argument>
        <argument key="textarea"></argument>
        <argument key="text"></argument>
        <argument key="choice"></argument>
        <argument key="integer"></argument>
        <argument key="datetime">sonata-medium-date</argument>
        <argument key="date">sonata-medium-date</argument>
        <argument key="Symfony\Component\Form\Extension\Core\Type\ChoiceType"></argument>
        <argument key="Symfony\Component\Form\Extension\Core\Type\DateType">sonata-medium-date</argument>
        <argument key="Symfony\Component\Form\Extension\Core\Type\DateTimeType">sonata-medium-date</argument>
        <argument key="Symfony\Component\Form\Extension\Core\Type\EmailType"></argument>
        <argument key="Symfony\Component\Form\Extension\Core\Type\IntegerType"></argument>
        <argument key="Symfony\Component\Form\Extension\Core\Type\TextareaType"></argument>
        <argument key="Symfony\Component\Form\Extension\Core\Type\TextType"></argument>
      </argument>
      <argument type="collection">
        <argument key="html5_validate">true</argument>
        <argument key="sort_admins">false</argument>
        <argument key="confirm_exit">true</argument>
        <argument key="use_select2">true</argument>
        <argument key="use_icheck">true</argument>
        <argument key="use_bootlint">false</argument>
        <argument key="use_stickyforms">true</argument>
        <argument key="pager_links">null</argument>
        <argument key="form_type">standard</argument>
        <argument key="dropdown_number_groups_per_colums">2</argument>
        <argument key="title_mode">both</argument>
        <argument key="lock_protection">false</argument>
        <argument key="enable_jms_di_extra_autoregistration">true</argument>
        <argument key="javascripts" type="collection">
          <argument>bundles/sonatacore/vendor/jquery/dist/jquery.min.js</argument>
          <argument>bundles/sonataadmin/vendor/jquery.scrollTo/jquery.scrollTo.min.js</argument>
          <argument>bundles/sonatacore/vendor/moment/min/moment.min.js</argument>
          <argument>bundles/sonataadmin/vendor/jqueryui/ui/minified/jquery-ui.min.js</argument>
          <argument>bundles/sonataadmin/vendor/jqueryui/ui/minified/i18n/jquery-ui-i18n.min.js</argument>
          <argument>bundles/sonatacore/vendor/bootstrap/dist/js/bootstrap.min.js</argument>
          <argument>bundles/sonatacore/vendor/eonasdan-bootstrap-datetimepicker/build/js/bootstrap-datetimepicker.min.js</argument>
          <argument>bundles/sonataadmin/vendor/jquery-form/jquery.form.js</argument>
          <argument>bundles/sonataadmin/jquery/jquery.confirmExit.js</argument>
          <argument>bundles/sonataadmin/vendor/x-editable/dist/bootstrap3-editable/js/bootstrap-editable.min.js</argument>
          <argument>bundles/sonatacore/vendor/select2/select2.min.js</argument>
          <argument>bundles/sonataadmin/vendor/admin-lte/dist/js/app.min.js</argument>
          <argument>bundles/sonataadmin/vendor/iCheck/icheck.min.js</argument>
          <argument>bundles/sonataadmin/vendor/slimScroll/jquery.slimscroll.min.js</argument>
          <argument>bundles/sonataadmin/vendor/waypoints/lib/jquery.waypoints.min.js</argument>
          <argument>bundles/sonataadmin/vendor/waypoints/lib/shortcuts/sticky.min.js</argument>
          <argument>bundles/sonataadmin/vendor/readmore-js/readmore.min.js</argument>
          <argument>bundles/sonataadmin/vendor/masonry/dist/masonry.pkgd.min.js</argument>
          <argument>bundles/sonataadmin/Admin.js</argument>
          <argument>bundles/sonataadmin/treeview.js</argument>
        </argument>
        <argument key="stylesheets" type="collection">
          <argument>bundles/sonatacore/vendor/bootstrap/dist/css/bootstrap.min.css</argument>
          <argument>bundles/sonatacore/vendor/components-font-awesome/css/font-awesome.min.css</argument>
          <argument>bundles/sonatacore/vendor/ionicons/css/ionicons.min.css</argument>
          <argument>bundles/sonataadmin/vendor/admin-lte/dist/css/AdminLTE.min.css</argument>
          <argument>bundles/sonataadmin/vendor/admin-lte/dist/css/skins/skin-black.min.css</argument>
          <argument>bundles/sonataadmin/vendor/iCheck/skins/square/blue.css</argument>
          <argument>bundles/sonatacore/vendor/eonasdan-bootstrap-datetimepicker/build/css/bootstrap-datetimepicker.min.css</argument>
          <argument>bundles/sonataadmin/vendor/jqueryui/themes/base/jquery-ui.css</argument>
          <argument>bundles/sonatacore/vendor/select2/select2.css</argument>
          <argument>bundles/sonatacore/vendor/select2-bootstrap-css/select2-bootstrap.min.css</argument>
          <argument>bundles/sonataadmin/vendor/x-editable/dist/bootstrap3-editable/css/bootstrap-editable.css</argument>
          <argument>bundles/sonataadmin/css/styles.css</argument>
          <argument>bundles/sonataadmin/css/layout.css</argument>
          <argument>bundles/sonataadmin/css/tree.css</argument>
        </argument>
      </argument>
    </service>
    <service id="sonata.admin.form.extension.field.mopa" class="Sonata\AdminBundle\Form\Extension\Field\Type\MopaCompatibilityTypeFieldExtension">
      <tag name="form.type_extension" alias="form" extended_type="Symfony\Component\Form\Extension\Core\Type\FormType" extended-type="Symfony\Component\Form\Extension\Core\Type\FormType"/>
    </service>
    <service id="sonata.admin.form.extension.choice" class="Sonata\AdminBundle\Form\Extension\ChoiceTypeExtension">
      <tag name="form.type_extension" alias="choice" extended_type="Symfony\Component\Form\Extension\Core\Type\ChoiceType" extended-type="Symfony\Component\Form\Extension\Core\Type\ChoiceType"/>
    </service>
    <service id="sonata.admin.form.filter.type.number" class="Sonata\AdminBundle\Form\Type\Filter\NumberType">
      <tag name="form.type" alias="sonata_type_filter_number"/>
      <argument type="service" id="translator.data_collector"/>
    </service>
    <service id="sonata.admin.form.filter.type.choice" class="Sonata\AdminBundle\Form\Type\Filter\ChoiceType">
      <tag name="form.type" alias="sonata_type_filter_choice"/>
      <argument type="service" id="translator.data_collector"/>
    </service>
    <service id="sonata.admin.form.filter.type.default" class="Sonata\AdminBundle\Form\Type\Filter\DefaultType">
      <tag name="form.type" alias="sonata_type_filter_default"/>
    </service>
    <service id="sonata.admin.form.filter.type.date" class="Sonata\AdminBundle\Form\Type\Filter\DateType">
      <tag name="form.type" alias="sonata_type_filter_date"/>
      <argument type="service" id="translator.data_collector"/>
    </service>
    <service id="sonata.admin.form.filter.type.daterange" class="Sonata\AdminBundle\Form\Type\Filter\DateRangeType">
      <tag name="form.type" alias="sonata_type_filter_date_range"/>
      <argument type="service" id="translator.data_collector"/>
    </service>
    <service id="sonata.admin.form.filter.type.datetime" class="Sonata\AdminBundle\Form\Type\Filter\DateTimeType">
      <tag name="form.type" alias="sonata_type_filter_datetime"/>
      <argument type="service" id="translator.data_collector"/>
    </service>
    <service id="sonata.admin.form.filter.type.datetime_range" class="Sonata\AdminBundle\Form\Type\Filter\DateTimeRangeType">
      <tag name="form.type" alias="sonata_type_filter_datetime_range"/>
      <argument type="service" id="translator.data_collector"/>
    </service>
    <service id="sonata.admin.validator.inline" class="Sonata\CoreBundle\Validator\InlineValidator">
      <tag name="validator.constraint_validator" alias="sonata.admin.validator.inline"/>
      <argument type="service" id="service_container"/>
      <argument type="service" id="validator.validator_factory"/>
    </service>
    <service id="sonata.admin.route.path_info" class="Sonata\AdminBundle\Route\PathInfoBuilder">
      <argument type="service" id="sonata.admin.audit.manager"/>
    </service>
    <service id="sonata.admin.route.query_string" class="Sonata\AdminBundle\Route\QueryStringBuilder">
      <argument type="service" id="sonata.admin.audit.manager"/>
    </service>
    <service id="sonata.admin.route.default_generator" class="Sonata\AdminBundle\Route\DefaultRouteGenerator">
      <argument type="service" id="router.default"/>
      <argument type="service" id="sonata.admin.route.cache"/>
    </service>
    <service id="sonata.admin.route.cache" class="Sonata\AdminBundle\Route\RoutesCache">
      <argument>D:\wamp64\www\SiteSymfony\SonataBackOffice\var\cache\dev/sonata/admin</argument>
      <argument>true</argument>
    </service>
    <service id="sonata.admin.route.cache_warmup" class="Sonata\AdminBundle\Route\RoutesCacheWarmUp">
      <tag name="kernel.cache_warmer"/>
      <argument type="service" id="sonata.admin.route.cache"/>
      <argument type="service" id="sonata.admin.pool"/>
    </service>
    <service id="sonata.admin.block.admin_list" class="Sonata\AdminBundle\Block\AdminListBlockService">
      <tag name="sonata.block"/>
      <argument>sonata.admin.block.admin_list</argument>
      <argument type="service" id="templating.engine.twig"/>
      <argument type="service" id="sonata.admin.pool"/>
    </service>
    <service id="sonata.admin.block.search_result" class="Sonata\AdminBundle\Block\AdminSearchBlockService">
      <tag name="sonata.block"/>
      <argument>sonata.admin.block.search_result</argument>
      <argument type="service" id="templating.engine.twig"/>
      <argument type="service" id="sonata.admin.pool"/>
      <argument type="service" id="sonata.admin.search.handler"/>
    </service>
    <service id="sonata.admin.block.stats" class="Sonata\AdminBundle\Block\AdminStatsBlockService">
      <tag name="sonata.block"/>
      <argument>sonata.admin.block.stats</argument>
      <argument type="service" id="templating.engine.twig"/>
      <argument type="service" id="sonata.admin.pool"/>
    </service>
    <service id="sonata.admin.menu_builder" class="Sonata\AdminBundle\Menu\MenuBuilder">
      <argument type="service" id="sonata.admin.pool"/>
      <argument type="service" id="knp_menu.factory"/>
      <argument type="service" id="knp_menu.menu_provider.chain"/>
      <argument type="service" id="debug.event_dispatcher"/>
    </service>
    <service id="sonata.admin.sidebar_menu" class="Knp\Menu\MenuItem">
      <tag name="knp_menu.menu" alias="sonata_admin_sidebar"/>
      <factory service="sonata.admin.menu_builder" method="createSidebarMenu"/>
    </service>
    <service id="sonata.admin.menu.group_provider" class="Sonata\AdminBundle\Menu\Provider\GroupMenuProvider" public="false">
      <tag name="knp_menu.provider"/>
      <argument type="service" id="knp_menu.factory"/>
      <argument type="service" id="sonata.admin.pool"/>
      <argument type="service" id="security.authorization_checker"/>
    </service>
    <service id="sonata.admin.menu.matcher.voter.admin" class="Sonata\AdminBundle\Menu\Matcher\Voter\AdminVoter">
      <tag name="knp_menu.voter" request="1"/>
    </service>
    <service id="sonata.admin.menu.matcher.voter.children" class="Sonata\AdminBundle\Menu\Matcher\Voter\ChildrenVoter">
      <tag name="knp_menu.voter"/>
      <argument type="service" id="knp_menu.matcher"/>
    </service>
    <service id="sonata.admin.menu.matcher.voter.active" class="Sonata\AdminBundle\Menu\Matcher\Voter\ActiveVoter">
      <tag name="knp_menu.voter"/>
    </service>
    <service id="sonata.admin.security.handler.noop" class="Sonata\AdminBundle\Security\Handler\NoopSecurityHandler" public="false"/>
    <service id="sonata.admin.security.handler.role" class="Sonata\AdminBundle\Security\Handler\RoleSecurityHandler" public="false">
      <argument type="service" id="security.authorization_checker"/>
      <argument type="collection">
        <argument>ROLE_SUPER_ADMIN</argument>
      </argument>
    </service>
    <service id="sonata.admin.security.handler.acl" class="Sonata\AdminBundle\Security\Handler\AclSecurityHandler" public="false">
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="security.authorization_checker"/>
      <argument>null</argument>
      <argument>Sonata\AdminBundle\Security\Acl\Permission\MaskBuilder</argument>
      <argument type="collection">
        <argument>ROLE_SUPER_ADMIN</argument>
      </argument>
      <call method="setAdminPermissions">
        <argument type="collection">
          <argument>CREATE</argument>
          <argument>LIST</argument>
          <argument>DELETE</argument>
          <argument>UNDELETE</argument>
          <argument>EXPORT</argument>
          <argument>OPERATOR</argument>
          <argument>MASTER</argument>
        </argument>
      </call>
      <call method="setObjectPermissions">
        <argument type="collection">
          <argument>VIEW</argument>
          <argument>EDIT</argument>
          <argument>DELETE</argument>
          <argument>UNDELETE</argument>
          <argument>OPERATOR</argument>
          <argument>MASTER</argument>
          <argument>OWNER</argument>
        </argument>
      </call>
    </service>
    <service id="sonata.admin.manipulator.acl.admin" class="Sonata\AdminBundle\Util\AdminAclManipulator">
      <argument>Sonata\AdminBundle\Security\Acl\Permission\MaskBuilder</argument>
    </service>
    <service id="sonata.admin.object.manipulator.acl.admin" class="Sonata\AdminBundle\Util\AdminObjectAclManipulator">
      <argument type="service" id="form.factory"/>
      <argument>Sonata\AdminBundle\Security\Acl\Permission\MaskBuilder</argument>
    </service>
    <service id="easyadmin.cache.manager" class="JavierEguiluz\Bundle\EasyAdminBundle\Cache\CacheManager">
      <argument>D:\wamp64\www\SiteSymfony\SonataBackOffice\var\cache\dev/easy_admin</argument>
    </service>
    <service id="easyadmin.cache.config_warmer" class="JavierEguiluz\Bundle\EasyAdminBundle\Cache\ConfigWarmer" public="false">
      <tag name="kernel.cache_warmer" priority="-2048"/>
      <argument type="service" id="easyadmin.config.manager"/>
    </service>
    <service id="easyadmin.config.manager" class="JavierEguiluz\Bundle\EasyAdminBundle\Configuration\ConfigManager">
      <argument type="service" id="service_container"/>
    </service>
    <service id="easyadmin.query_builder" class="JavierEguiluz\Bundle\EasyAdminBundle\Search\QueryBuilder">
      <argument type="service" id="doctrine"/>
    </service>
    <service id="easyadmin.finder" class="JavierEguiluz\Bundle\EasyAdminBundle\Search\Finder" public="false">
      <argument type="service" id="easyadmin.query_builder"/>
      <argument type="service" id="easyadmin.paginator"/>
    </service>
    <service id="easyadmin.autocomplete" class="JavierEguiluz\Bundle\EasyAdminBundle\Search\Autocomplete">
      <argument type="service" id="easyadmin.config.manager"/>
      <argument type="service" id="easyadmin.finder"/>
      <argument type="service" id="property_accessor"/>
    </service>
    <service id="easyadmin.paginator" class="JavierEguiluz\Bundle\EasyAdminBundle\Search\Paginator"/>
    <service id="easyadmin.twig.extension" class="JavierEguiluz\Bundle\EasyAdminBundle\Twig\EasyAdminTwigExtension" public="false">
      <tag name="twig.extension"/>
      <argument type="service" id="easyadmin.config.manager"/>
      <argument type="service" id="property_accessor"/>
      <argument>true</argument>
      <argument type="service" id="security.logout_url_generator" on-invalid="null"/>
    </service>
    <service id="easyadmin.listener.controller" class="JavierEguiluz\Bundle\EasyAdminBundle\EventListener\ControllerListener">
      <tag name="kernel.event_listener" event="kernel.controller" method="onKernelController"/>
      <argument type="service" id="easyadmin.config.manager"/>
      <argument type="service" id="debug.controller_resolver"/>
    </service>
    <service id="easyadmin.listener.request_post_initialize" class="JavierEguiluz\Bundle\EasyAdminBundle\EventListener\RequestPostInitializeListener">
      <tag name="kernel.event_listener" event="easy_admin.post_initialize" method="initializeRequest"/>
      <argument type="service" id="doctrine"/>
      <argument type="service" id="request_stack" on-invalid="null"/>
    </service>
    <service id="easyadmin.data_collector" class="JavierEguiluz\Bundle\EasyAdminBundle\DataCollector\EasyAdminDataCollector" public="false">
      <tag name="data_collector" template="@EasyAdmin/data_collector/easyadmin.html.twig" id="easyadmin"/>
      <argument type="service" id="easyadmin.config.manager"/>
    </service>
    <service id="easyadmin.form.type" class="JavierEguiluz\Bundle\EasyAdminBundle\Form\Type\EasyAdminFormType">
      <tag name="form.type"/>
      <argument type="service" id="easyadmin.config.manager"/>
      <argument type="collection">
        <argument key="4" type="service" id="easyadmin.form.type.configurator.autocomplete"/>
        <argument key="3" type="service" id="easyadmin.form.type.configurator.collection"/>
        <argument key="2" type="service" id="easyadmin.form.type.configurator.checkbox"/>
        <argument key="1" type="service" id="easyadmin.form.type.configurator.required_option"/>
        <argument key="0" type="service" id="easyadmin.form.type.configurator.entity"/>
      </argument>
    </service>
    <service id="easyadmin.form.type.autocomplete" class="JavierEguiluz\Bundle\EasyAdminBundle\Form\Type\EasyAdminAutocompleteType">
      <tag name="form.type" alias="easyadmin_autocomplete"/>
      <argument type="service" id="easyadmin.config.manager"/>
    </service>
    <service id="easyadmin.form.type.divider" class="JavierEguiluz\Bundle\EasyAdminBundle\Form\Type\EasyAdminDividerType">
      <tag name="form.type" alias="easyadmin_divider"/>
    </service>
    <service id="easyadmin.form.type.section" class="JavierEguiluz\Bundle\EasyAdminBundle\Form\Type\EasyAdminSectionType">
      <tag name="form.type" alias="easyadmin_section"/>
    </service>
    <service id="easyadmin.form.type.group" class="JavierEguiluz\Bundle\EasyAdminBundle\Form\Type\EasyAdminGroupType">
      <tag name="form.type" alias="easyadmin_group"/>
    </service>
    <service id="easyadmin.form.type.extension" class="JavierEguiluz\Bundle\EasyAdminBundle\Form\Extension\EasyAdminExtension">
      <tag name="form.type_extension" alias="form" extended_type="Symfony\Component\Form\Extension\Core\Type\FormType" extended-type="Symfony\Component\Form\Extension\Core\Type\FormType"/>
      <argument type="service" id="request_stack" on-invalid="null"/>
    </service>
    <service id="easyadmin.form.type_guesser_chain" class="Symfony\Component\Form\FormTypeGuesserChain" public="false">
      <argument type="collection">
        <argument type="service" id="form.type_guesser.validator"/>
        <argument type="service" id="form.type_guesser.doctrine"/>
      </argument>
    </service>
    <service id="easyadmin.form.type.configurator.autocomplete" class="JavierEguiluz\Bundle\EasyAdminBundle\Form\Type\Configurator\AutocompleteTypeConfigurator" public="false">
      <tag name="easyadmin.form.type.configurator" priority="30"/>
    </service>
    <service id="easyadmin.form.type.configurator.collection" class="JavierEguiluz\Bundle\EasyAdminBundle\Form\Type\Configurator\CollectionTypeConfigurator" public="false">
      <tag name="easyadmin.form.type.configurator" priority="20"/>
    </service>
    <service id="easyadmin.form.type.configurator.checkbox" class="JavierEguiluz\Bundle\EasyAdminBundle\Form\Type\Configurator\CheckboxTypeConfigurator" public="false">
      <tag name="easyadmin.form.type.configurator" priority="10"/>
    </service>
    <service id="easyadmin.form.type.configurator.required_option" class="JavierEguiluz\Bundle\EasyAdminBundle\Form\Type\Configurator\RequiredOptionConfigurator" public="false">
      <tag name="easyadmin.form.type.configurator" priority="-10"/>
      <argument type="service" id="easyadmin.form.type_guesser_chain"/>
    </service>
    <service id="easyadmin.form.type.configurator.entity" class="JavierEguiluz\Bundle\EasyAdminBundle\Form\Type\Configurator\EntityTypeConfigurator" public="false">
      <tag name="easyadmin.form.type.configurator" priority="-20"/>
      <argument type="service" id="easyadmin.form.type_guesser_chain"/>
    </service>
    <service id="sonata.easy_extends.generator.bundle" class="Sonata\EasyExtendsBundle\Generator\BundleGenerator"/>
    <service id="sonata.easy_extends.generator.orm" class="Sonata\EasyExtendsBundle\Generator\OrmGenerator"/>
    <service id="sonata.easy_extends.generator.odm" class="Sonata\EasyExtendsBundle\Generator\OdmGenerator"/>
    <service id="sonata.easy_extends.generator.phpcr" class="Sonata\EasyExtendsBundle\Generator\PHPCRGenerator"/>
    <service id="sonata.easy_extends.generator.serializer" class="Sonata\EasyExtendsBundle\Generator\SerializerGenerator"/>
    <service id="sonata.easy_extends.doctrine.mapper" class="Sonata\EasyExtendsBundle\Mapper\DoctrineORMMapper">
      <tag name="doctrine.event_subscriber"/>
      <argument type="service" id="doctrine"/>
      <argument type="collection"/>
    </service>
    <service id="twig.extension.dump" class="Symfony\Bridge\Twig\Extension\DumpExtension" public="false">
      <tag name="twig.extension"/>
      <argument type="service" id="var_dumper.cloner"/>
      <argument type="service" id="var_dumper.html_dumper"/>
    </service>
    <service id="data_collector.dump" class="Symfony\Component\HttpKernel\DataCollector\DumpDataCollector">
      <tag name="data_collector" id="dump" template="@Debug/Profiler/dump.html.twig" priority="240"/>
      <argument type="service" id="debug.stopwatch" on-invalid="ignore"/>
      <argument type="service" id="debug.file_link_formatter" on-invalid="ignore"/>
      <argument>UTF-8</argument>
      <argument type="service" id="request_stack"/>
      <argument>null</argument>
    </service>
    <service id="debug.dump_listener" class="Symfony\Component\HttpKernel\EventListener\DumpListener">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="var_dumper.cloner"/>
      <argument type="service" id="var_dumper.cli_dumper"/>
    </service>
    <service id="var_dumper.cloner" class="Symfony\Component\VarDumper\Cloner\VarCloner">
      <call method="setMaxItems">
        <argument>2500</argument>
      </call>
      <call method="setMaxString">
        <argument>-1</argument>
      </call>
    </service>
    <service id="var_dumper.cli_dumper" class="Symfony\Component\VarDumper\Dumper\CliDumper">
      <argument>null</argument>
      <argument>UTF-8</argument>
      <argument>0</argument>
    </service>
    <service id="var_dumper.html_dumper" class="Symfony\Component\VarDumper\Dumper\HtmlDumper" public="false">
      <argument>null</argument>
      <argument>UTF-8</argument>
      <argument>0</argument>
      <call method="setDisplayOptions">
        <argument type="collection">
          <argument key="fileLinkFormat" type="service" id="debug.file_link_formatter" on-invalid="ignore"/>
        </argument>
      </call>
    </service>
    <service id="2_8f3905377c51214190312caee89e2a3dfeb59a416ddd54cedebb26eacb17bb5f" class="Symfony\Component\VarDumper\Dumper\HtmlDumper" public="false">
      <argument>null</argument>
      <argument>UTF-8</argument>
      <argument>1</argument>
      <call method="setDisplayOptions">
        <argument type="collection">
          <argument key="maxStringLength">4096</argument>
          <argument key="fileLinkFormat" type="service" id="debug.file_link_formatter"/>
        </argument>
      </call>
    </service>
    <service id="1_8f3905377c51214190312caee89e2a3dfeb59a416ddd54cedebb26eacb17bb5f" class="Symfony\Bundle\WebProfilerBundle\Csp\NonceGenerator" public="false"/>
    <service id="web_profiler.controller.profiler" class="Symfony\Bundle\WebProfilerBundle\Controller\ProfilerController">
      <argument type="service" id="router.default" on-invalid="null"/>
      <argument type="service" id="profiler" on-invalid="null"/>
      <argument type="service" id="twig"/>
      <argument type="collection">
        <argument key="data_collector.request" type="collection">
          <argument>request</argument>
          <argument>@WebProfiler/Collector/request.html.twig</argument>
        </argument>
        <argument key="data_collector.time" type="collection">
          <argument>time</argument>
          <argument>@WebProfiler/Collector/time.html.twig</argument>
        </argument>
        <argument key="data_collector.memory" type="collection">
          <argument>memory</argument>
          <argument>@WebProfiler/Collector/memory.html.twig</argument>
        </argument>
        <argument key="data_collector.ajax" type="collection">
          <argument>ajax</argument>
          <argument>@WebProfiler/Collector/ajax.html.twig</argument>
        </argument>
        <argument key="data_collector.form" type="collection">
          <argument>form</argument>
          <argument>@WebProfiler/Collector/form.html.twig</argument>
        </argument>
        <argument key="data_collector.exception" type="collection">
          <argument>exception</argument>
          <argument>@WebProfiler/Collector/exception.html.twig</argument>
        </argument>
        <argument key="data_collector.logger" type="collection">
          <argument>logger</argument>
          <argument>@WebProfiler/Collector/logger.html.twig</argument>
        </argument>
        <argument key="data_collector.events" type="collection">
          <argument>events</argument>
          <argument>@WebProfiler/Collector/events.html.twig</argument>
        </argument>
        <argument key="data_collector.router" type="collection">
          <argument>router</argument>
          <argument>@WebProfiler/Collector/router.html.twig</argument>
        </argument>
        <argument key="data_collector.cache" type="collection">
          <argument>cache</argument>
          <argument>@WebProfiler/Collector/cache.html.twig</argument>
        </argument>
        <argument key="data_collector.translation" type="collection">
          <argument>translation</argument>
          <argument>@WebProfiler/Collector/translation.html.twig</argument>
        </argument>
        <argument key="data_collector.security" type="collection">
          <argument>security</argument>
          <argument>@Security/Collector/security.html.twig</argument>
        </argument>
        <argument key="data_collector.twig" type="collection">
          <argument>twig</argument>
          <argument>@WebProfiler/Collector/twig.html.twig</argument>
        </argument>
        <argument key="data_collector.doctrine" type="collection">
          <argument>db</argument>
          <argument>@Doctrine/Collector/db.html.twig</argument>
        </argument>
        <argument key="swiftmailer.data_collector" type="collection">
          <argument>swiftmailer</argument>
          <argument>@Swiftmailer/Collector/swiftmailer.html.twig</argument>
        </argument>
        <argument key="data_collector.dump" type="collection">
          <argument>dump</argument>
          <argument>@Debug/Profiler/dump.html.twig</argument>
        </argument>
        <argument key="sonata.block.data_collector" type="collection">
          <argument>block</argument>
          <argument>SonataBlockBundle:Profiler:block.html.twig</argument>
        </argument>
        <argument key="easyadmin.data_collector" type="collection">
          <argument>easyadmin</argument>
          <argument>@EasyAdmin/data_collector/easyadmin.html.twig</argument>
        </argument>
        <argument key="data_collector.config" type="collection">
          <argument>config</argument>
          <argument>@WebProfiler/Collector/config.html.twig</argument>
        </argument>
      </argument>
      <argument>bottom</argument>
      <argument type="service" id="web_profiler.csp.handler"/>
      <argument>D:\wamp64\www\SiteSymfony\SonataBackOffice</argument>
    </service>
    <service id="web_profiler.controller.router" class="Symfony\Bundle\WebProfilerBundle\Controller\RouterController">
      <argument type="service" id="profiler" on-invalid="null"/>
      <argument type="service" id="twig"/>
      <argument type="service" id="router.default" on-invalid="null"/>
    </service>
    <service id="web_profiler.controller.exception" class="Symfony\Bundle\WebProfilerBundle\Controller\ExceptionController">
      <argument type="service" id="profiler" on-invalid="null"/>
      <argument type="service" id="twig"/>
      <argument>true</argument>
    </service>
    <service id="web_profiler.csp.handler" class="Symfony\Bundle\WebProfilerBundle\Csp\ContentSecurityPolicyHandler" public="false">
      <argument type="service" id="1_8f3905377c51214190312caee89e2a3dfeb59a416ddd54cedebb26eacb17bb5f"/>
    </service>
    <service id="twig.extension.webprofiler" class="Symfony\Bundle\WebProfilerBundle\Twig\WebProfilerExtension" public="false">
      <tag name="twig.extension"/>
      <argument type="service" id="2_8f3905377c51214190312caee89e2a3dfeb59a416ddd54cedebb26eacb17bb5f"/>
    </service>
    <service id="web_profiler.debug_toolbar" class="Symfony\Bundle\WebProfilerBundle\EventListener\WebDebugToolbarListener">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="twig"/>
      <argument>false</argument>
      <argument>2</argument>
      <argument>bottom</argument>
      <argument type="service" id="router.default" on-invalid="ignore"/>
      <argument>^/(app(_[\w]+)?\.php/)?_wdt</argument>
      <argument type="service" id="web_profiler.csp.handler"/>
    </service>
    <service id="sensio_distribution.security_checker" class="SensioLabs\Security\SecurityChecker"/>
    <service id="sensio_distribution.security_checker.command" class="SensioLabs\Security\Command\SecurityCheckerCommand">
      <tag name="console.command"/>
      <argument type="service" id="sensio_distribution.security_checker"/>
    </service>
    <service id="web_server.command.server_run" class="Symfony\Bundle\WebServerBundle\Command\ServerRunCommand" public="false">
      <tag name="console.command"/>
      <argument>D:\wamp64\www\SiteSymfony\SonataBackOffice/web</argument>
      <argument>dev</argument>
    </service>
    <service id="web_server.command.server_start" class="Symfony\Bundle\WebServerBundle\Command\ServerStartCommand" public="false">
      <tag name="console.command"/>
      <argument>D:\wamp64\www\SiteSymfony\SonataBackOffice/web</argument>
      <argument>dev</argument>
    </service>
    <service id="web_server.command.server_stop" class="Symfony\Bundle\WebServerBundle\Command\ServerStopCommand" public="false">
      <tag name="console.command"/>
    </service>
    <service id="web_server.command.server_status" class="Symfony\Bundle\WebServerBundle\Command\ServerStatusCommand" public="false">
      <tag name="console.command"/>
    </service>
    <service id="service_locator.6f24348b77840ec12a20c22a3f985cf7" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection"/>
    </service>
    <service id="service_locator.20ccd3ddf0f78b2202986f924e362585" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="translation.loader.csv" type="service" id="translation.loader.csv"/>
        <argument key="translation.loader.dat" type="service" id="translation.loader.dat"/>
        <argument key="translation.loader.ini" type="service" id="translation.loader.ini"/>
        <argument key="translation.loader.json" type="service" id="translation.loader.json"/>
        <argument key="translation.loader.mo" type="service" id="translation.loader.mo"/>
        <argument key="translation.loader.php" type="service" id="translation.loader.php"/>
        <argument key="translation.loader.po" type="service" id="translation.loader.po"/>
        <argument key="translation.loader.qt" type="service" id="translation.loader.qt"/>
        <argument key="translation.loader.res" type="service" id="translation.loader.res"/>
        <argument key="translation.loader.xliff" type="service" id="translation.loader.xliff"/>
        <argument key="translation.loader.yml" type="service" id="translation.loader.yml"/>
      </argument>
    </service>
    <service id="service_locator.e677a4bdd927283f0a18f978db967e8d" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="AppBundle\Form\GroupType" type="service" id="app_group_registration"/>
        <argument key="AppBundle\Form\RegistrationType" type="service" id="app.form.registration"/>
        <argument key="FOS\UserBundle\Form\Type\ChangePasswordFormType" type="service" id="fos_user.change_password.form.type"/>
        <argument key="FOS\UserBundle\Form\Type\GroupFormType" type="service" id="fos_user.group.form.type"/>
        <argument key="FOS\UserBundle\Form\Type\ProfileFormType" type="service" id="fos_user.profile.form.type"/>
        <argument key="FOS\UserBundle\Form\Type\RegistrationFormType" type="service" id="fos_user.registration.form.type"/>
        <argument key="FOS\UserBundle\Form\Type\ResettingFormType" type="service" id="fos_user.resetting.form.type"/>
        <argument key="FOS\UserBundle\Form\Type\UsernameFormType" type="service" id="fos_user.username_form_type"/>
        <argument key="JavierEguiluz\Bundle\EasyAdminBundle\Form\Type\EasyAdminAutocompleteType" type="service" id="easyadmin.form.type.autocomplete"/>
        <argument key="JavierEguiluz\Bundle\EasyAdminBundle\Form\Type\EasyAdminDividerType" type="service" id="easyadmin.form.type.divider"/>
        <argument key="JavierEguiluz\Bundle\EasyAdminBundle\Form\Type\EasyAdminFormType" type="service" id="easyadmin.form.type"/>
        <argument key="JavierEguiluz\Bundle\EasyAdminBundle\Form\Type\EasyAdminGroupType" type="service" id="easyadmin.form.type.group"/>
        <argument key="JavierEguiluz\Bundle\EasyAdminBundle\Form\Type\EasyAdminSectionType" type="service" id="easyadmin.form.type.section"/>
        <argument key="Sonata\AdminBundle\Form\Type\AdminType" type="service" id="sonata.admin.form.type.admin"/>
        <argument key="Sonata\AdminBundle\Form\Type\ChoiceFieldMaskType" type="service" id="sonata.admin.doctrine_orm.form.type.choice_field_mask"/>
        <argument key="Sonata\AdminBundle\Form\Type\CollectionType" type="service" id="sonata.admin.form.type.collection"/>
        <argument key="Sonata\AdminBundle\Form\Type\Filter\ChoiceType" type="service" id="sonata.admin.form.filter.type.choice"/>
        <argument key="Sonata\AdminBundle\Form\Type\Filter\DateRangeType" type="service" id="sonata.admin.form.filter.type.daterange"/>
        <argument key="Sonata\AdminBundle\Form\Type\Filter\DateTimeRangeType" type="service" id="sonata.admin.form.filter.type.datetime_range"/>
        <argument key="Sonata\AdminBundle\Form\Type\Filter\DateTimeType" type="service" id="sonata.admin.form.filter.type.datetime"/>
        <argument key="Sonata\AdminBundle\Form\Type\Filter\DateType" type="service" id="sonata.admin.form.filter.type.date"/>
        <argument key="Sonata\AdminBundle\Form\Type\Filter\DefaultType" type="service" id="sonata.admin.form.filter.type.default"/>
        <argument key="Sonata\AdminBundle\Form\Type\Filter\NumberType" type="service" id="sonata.admin.form.filter.type.number"/>
        <argument key="Sonata\AdminBundle\Form\Type\ModelAutocompleteType" type="service" id="sonata.admin.form.type.model_autocomplete"/>
        <argument key="Sonata\AdminBundle\Form\Type\ModelHiddenType" type="service" id="sonata.admin.form.type.model_hidden"/>
        <argument key="Sonata\AdminBundle\Form\Type\ModelListType" type="service" id="sonata.admin.form.type.model_list"/>
        <argument key="Sonata\AdminBundle\Form\Type\ModelReferenceType" type="service" id="sonata.admin.form.type.model_reference"/>
        <argument key="Sonata\AdminBundle\Form\Type\ModelType" type="service" id="sonata.admin.form.type.model_choice"/>
        <argument key="Sonata\BlockBundle\Form\Type\ContainerTemplateType" type="service" id="sonata.block.form.type.container_template"/>
        <argument key="Sonata\BlockBundle\Form\Type\ServiceListType" type="service" id="sonata.block.form.type.block"/>
        <argument key="Sonata\CoreBundle\Form\Type\BooleanType" type="service" id="sonata.core.form.type.boolean"/>
        <argument key="Sonata\CoreBundle\Form\Type\CollectionType" type="service" id="sonata.core.form.type.collection"/>
        <argument key="Sonata\CoreBundle\Form\Type\ColorSelectorType" type="service" id="sonata.core.form.type.color_selector"/>
        <argument key="Sonata\CoreBundle\Form\Type\DatePickerType" type="service" id="sonata.core.form.type.date_picker"/>
        <argument key="Sonata\CoreBundle\Form\Type\DateRangePickerType" type="service" id="sonata.core.form.type.date_range_picker"/>
        <argument key="Sonata\CoreBundle\Form\Type\DateRangeType" type="service" id="sonata.core.form.type.date_range"/>
        <argument key="Sonata\CoreBundle\Form\Type\DateTimePickerType" type="service" id="sonata.core.form.type.datetime_picker"/>
        <argument key="Sonata\CoreBundle\Form\Type\DateTimeRangePickerType" type="service" id="sonata.core.form.type.datetime_range_picker"/>
        <argument key="Sonata\CoreBundle\Form\Type\DateTimeRangeType" type="service" id="sonata.core.form.type.datetime_range"/>
        <argument key="Sonata\CoreBundle\Form\Type\EqualType" type="service" id="sonata.core.form.type.equal"/>
        <argument key="Sonata\CoreBundle\Form\Type\ImmutableArrayType" type="service" id="sonata.core.form.type.array"/>
        <argument key="Sonata\CoreBundle\Form\Type\TranslatableChoiceType" type="service" id="sonata.core.form.type.translatable_choice"/>
        <argument key="Symfony\Bridge\Doctrine\Form\Type\EntityType" type="service" id="form.type.entity"/>
        <argument key="Symfony\Component\Form\Extension\Core\Type\ChoiceType" type="service" id="form.type.choice"/>
        <argument key="Symfony\Component\Form\Extension\Core\Type\FormType" type="service" id="form.type.form"/>
      </argument>
    </service>
    <service id="monolog.logger.request" class="Symfony\Bridge\Monolog\Logger">
      <argument>request</argument>
      <call method="pushProcessor">
        <argument type="service" id="debug.log_processor"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.server_log"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.console"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.main"/>
      </call>
    </service>
    <service id="monolog.logger.console" class="Symfony\Bridge\Monolog\Logger">
      <argument>console</argument>
      <call method="pushProcessor">
        <argument type="service" id="debug.log_processor"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.server_log"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.main"/>
      </call>
    </service>
    <service id="monolog.logger.cache" class="Symfony\Bridge\Monolog\Logger">
      <argument>cache</argument>
      <call method="pushProcessor">
        <argument type="service" id="debug.log_processor"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.server_log"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.console"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.main"/>
      </call>
    </service>
    <service id="monolog.logger.templating" class="Symfony\Bridge\Monolog\Logger">
      <argument>templating</argument>
      <call method="pushProcessor">
        <argument type="service" id="debug.log_processor"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.server_log"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.console"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.main"/>
      </call>
    </service>
    <service id="monolog.logger.translation" class="Symfony\Bridge\Monolog\Logger">
      <argument>translation</argument>
      <call method="pushProcessor">
        <argument type="service" id="debug.log_processor"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.server_log"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.console"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.main"/>
      </call>
    </service>
    <service id="monolog.logger.profiler" class="Symfony\Bridge\Monolog\Logger">
      <argument>profiler</argument>
      <call method="pushProcessor">
        <argument type="service" id="debug.log_processor"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.server_log"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.console"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.main"/>
      </call>
    </service>
    <service id="monolog.logger.php" class="Symfony\Bridge\Monolog\Logger">
      <argument>php</argument>
      <call method="pushProcessor">
        <argument type="service" id="debug.log_processor"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.server_log"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.console"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.main"/>
      </call>
    </service>
    <service id="monolog.logger.event" class="Symfony\Bridge\Monolog\Logger">
      <argument>event</argument>
      <call method="pushProcessor">
        <argument type="service" id="debug.log_processor"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.server_log"/>
      </call>
    </service>
    <service id="monolog.logger.router" class="Symfony\Bridge\Monolog\Logger">
      <argument>router</argument>
      <call method="pushProcessor">
        <argument type="service" id="debug.log_processor"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.server_log"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.console"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.main"/>
      </call>
    </service>
    <service id="monolog.logger.security" class="Symfony\Bridge\Monolog\Logger">
      <argument>security</argument>
      <call method="pushProcessor">
        <argument type="service" id="debug.log_processor"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.server_log"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.console"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.main"/>
      </call>
    </service>
    <service id="monolog.logger.doctrine" class="Symfony\Bridge\Monolog\Logger">
      <argument>doctrine</argument>
      <call method="pushProcessor">
        <argument type="service" id="debug.log_processor"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.server_log"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.main"/>
      </call>
    </service>
    <service id="monolog.handler.null_internal" class="Monolog\Handler\NullHandler"/>
    <service id="form.extension" class="Sonata\CoreBundle\Form\Extension\DependencyInjectionExtension">
      <argument type="service" id="service_container"/>
      <argument type="collection">
        <argument key="AppBundle\Form\RegistrationType">app.form.registration</argument>
        <argument key="AppBundle\Form\GroupType">app_group_registration</argument>
        <argument key="FOS\UserBundle\Form\Type\ChangePasswordFormType">fos_user.change_password.form.type</argument>
        <argument key="Symfony\Component\Form\Extension\Core\Type\FormType">form.type.form</argument>
        <argument key="Symfony\Component\Form\Extension\Core\Type\ChoiceType">form.type.choice</argument>
        <argument key="Symfony\Bridge\Doctrine\Form\Type\EntityType">form.type.entity</argument>
        <argument key="FOS\UserBundle\Form\Type\UsernameFormType">fos_user.username_form_type</argument>
        <argument key="FOS\UserBundle\Form\Type\ProfileFormType">fos_user.profile.form.type</argument>
        <argument key="FOS\UserBundle\Form\Type\RegistrationFormType">fos_user.registration.form.type</argument>
        <argument key="FOS\UserBundle\Form\Type\ResettingFormType">fos_user.resetting.form.type</argument>
        <argument key="FOS\UserBundle\Form\Type\GroupFormType">fos_user.group.form.type</argument>
        <argument key="Sonata\CoreBundle\Form\Type\ImmutableArrayType">sonata.core.form.type.array</argument>
        <argument key="Sonata\CoreBundle\Form\Type\BooleanType">sonata.core.form.type.boolean</argument>
        <argument key="Sonata\CoreBundle\Form\Type\CollectionType">sonata.core.form.type.collection</argument>
        <argument key="Sonata\CoreBundle\Form\Type\TranslatableChoiceType">sonata.core.form.type.translatable_choice</argument>
        <argument key="Sonata\CoreBundle\Form\Type\DateRangeType">sonata.core.form.type.date_range</argument>
        <argument key="Sonata\CoreBundle\Form\Type\DateTimeRangeType">sonata.core.form.type.datetime_range</argument>
        <argument key="Sonata\CoreBundle\Form\Type\DatePickerType">sonata.core.form.type.date_picker</argument>
        <argument key="Sonata\CoreBundle\Form\Type\DateTimePickerType">sonata.core.form.type.datetime_picker</argument>
        <argument key="Sonata\CoreBundle\Form\Type\DateRangePickerType">sonata.core.form.type.date_range_picker</argument>
        <argument key="Sonata\CoreBundle\Form\Type\DateTimeRangePickerType">sonata.core.form.type.datetime_range_picker</argument>
        <argument key="Sonata\CoreBundle\Form\Type\EqualType">sonata.core.form.type.equal</argument>
        <argument key="Sonata\CoreBundle\Form\Type\ColorSelectorType">sonata.core.form.type.color_selector</argument>
        <argument key="Sonata\BlockBundle\Form\Type\ServiceListType">sonata.block.form.type.block</argument>
        <argument key="Sonata\BlockBundle\Form\Type\ContainerTemplateType">sonata.block.form.type.container_template</argument>
        <argument key="Sonata\AdminBundle\Form\Type\AdminType">sonata.admin.form.type.admin</argument>
        <argument key="Sonata\AdminBundle\Form\Type\ModelType">sonata.admin.form.type.model_choice</argument>
        <argument key="Sonata\AdminBundle\Form\Type\ModelListType">sonata.admin.form.type.model_list</argument>
        <argument key="Sonata\AdminBundle\Form\Type\ModelReferenceType">sonata.admin.form.type.model_reference</argument>
        <argument key="Sonata\AdminBundle\Form\Type\ModelHiddenType">sonata.admin.form.type.model_hidden</argument>
        <argument key="Sonata\AdminBundle\Form\Type\ModelAutocompleteType">sonata.admin.form.type.model_autocomplete</argument>
        <argument key="Sonata\AdminBundle\Form\Type\CollectionType">sonata.admin.form.type.collection</argument>
        <argument key="Sonata\AdminBundle\Form\Type\ChoiceFieldMaskType">sonata.admin.doctrine_orm.form.type.choice_field_mask</argument>
        <argument key="Sonata\AdminBundle\Form\Type\Filter\NumberType">sonata.admin.form.filter.type.number</argument>
        <argument key="Sonata\AdminBundle\Form\Type\Filter\ChoiceType">sonata.admin.form.filter.type.choice</argument>
        <argument key="Sonata\AdminBundle\Form\Type\Filter\DefaultType">sonata.admin.form.filter.type.default</argument>
        <argument key="Sonata\AdminBundle\Form\Type\Filter\DateType">sonata.admin.form.filter.type.date</argument>
        <argument key="Sonata\AdminBundle\Form\Type\Filter\DateRangeType">sonata.admin.form.filter.type.daterange</argument>
        <argument key="Sonata\AdminBundle\Form\Type\Filter\DateTimeType">sonata.admin.form.filter.type.datetime</argument>
        <argument key="Sonata\AdminBundle\Form\Type\Filter\DateTimeRangeType">sonata.admin.form.filter.type.datetime_range</argument>
        <argument key="JavierEguiluz\Bundle\EasyAdminBundle\Form\Type\EasyAdminFormType">easyadmin.form.type</argument>
        <argument key="JavierEguiluz\Bundle\EasyAdminBundle\Form\Type\EasyAdminAutocompleteType">easyadmin.form.type.autocomplete</argument>
        <argument key="JavierEguiluz\Bundle\EasyAdminBundle\Form\Type\EasyAdminDividerType">easyadmin.form.type.divider</argument>
        <argument key="JavierEguiluz\Bundle\EasyAdminBundle\Form\Type\EasyAdminSectionType">easyadmin.form.type.section</argument>
        <argument key="JavierEguiluz\Bundle\EasyAdminBundle\Form\Type\EasyAdminGroupType">easyadmin.form.type.group</argument>
      </argument>
      <argument type="collection">
        <argument key="Symfony\Component\Form\Extension\Core\Type\FormType" type="collection">
          <argument>form.type_extension.form.http_foundation</argument>
          <argument>form.type_extension.form.validator</argument>
          <argument>form.type_extension.upload.validator</argument>
          <argument>form.type_extension.csrf</argument>
          <argument>form.type_extension.form.data_collector</argument>
          <argument>sonata.admin.form.extension.field</argument>
          <argument>sonata.admin.form.extension.field.mopa</argument>
          <argument>easyadmin.form.type.extension</argument>
        </argument>
        <argument key="Symfony\Component\Form\Extension\Core\Type\RepeatedType" type="collection">
          <argument>form.type_extension.repeated.validator</argument>
        </argument>
        <argument key="Symfony\Component\Form\Extension\Core\Type\SubmitType" type="collection">
          <argument>form.type_extension.submit.validator</argument>
        </argument>
        <argument key="Symfony\Component\Form\Extension\Core\Type\ChoiceType" type="collection">
          <argument>sonata.admin.form.extension.choice</argument>
        </argument>
      </argument>
      <argument type="collection">
        <argument>form.type_guesser.validator</argument>
        <argument>form.type_guesser.doctrine</argument>
      </argument>
      <argument type="collection">
        <argument key="form">Symfony\Component\Form\Extension\Core\Type\FormType</argument>
        <argument key="birthday">Symfony\Component\Form\Extension\Core\Type\BirthdayType</argument>
        <argument key="checkbox">Symfony\Component\Form\Extension\Core\Type\CheckboxType</argument>
        <argument key="choice">Symfony\Component\Form\Extension\Core\Type\ChoiceType</argument>
        <argument key="collection">Symfony\Component\Form\Extension\Core\Type\CollectionType</argument>
        <argument key="country">Symfony\Component\Form\Extension\Core\Type\CountryType</argument>
        <argument key="date">Symfony\Component\Form\Extension\Core\Type\DateType</argument>
        <argument key="datetime">Symfony\Component\Form\Extension\Core\Type\DateTimeType</argument>
        <argument key="email">Symfony\Component\Form\Extension\Core\Type\EmailType</argument>
        <argument key="file">Symfony\Component\Form\Extension\Core\Type\FileType</argument>
        <argument key="hidden">Symfony\Component\Form\Extension\Core\Type\HiddenType</argument>
        <argument key="integer">Symfony\Component\Form\Extension\Core\Type\IntegerType</argument>
        <argument key="language">Symfony\Component\Form\Extension\Core\Type\LanguageType</argument>
        <argument key="locale">Symfony\Component\Form\Extension\Core\Type\LocaleType</argument>
        <argument key="money">Symfony\Component\Form\Extension\Core\Type\MoneyType</argument>
        <argument key="number">Symfony\Component\Form\Extension\Core\Type\NumberType</argument>
        <argument key="password">Symfony\Component\Form\Extension\Core\Type\PasswordType</argument>
        <argument key="percent">Symfony\Component\Form\Extension\Core\Type\PercentType</argument>
        <argument key="radio">Symfony\Component\Form\Extension\Core\Type\RadioType</argument>
        <argument key="repeated">Symfony\Component\Form\Extension\Core\Type\RepeatedType</argument>
        <argument key="search">Symfony\Component\Form\Extension\Core\Type\SearchType</argument>
        <argument key="textarea">Symfony\Component\Form\Extension\Core\Type\TextareaType</argument>
        <argument key="text">Symfony\Component\Form\Extension\Core\Type\TextType</argument>
        <argument key="time">Symfony\Component\Form\Extension\Core\Type\TimeType</argument>
        <argument key="timezone">Symfony\Component\Form\Extension\Core\Type\TimezoneType</argument>
        <argument key="url">Symfony\Component\Form\Extension\Core\Type\UrlType</argument>
        <argument key="button">Symfony\Component\Form\Extension\Core\Type\ButtonType</argument>
        <argument key="submit">Symfony\Component\Form\Extension\Core\Type\SubmitType</argument>
        <argument key="reset">Symfony\Component\Form\Extension\Core\Type\ResetType</argument>
        <argument key="currency">Symfony\Component\Form\Extension\Core\Type\CurrencyType</argument>
        <argument key="entity">Symfony\Bridge\Doctrine\Form\Type\EntityType</argument>
        <argument key="sonata_type_immutable_array">Sonata\CoreBundle\Form\Type\ImmutableArrayType</argument>
        <argument key="sonata_type_boolean">Sonata\CoreBundle\Form\Type\BooleanType</argument>
        <argument key="sonata_type_collection">Sonata\CoreBundle\Form\Type\CollectionType</argument>
        <argument key="sonata_type_translatable_choice">Sonata\CoreBundle\Form\Type\TranslatableChoiceType</argument>
        <argument key="sonata_type_date_range">Sonata\CoreBundle\Form\Type\DateRangeType</argument>
        <argument key="sonata_type_datetime_range">Sonata\CoreBundle\Form\Type\DateTimeRangeType</argument>
        <argument key="sonata_type_date_picker">Sonata\CoreBundle\Form\Type\DatePickerType</argument>
        <argument key="sonata_type_datetime_picker">Sonata\CoreBundle\Form\Type\DateTimePickerType</argument>
        <argument key="sonata_type_date_range_picker">Sonata\CoreBundle\Form\Type\DateRangePickerType</argument>
        <argument key="sonata_type_datetime_range_picker">Sonata\CoreBundle\Form\Type\DateTimeRangePickerType</argument>
        <argument key="sonata_type_equal">Sonata\CoreBundle\Form\Type\EqualType</argument>
        <argument key="sonata_type_color_selector">Sonata\CoreBundle\Form\Type\ColorSelectorType</argument>
        <argument key="sonata_block_service_choice">Sonata\BlockBundle\Form\Type\ServiceListType</argument>
        <argument key="sonata_type_container_template_choice">Sonata\BlockBundle\Form\Type\ContainerTemplateType</argument>
        <argument key="sonata_type_admin">Sonata\AdminBundle\Form\Type\AdminType</argument>
        <argument key="sonata_type_model">Sonata\AdminBundle\Form\Type\ModelType</argument>
        <argument key="sonata_type_model_list">Sonata\AdminBundle\Form\Type\ModelListType</argument>
        <argument key="sonata_type_model_reference">Sonata\AdminBundle\Form\Type\ModelReferenceType</argument>
        <argument key="sonata_type_model_hidden">Sonata\AdminBundle\Form\Type\ModelHiddenType</argument>
        <argument key="sonata_type_model_autocomplete">Sonata\AdminBundle\Form\Type\ModelAutocompleteType</argument>
        <argument key="sonata_type_native_collection">Sonata\AdminBundle\Form\Type\CollectionType</argument>
        <argument key="sonata_type_choice_field_mask">Sonata\AdminBundle\Form\Type\ChoiceFieldMaskType</argument>
        <argument key="sonata_type_filter_number">Sonata\AdminBundle\Form\Type\Filter\NumberType</argument>
        <argument key="sonata_type_filter_choice">Sonata\AdminBundle\Form\Type\Filter\ChoiceType</argument>
        <argument key="sonata_type_filter_default">Sonata\AdminBundle\Form\Type\Filter\DefaultType</argument>
        <argument key="sonata_type_filter_date">Sonata\AdminBundle\Form\Type\Filter\DateType</argument>
        <argument key="sonata_type_filter_date_range">Sonata\AdminBundle\Form\Type\Filter\DateRangeType</argument>
        <argument key="sonata_type_filter_datetime">Sonata\AdminBundle\Form\Type\Filter\DateTimeType</argument>
        <argument key="sonata_type_filter_datetime_range">Sonata\AdminBundle\Form\Type\Filter\DateTimeRangeType</argument>
        <argument key="tab">Mopa\Bundle\BootstrapBundle\Form\Type\TabType</argument>
      </argument>
      <argument type="collection">
        <argument key="form" type="collection">
          <argument>form.type_extension.form.http_foundation</argument>
          <argument>form.type_extension.form.validator</argument>
          <argument>form.type_extension.csrf</argument>
          <argument>form.type_extension.form.data_collector</argument>
          <argument>nelmio_api_doc.form.extension.description_form_type_extension</argument>
          <argument>sonata.admin.form.extension.field</argument>
          <argument>mopa_bootstrap.form.type_extension.help</argument>
          <argument>mopa_bootstrap.form.type_extension.legend</argument>
          <argument>mopa_bootstrap.form.type_extension.error</argument>
          <argument>mopa_bootstrap.form.type_extension.widget</argument>
          <argument>mopa_bootstrap.form.type_extension.horizontal</argument>
          <argument>mopa_bootstrap.form.type_extension.widget_collection</argument>
          <argument>mopa_bootstrap.form.type_extension.tabbed</argument>
        </argument>
        <argument key="repeated" type="collection">
          <argument>form.type_extension.repeated.validator</argument>
        </argument>
        <argument key="submit" type="collection">
          <argument>form.type_extension.submit.validator</argument>
        </argument>
        <argument key="choice" type="collection">
          <argument>sonata.admin.form.extension.choice</argument>
        </argument>
        <argument key="button" type="collection">
          <argument>mopa_bootstrap.form.type_extension.button</argument>
        </argument>
        <argument key="date" type="collection">
          <argument>mopa_bootstrap.form.type_extension.date</argument>
        </argument>
      </argument>
      <argument type="collection"/>
    </service>
    <service id="debug.event_dispatcher.inner" class="Symfony\Component\EventDispatcher\ContainerAwareEventDispatcher" public="false">
      <argument type="service" id="service_container"/>
    </service>
    <service id="debug.controller_resolver.inner" class="Symfony\Bundle\FrameworkBundle\Controller\ControllerResolver" public="false">
      <argument type="service" id="service_container"/>
      <argument type="service" id="controller_name_converter"/>
      <argument type="service" id="monolog.logger.request" on-invalid="ignore"/>
    </service>
    <service id="debug.argument_resolver.inner" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver" public="false">
      <argument type="service" id="argument_metadata_factory"/>
      <argument type="iterator">
        <argument type="service" id="argument_resolver.request_attribute"/>
        <argument type="service" id="argument_resolver.request"/>
        <argument type="service" id="argument_resolver.session"/>
        <argument type="service" id="security.user_value_resolver"/>
        <argument type="service" id="argument_resolver.service"/>
        <argument type="service" id="argument_resolver.default"/>
        <argument type="service" id="argument_resolver.variadic"/>
      </argument>
    </service>
    <service id="debug.security.access.decision_manager.inner" class="Symfony\Component\Security\Core\Authorization\AccessDecisionManager" public="false">
      <argument type="iterator">
        <argument type="service" id="security.access.authenticated_voter"/>
        <argument type="service" id="security.access.role_hierarchy_voter"/>
        <argument type="service" id="security.access.expression_voter"/>
      </argument>
      <argument>affirmative</argument>
      <argument>false</argument>
      <argument>true</argument>
    </service>
    <service id="service_locator.26ac001b3ede28481ac0de703666b4d7" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="twig" type="service" id="twig"/>
      </argument>
    </service>
    <service id="service_locator.f4370bc1feb25d18c1820ad3a90b7266" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="Sonata\CoreBundle\Validator\InlineValidator" type="service" id="sonata.admin.validator.inline"/>
        <argument key="Symfony\Bridge\Doctrine\Validator\Constraints\UniqueEntityValidator" type="service" id="doctrine.orm.validator.unique"/>
        <argument key="Symfony\Component\Security\Core\Validator\Constraints\UserPasswordValidator" type="service" id="security.validator.user_password"/>
        <argument key="Symfony\Component\Validator\Constraints\EmailValidator" type="service" id="validator.email"/>
        <argument key="Symfony\Component\Validator\Constraints\ExpressionValidator" type="service" id="validator.expression"/>
        <argument key="doctrine.orm.validator.unique" type="service" id="doctrine.orm.validator.unique"/>
        <argument key="security.validator.user_password" type="service" id="security.validator.user_password"/>
        <argument key="sonata.admin.validator.inline" type="service" id="sonata.admin.validator.inline"/>
        <argument key="sonata.core.validator.inline" type="service" id="sonata.core.validator.inline"/>
        <argument key="validator.expression" type="service" id="validator.expression"/>
      </argument>
    </service>
    <service id="annotations.cached_reader" class="Doctrine\Common\Annotations\CachedReader" public="false">
      <tag name="annotations.cached_reader" provider="annotations.cache"/>
      <argument type="service" id="annotations.reader"/>
      <argument type="service" id="annotations.cache"/>
      <argument>true</argument>
    </service>
    <service id="cache.app.recorder_inner" class="Symfony\Component\Cache\Adapter\FilesystemAdapter" public="false" lazy="true">
      <argument>yzVG+MMWHB</argument>
      <argument>0</argument>
      <argument>D:\wamp64\www\SiteSymfony\SonataBackOffice\var\cache\dev/pools</argument>
      <call method="setLogger">
        <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
      </call>
    </service>
    <service id="cache.system.recorder_inner" class="Symfony\Component\Cache\Adapter\AdapterInterface" public="false" lazy="true">
      <argument>1lT0OrHSKQ</argument>
      <argument>0</argument>
      <argument>6USe48pgWIpbcLk5obWOSl</argument>
      <argument>D:\wamp64\www\SiteSymfony\SonataBackOffice\var\cache\dev/pools</argument>
      <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
      <factory class="Symfony\Component\Cache\Adapter\AbstractAdapter" method="createSystemCache"/>
    </service>
    <service id="cache.validator.recorder_inner" class="Symfony\Component\Cache\Adapter\AdapterInterface" public="false" lazy="true">
      <argument>yfLOLuestm</argument>
      <argument>0</argument>
      <argument>6USe48pgWIpbcLk5obWOSl</argument>
      <argument>D:\wamp64\www\SiteSymfony\SonataBackOffice\var\cache\dev/pools</argument>
      <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
      <factory class="Symfony\Component\Cache\Adapter\AbstractAdapter" method="createSystemCache"/>
    </service>
    <service id="cache.serializer.recorder_inner" class="Symfony\Component\Cache\Adapter\AdapterInterface" public="false" lazy="true">
      <argument>c0Etszua0R</argument>
      <argument>0</argument>
      <argument>6USe48pgWIpbcLk5obWOSl</argument>
      <argument>D:\wamp64\www\SiteSymfony\SonataBackOffice\var\cache\dev/pools</argument>
      <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
      <factory class="Symfony\Component\Cache\Adapter\AbstractAdapter" method="createSystemCache"/>
    </service>
    <service id="cache.annotations.recorder_inner" class="Symfony\Component\Cache\Adapter\AdapterInterface" public="false" lazy="true">
      <argument>ymCgvwEr-z</argument>
      <argument>0</argument>
      <argument>6USe48pgWIpbcLk5obWOSl</argument>
      <argument>D:\wamp64\www\SiteSymfony\SonataBackOffice\var\cache\dev/pools</argument>
      <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
      <factory class="Symfony\Component\Cache\Adapter\AbstractAdapter" method="createSystemCache"/>
    </service>
    <service id="service_locator.8925f20c49cbd61fcb37adf8c595459e" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="Symfony\Bridge\Twig\Extension\HttpKernelRuntime" type="service" id="twig.runtime.httpkernel"/>
        <argument key="Symfony\Bridge\Twig\Form\TwigRenderer" type="service" id="twig.form.renderer"/>
      </argument>
    </service>
    <service id="Psr\Container\ContainerInterface" alias="service_container" public="false"/>
    <service id="Symfony\Component\DependencyInjection\ContainerInterface" alias="service_container" public="false"/>
    <service id="Symfony\Component\EventDispatcher\EventDispatcherInterface" alias="debug.event_dispatcher" public="false"/>
    <service id="Symfony\Component\HttpKernel\HttpKernelInterface" alias="http_kernel" public="false"/>
    <service id="Symfony\Component\HttpFoundation\RequestStack" alias="request_stack" public="false"/>
    <service id="Symfony\Component\HttpKernel\KernelInterface" alias="kernel" public="false"/>
    <service id="Symfony\Component\Filesystem\Filesystem" alias="filesystem" public="false"/>
    <service id="Symfony\Component\HttpKernel\Config\FileLocator" alias="file_locator" public="false"/>
    <service id="Symfony\Component\PropertyAccess\PropertyAccessorInterface" alias="property_accessor" public="false"/>
    <service id="cache.app_clearer" alias="cache.default_clearer"/>
    <service id="Psr\Cache\CacheItemPoolInterface" alias="cache.app" public="false"/>
    <service id="Symfony\Component\Translation\TranslatorInterface" alias="translator.data_collector" public="false"/>
    <service id="Symfony\Component\HttpFoundation\Session\SessionInterface" alias="session" public="false"/>
    <service id="Symfony\Component\HttpFoundation\Session\Storage\SessionStorageInterface" alias="session.storage.native" public="false"/>
    <service id="SessionHandlerInterface" alias="session.handler.native_file" public="false"/>
    <service id="session.storage.filesystem" alias="session.storage.mock_file"/>
    <service id="session.storage" alias="session.storage.native"/>
    <service id="session.handler" alias="session.handler.native_file"/>
    <service id="Symfony\Component\Form\ResolvedFormTypeFactoryInterface" alias="form.resolved_type_factory" public="false"/>
    <service id="Symfony\Component\Form\FormRegistryInterface" alias="form.registry" public="false"/>
    <service id="Symfony\Component\Form\FormFactoryInterface" alias="form.factory" public="false"/>
    <service id="form.property_accessor" alias="property_accessor" public="false"/>
    <service id="form.choice_list_factory" alias="form.choice_list_factory.cached" public="false"/>
    <service id="Symfony\Component\Security\Csrf\TokenGenerator\TokenGeneratorInterface" alias="security.csrf.token_generator" public="false"/>
    <service id="Symfony\Component\Security\Csrf\TokenStorage\TokenStorageInterface" alias="security.csrf.token_storage" public="false"/>
    <service id="Symfony\Component\Security\Csrf\CsrfTokenManagerInterface" alias="security.csrf.token_manager" public="false"/>
    <service id="Symfony\Component\Asset\Packages" alias="assets.packages" public="false"/>
    <service id="templating.loader" alias="templating.loader.filesystem"/>
    <service id="templating" alias="templating.engine.twig"/>
    <service id="Symfony\Component\Validator\Validator\ValidatorInterface" alias="validator" public="false"/>
    <service id="validator.mapping.class_metadata_factory" alias="validator" public="false"/>
    <service id="translator" alias="translator.data_collector"/>
    <service id="cache.default_redis_provider" alias="c66c8daa4fa4dead6a562ed2c4bdb322" public="false"/>
    <service id="cache.default_memcached_provider" alias="8464c6758298cf75d30c4f689fb7886d" public="false"/>
    <service id="Symfony\Component\Stopwatch\Stopwatch" alias="debug.stopwatch" public="false"/>
    <service id="Symfony\Component\HttpKernel\Debug\FileLinkFormatter" alias="debug.file_link_formatter" public="false"/>
    <service id="router" alias="router.default"/>
    <service id="Symfony\Component\Routing\RouterInterface" alias="router.default" public="false"/>
    <service id="Symfony\Component\Routing\Generator\UrlGeneratorInterface" alias="router.default" public="false"/>
    <service id="Symfony\Component\Routing\Matcher\UrlMatcherInterface" alias="router.default" public="false"/>
    <service id="Symfony\Component\Routing\RequestContext" alias="router.request_context" public="false"/>
    <service id="annotation_reader" alias="annotations.cached_reader"/>
    <service id="Doctrine\Common\Annotations\Reader" alias="annotations.cached_reader" public="false"/>
    <service id="Symfony\Component\Security\Core\Authorization\AuthorizationCheckerInterface" alias="security.authorization_checker" public="false"/>
    <service id="Symfony\Component\Security\Core\Authentication\Token\Storage\TokenStorageInterface" alias="security.token_storage" public="false"/>
    <service id="security.encoder_factory" alias="security.encoder_factory.generic"/>
    <service id="Symfony\Component\Security\Core\Encoder\EncoderFactoryInterface" alias="security.encoder_factory.generic" public="false"/>
    <service id="security.password_encoder" alias="security.user_password_encoder.generic"/>
    <service id="Symfony\Component\Security\Core\Encoder\UserPasswordEncoderInterface" alias="security.user_password_encoder.generic" public="false"/>
    <service id="Symfony\Component\Security\Http\Authentication\AuthenticationUtils" alias="security.authentication_utils" public="false"/>
    <service id="Symfony\Component\Security\Core\Authorization\AccessDecisionManagerInterface" alias="debug.security.access.decision_manager" public="false"/>
    <service id="Symfony\Component\Security\Http\Firewall" alias="security.firewall" public="false"/>
    <service id="security.user.provider.concrete.fos_userbundle" alias="fos_user.user_provider.username_email" public="false"/>
    <service id="security.user_checker.admin" alias="security.user_checker" public="false"/>
    <service id="security.user_checker.main" alias="security.user_checker" public="false"/>
    <service id="Symfony\Component\Security\Core\User\UserCheckerInterface" alias="security.user_checker" public="false"/>
    <service id="Twig_Environment" alias="twig" public="false"/>
    <service id="Twig\Environment" alias="twig" public="false"/>
    <service id="logger" alias="monolog.logger"/>
    <service id="Psr\Log\LoggerInterface" alias="monolog.logger" public="false"/>
    <service id="swiftmailer.mailer.default.transport" alias="swiftmailer.mailer.default.transport.spool"/>
    <service id="swiftmailer.mailer.default.spool" alias="swiftmailer.mailer.default.spool.memory"/>
    <service id="swiftmailer.mailer.default.transport.real" alias="swiftmailer.mailer.default.transport.smtp"/>
    <service id="swiftmailer.spool" alias="swiftmailer.mailer.default.spool.memory"/>
    <service id="swiftmailer.transport.real" alias="swiftmailer.mailer.default.transport.smtp"/>
    <service id="Swift_Spool" alias="swiftmailer.mailer.default.spool.memory" public="false"/>
    <service id="swiftmailer.plugin.messagelogger" alias="swiftmailer.mailer.default.plugin.messagelogger"/>
    <service id="swiftmailer.mailer" alias="swiftmailer.mailer.default"/>
    <service id="swiftmailer.transport" alias="swiftmailer.mailer.default.transport.spool"/>
    <service id="Swift_Mailer" alias="swiftmailer.mailer.default" public="false"/>
    <service id="Swift_Transport" alias="swiftmailer.mailer.default.transport.spool" public="false"/>
    <service id="mailer" alias="swiftmailer.mailer.default"/>
    <service id="Doctrine\DBAL\Driver\Connection" alias="doctrine.dbal.default_connection" public="false"/>
    <service id="Doctrine\Common\Persistence\ManagerRegistry" alias="doctrine" public="false"/>
    <service id="database_connection" alias="doctrine.dbal.default_connection"/>
    <service id="doctrine.dbal.event_manager" alias="doctrine.dbal.default_connection.event_manager" public="false"/>
    <service id="Doctrine\Common\Persistence\ObjectManager" alias="doctrine.orm.default_entity_manager" public="false"/>
    <service id="Doctrine\ORM\EntityManagerInterface" alias="doctrine.orm.default_entity_manager" public="false"/>
    <service id="doctrine.orm.metadata.annotation_reader" alias="annotations.cached_reader" public="false"/>
    <service id="doctrine.orm.entity_manager" alias="doctrine.orm.default_entity_manager"/>
    <service id="doctrine.orm.default_metadata_cache" alias="doctrine_cache.providers.doctrine.orm.default_metadata_cache"/>
    <service id="doctrine.orm.default_result_cache" alias="doctrine_cache.providers.doctrine.orm.default_result_cache"/>
    <service id="doctrine.orm.default_query_cache" alias="doctrine_cache.providers.doctrine.orm.default_query_cache"/>
    <service id="doctrine.orm.default_entity_manager.event_manager" alias="doctrine.dbal.default_connection.event_manager" public="false"/>
    <service id="sensio_framework_extra.security.expression_language" alias="sensio_framework_extra.security.expression_language.default" public="false"/>
    <service id="fos_user.doctrine_registry" alias="doctrine" public="false"/>
    <service id="fos_user.mailer" alias="fos_user.mailer.default"/>
    <service id="fos_user.util.email_canonicalizer" alias="fos_user.util.canonicalizer.default"/>
    <service id="fos_user.util.username_canonicalizer" alias="fos_user.util.canonicalizer.default"/>
    <service id="fos_user.util.token_generator" alias="fos_user.util.token_generator.default"/>
    <service id="fos_user.user_manager" alias="fos_user.user_manager.default"/>
    <service id="fos_user.group_manager" alias="fos_user.group_manager.default"/>
    <service id="sonata.block.context_manager" alias="sonata.block.context_manager.default"/>
    <service id="sonata.block.cache.handler" alias="sonata.block.cache.handler.default"/>
    <service id="sonata.block.renderer" alias="sonata.block.renderer.default"/>
    <service id="sonata.admin.security.handler" alias="sonata.admin.security.handler.noop"/>
    <service id="Symfony\Component\Templating\EngineInterface" alias="templating.engine.twig" public="false"/>
    <service id="Symfony\Bundle\FrameworkBundle\Templating\EngineInterface" alias="templating.engine.twig" public="false"/>
    <service id="console.command.symfony_bundle_securitybundle_command_userpasswordencodercommand" alias="security.console.user_password_encoder_command"/>
    <service id="console.command.symfony_bundle_webserverbundle_command_serverruncommand" alias="web_server.command.server_run"/>
    <service id="console.command.symfony_bundle_webserverbundle_command_serverstartcommand" alias="web_server.command.server_start"/>
    <service id="console.command.symfony_bundle_webserverbundle_command_serverstopcommand" alias="web_server.command.server_stop"/>
    <service id="console.command.symfony_bundle_webserverbundle_command_serverstatuscommand" alias="web_server.command.server_status"/>
    <service id="twig.loader" alias="twig.loader.filesystem"/>
    <service id="knp_menu.menu_provider" alias="knp_menu.menu_provider.chain"/>
    <service id="service_locator.b8d2046fb854cde05549fb309e1a80d2" alias="1_51ac5049b75afe4da2e7c80d146b4c40dde19228017e87312ae4254790686ffe" public="false"/>
    <service id="translator.logging.inner" alias="translator.default" public="false"/>
    <service id="translator.data_collector.inner" alias="translator.logging" public="false"/>
    <service id="event_dispatcher" alias="debug.event_dispatcher"/>
    <service id="controller_resolver" alias="debug.controller_resolver" public="false"/>
    <service id="argument_resolver" alias="debug.argument_resolver" public="false"/>
    <service id="security.access.decision_manager" alias="debug.security.access.decision_manager" public="false"/>
  </services>
</container>
